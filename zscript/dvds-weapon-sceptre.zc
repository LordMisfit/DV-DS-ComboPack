// ********************************************************
// ** Sceptre Defensive Mode [Reflective/Non-Reflective] **
// ********************************************************

// Sceptre Cruft and Stuff ;P
class ShieldPart : ShieldPartBase // The Main segment of the sceptre-shield which deflects/blocks attacks
{
	default
	{
		+REFLECTIVE;
		+AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA C 2 bright NoDelay 
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(19,19); }
			}
			stop;
		Pain.Magic:
			TNT1 A 0;
			stop;
		Pain.Sceptre:
			TNT1 A 0;
			stop;
		Pain:
			TNT1 A 0 bright 
			{
				A_StartSound("SceptreBlocked", 53);
			}
			stop;
		Death:
			TNT1 A 0;
			stop;
	}
}

class ShieldPartNoReflect : ShieldPart
{
	default
	{
		-REFLECTIVE;
		-AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA A 2 bright NoDelay
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(19,19); }
			}
			stop;
	}
}

class ShieldPartSpinAttack1 : ShieldPart
{
	default
	{
		-REFLECTIVE;
		-AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA A 3 bright NoDelay
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop;
	}
}
class ShieldPartSpinAttack1D : ShieldPartSpinAttack1 
{
	default
	{
		+REFLECTIVE;
		+AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA C 3 bright NoDelay
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop;
	}
}

class ShieldPartSpinAttack2 : ShieldPart
{
	default
	{
		-REFLECTIVE;
		-AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA A 6 bright NoDelay
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop;
	}
}
class ShieldPartSpinAttack2D : ShieldPartSpinAttack2
{
	default
	{
		+REFLECTIVE;
		+AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA C 6 bright NoDelay
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop;
	}
}

class ShieldPartSpinAttack3 : ShieldPart
{
	default
	{
		-REFLECTIVE;
		-AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA A 9 bright NoDelay
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop;
	}
}
class ShieldPartSpinAttack3D : ShieldPartSpinAttack3
{
	default
	{
		+REFLECTIVE;
		+AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA C 9 bright NoDelay
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop;
	}
}

class ShieldPartSpinAttack4 : ShieldPart
{
	default
	{
		-REFLECTIVE;
		-AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA A 12 bright NoDelay
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop;
	}
}
class ShieldPartSpinAttack4D : ShieldPartSpinAttack4
{
	default
	{
		+REFLECTIVE;
		+AIMREFLECT;
	}
	
	States
	{
		Spawn:
			HEXA C 12 bright NoDelay
			{
				if (dvdsdebug_showvisibleshieldparts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop;
	}
}

// SceptrePartVisual[x][y] represents the visual sprites of the sceptre mid-twirl
class SceptrePartVisualBase : ShieldPartBase
{
	default
	{
		Health 2147483646;
		Painchance 256;
		Radius 16; // 16
		Height 32; // 16
		Scale 0.5;
		Alpha 0.75;
		RenderStyle "Add"; //Translucent
		Species "Players";
		+NOTARGET;
		+NEVERTARGET;
		+BUDDHA;
		+DONTBLAST;
		+SOLID;
		+NOGRAVITY;
		+NOTELEPORT;
		+NODAMAGE;
		+DONTRIP;
		+NOBLOOD;
		+NOBLOODDECALS;
		+FLOORCLIP;
		+NOTELESTOMP;
		+NOTIMEFREEZE;
		+THRUSPECIES;
		+MTHRUSPECIES;
		+NOINTERACTION;
		+REFLECTIVE;
		+AIMREFLECT;
	}

	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR3 A 2 bright;
			stop;
		Pain.Magic:
			TNT1 A 0;
			stop;
		Pain.Sceptre:
			TNT1 A 0;
			stop;
		Pain:
			TNT1 A 0 bright 
			{
				A_StartSound("SceptreBlocked");
			}
			stop;
		Death:
			TNT1 A 0;
			stop;
	}
}

class SceptrePartVisual1 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR3 A 2 bright;
			stop;
	}
}

class SceptrePartVisual2 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR3 B 2 bright;
			stop;
	}
}

class SceptrePartVisual3 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR3 C 2 bright;
			stop;
	}
}

class SceptrePartVisual4 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR3 D 2 bright;
			stop;
	}
}

class SceptrePartVisual5 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR3 E 2 bright;
			stop;
	}
}

class SceptrePartVisual6 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR3 F 2 bright;
			stop;
	}
}

class SceptrePartVisual7 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR3 G 2 bright;
			stop;
	}
}

class SceptrePartVisual8 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR3 H 2 bright;
			stop;
	}
}

class SceptrePartVisual1b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR2 A 2 bright;
			stop;
	}
}

class SceptrePartVisual2b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR2 B 2 bright;
			stop;
	}
}

class SceptrePartVisual3b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR2 C 2 bright;
			stop;
	}
}

class SceptrePartVisual4b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR2 D 2 bright;
			stop;
	}
}

class SceptrePartVisual5b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR2 E 2 bright;
			stop;
	}
}

class SceptrePartVisual6b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR2 F 2 bright;
			stop;
	}
}

class SceptrePartVisual7b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR2 G 2 bright;
			stop;
	}
}

class SceptrePartVisual8b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(scale.x*1.2,scale.y*1.2); A_SetSize(36,36); }
			}
			STR2 H 2 bright;
			stop;
	}
}

// Central Actor that spawns the actors to represent the Sceptre's shielding alt-fire
class ShieldSpawner : AetheriusBaseZSC
{
	int user_spawnchance;
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (random(1,256) >= 256)
				{
					if (CountInv("PlayingStrife")) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters(); } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
			}
		Finish:
			TNT1 A 0 
			{
				user_spawnchance = 1 - (CallACS("OtherVarCheckDECORATE",11) / 8);
				if (random(1,256) > user_spawnchance)
				{
					A_SpawnItemEx("ShieldSpawner6upNoReflect", A_SetShieldPieceDist(0), A_SetShieldPieceDist(0), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
					A_SpawnItemEx("ShieldSpawner5upNoReflect", A_SetShieldPieceDist(16), A_SetShieldPieceDist(-8), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
					A_SpawnItemEx("ShieldSpawner5upNoReflect", A_SetShieldPieceDist(-16), A_SetShieldPieceDist(-8), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
					A_SpawnItemEx("ShieldSpawner4upNoReflect", A_SetShieldPieceDist(32), A_SetShieldPieceDist(-21), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
					A_SpawnItemEx("ShieldSpawner4upNoReflect", A_SetShieldPieceDist(-32), A_SetShieldPieceDist(-21), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);

					user_spawnchance = 3 - ((CallACS("OtherVarCheckDECORATE",11) * 2) / 3);
					if (random(1,256) > user_spawnchance)
					{
						A_SpawnItemEx("ShieldSpawner6upNoReflect", A_SetShieldPieceDist(0), A_SetShieldPieceDist(8), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
						A_SpawnItemEx("ShieldSpawner5upNoReflect", A_SetShieldPieceDist(16), A_SetShieldPieceDist(0), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
						A_SpawnItemEx("ShieldSpawner5upNoReflect", A_SetShieldPieceDist(-16), A_SetShieldPieceDist(0), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
						A_SpawnItemEx("ShieldSpawner4upNoReflect", A_SetShieldPieceDist(32), A_SetShieldPieceDist(-11), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
						A_SpawnItemEx("ShieldSpawner4upNoReflect", A_SetShieldPieceDist(-32), A_SetShieldPieceDist(-11), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);

						user_spawnchance = 10 - ((CallACS("OtherVarCheckDECORATE",11) * 16) / 5);
						if (random(1,256) > user_spawnchance)
						{
							A_SpawnItemEx("ShieldSpawner6up", A_SetShieldPieceDist(0), A_SetShieldPieceDist(16), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							A_SpawnItemEx("ShieldSpawner5up", A_SetShieldPieceDist(16), A_SetShieldPieceDist(8), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							A_SpawnItemEx("ShieldSpawner5up", A_SetShieldPieceDist(-16), A_SetShieldPieceDist(8), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							A_SpawnItemEx("ShieldSpawner4up", A_SetShieldPieceDist(32), A_SetShieldPieceDist(-3), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							A_SpawnItemEx("ShieldSpawner4up", A_SetShieldPieceDist(-32), A_SetShieldPieceDist(-3), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);

							user_spawnchance = 30 - ((CallACS("OtherVarCheckDECORATE",11) * 18) / 2);
							if (random(1,256) > user_spawnchance)
							{
								A_SpawnItemEx("ShieldSpawner3upNoReflect", A_SetShieldPieceDist(40), A_SetShieldPieceDist(-30), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3upNoReflect", A_SetShieldPieceDist(-40), A_SetShieldPieceDist(-30), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3upNoReflect", A_SetShieldPieceDist(40), A_SetShieldPieceDist(-25), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3upNoReflect", A_SetShieldPieceDist(-40), A_SetShieldPieceDist(-25), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3up", A_SetShieldPieceDist(40), A_SetShieldPieceDist(-16), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3up", A_SetShieldPieceDist(-40), A_SetShieldPieceDist(-16), A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							}
						}
					}
				}
			}
			stop;
	}
}

// Shield Alt-fire actors
class ShieldSpawner6up : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(-8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(56), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(72), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}

class ShieldSpawner6upNoReflect : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(-8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(56), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(72), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}

class ShieldSpawner5up : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(64), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}

class ShieldSpawner5upNoReflect : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(64), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}

class ShieldSpawner4up : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(56), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}

class ShieldSpawner4upNoReflect : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(56), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}

class ShieldSpawner3up : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}

class ShieldSpawner3upNoReflect : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}


class ShieldSpawner2up : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, A_SetShieldPieceDist(40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}

class ShieldSpawner2upNoReflect : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, A_SetShieldPieceDist(40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop;
	}
}

class ShieldHit : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		Scale 0.5;
		Renderstyle "Add";
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	
	States
	{
		Spawn:
			FHIT A 1 bright A_Stop();
			FHIT A 0 bright A_StartSound("ForceBarrier/Hit", 53);
			FHIT BCDEFGH 1 bright;
			stop;
	}
}


// ******************
// ** Impact Puffs **
// ******************
// Direct Swing Puff [has a bit of impact radius]
class SceptrePuffShockWave : AetheriusPuffZSC
{
	int user_sceptrelevel;
	int user_sceptrepuffanim;
	default
	{
		Tag "Sceptre of Empyrea";
		Scale 0.375;
		VSpeed 0;
		RenderStyle "Translucent";
		+NOINTERACTION;
		+SPECTRAL;
	}

	States
	{
		Spawn:
			TNT1 A 0 
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 4) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 5 && user_sceptrelevel <= 8) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 9 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 2; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 3; }
			}
			goto CheckScaleAlpha;

		CheckScaleAlpha:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"Level16");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 15,"Level15");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 14,"Level14");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 13,"Level13");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 12,"Level12");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 11,"Level11");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 10,"Level10");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 9,"Level9");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 8,"Level8");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 7,"Level7");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 6,"Level6");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 5,"Level5");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 4,"Level4");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 3,"Level3");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 2,"Level2");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 1,"Level1");
			goto Level0;

		Level0:
			TNT1 A 0 A_SetScale(0.375);
			TNT1 A 0 A_FadeTo(0.5);
			goto Finish;
		Level1:
			TNT1 A 0 A_SetScale(0.40625);
			TNT1 A 0 A_FadeTo(0.5208333);
			goto Finish;
		Level2:
			TNT1 A 0 A_SetScale(0.4375);
			TNT1 A 0 A_FadeTo(0.5416666);
			goto Finish;
		Level3:
			TNT1 A 0 A_SetScale(0.46875);
			TNT1 A 0 A_FadeTo(0.5625);
			goto Finish;
		Level4:
			TNT1 A 0 A_SetScale(0.5);
			TNT1 A 0 A_FadeTo(0.583333);
			goto Finish;
		Level5:
			TNT1 A 0 A_SetScale(0.53125);
			TNT1 A 0 A_FadeTo(0.60416666);
			goto Finish;
		Level6:
			TNT1 A 0 A_SetScale(0.5625);
			TNT1 A 0 A_FadeTo(0.625);
			goto Finish;
		Level7:
			TNT1 A 0 A_SetScale(0.59375);
			TNT1 A 0 A_FadeTo(0.64583333);
			goto Finish;
		Level8:
			TNT1 A 0 A_SetScale(0.625);
			TNT1 A 0 A_FadeTo(0.66667);
			goto Finish;
		Level9:
			TNT1 A 0 A_SetScale(0.65625);
			TNT1 A 0 A_FadeTo(0.6875);
			goto Finish;
		Level10:
			TNT1 A 0 A_SetScale(0.6875);
			TNT1 A 0 A_FadeTo(0.7083333);
			goto Finish;
		Level11:
			TNT1 A 0 A_SetScale(0.71875);
			TNT1 A 0 A_FadeTo(0.72916666);
			goto Finish;
		Level12:
			TNT1 A 0 A_SetScale(0.75);
			TNT1 A 0 A_FadeTo(0.75);
			goto Finish;
		Level13:
			TNT1 A 0 A_SetScale(0.78125);
			TNT1 A 0 A_FadeTo(0.77083333);
			goto Finish;
		Level14:
			TNT1 A 0 A_SetScale(0.8125);
			TNT1 A 0 A_FadeTo(0.7916666);
			goto Finish;
		Level15:
			TNT1 A 0 A_SetScale(0.84375);
			TNT1 A 0 A_FadeTo(0.8125);
			goto Finish;
		Level16:
			TNT1 A 0 A_SetScale(0.875);
			TNT1 A 0 A_FadeTo(0.833333);
			goto Finish;

		Finish:
			TNT1 A 0 { A_HitSparkGetSize2(); }
			//SCSK GHIJK 1 BRIGHT A_Fadeout(alpha/7)
			SCIM G 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM H 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM I 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM J 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM K 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM L 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM M 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			stop;
	}
}

class SceptrePuffNormal : AetheriusPuffZSC
{
	int user_sceptrelevel;
	int user_sceptrepuffanim;
	default
	{
		Tag "Sceptre of Empyrea";
		VSpeed 0;
		RenderStyle "Translucent";
		Species "Players";
		+FORCERADIUSDMG;
		+PUFFGETSOWNER;
		+PUFFONACTORS;
		+FORCEPAIN;
		+THRUSPECIES;
		+MTHRUSPECIES;
		+SPECTRAL;
		damagetype "Sceptre";
	
		//decal "SceptreScorch";
		Scale 0.375;
		Alpha 1;
	}
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(0,0,1,true), A_MeleeImpactRadius(0), 0, 0, (A_MeleeImpactRadius(0)/4));
			}
			TNT1 A 0 
			{
				A_Quake((A_QuakeMeleeIntensity(0)),(A_QuakeMeleeDuration(0)),0,(A_QuakeMeleeTremrad(0)),"nosound/silent");
			}
			goto MakeImpactSoundSpawnMelee;
		Melee:
			TNT1 A 1 
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(0,0,1,true), A_MeleeImpactRadius(0), 0, 0, (A_MeleeImpactRadius(0)/4));
			}
			TNT1 A 0 
			{
				A_Quake((A_QuakeMeleeIntensity(0)),(A_QuakeMeleeDuration(0)),0,(A_QuakeMeleeTremrad(0)),"nosound/silent");
			}
			goto MakeImpactSoundSpawnMelee;
		Crash:
			TNT1 A 1 
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(0,0,1,true), A_MeleeImpactRadius(0), 0, 0, (A_MeleeImpactRadius(0)/4));
			}
			TNT1 A 0 
			{
				A_Quake((A_QuakeMeleeIntensity(0)),(A_QuakeMeleeDuration(0)),0,(A_QuakeMeleeTremrad(0)),"nosound/silent");
			}
			goto MakeImpactSoundCrash;

		MeleeSound1:
			TNT1 A 0 A_StartSound("SceptreHitThing1", 54);
			goto CheckScaleAlpha;
		MeleeSound2:
			TNT1 A 0 A_StartSound("SceptreHitThing2", 54);
			goto CheckScaleAlpha;
		MeleeSound3:
			TNT1 A 0 A_StartSound("SceptreHitThing3", 54);
			goto CheckScaleAlpha;

		CrashSound1:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall", 55);
			goto CheckScaleAlpha;
		CrashSound2:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall1", 55);
			goto CheckScaleAlpha;
		CrashSound3:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall2", 55);
			goto CheckScaleAlpha;

		MakeImpactSoundSpawnMelee:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"MeleeSound3");
			TNT1 A 0 A_JumpIf(user_sceptrelevel > 7 && user_sceptrelevel < 16,"MeleeSound2");
			TNT1 A 0 A_JumpIf(user_sceptrelevel < 8,"MeleeSound1");
			goto CheckScaleAlpha;
		MakeImpactSoundCrash:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"CrashSound3");
			TNT1 A 0 A_JumpIf(user_sceptrelevel > 7 && user_sceptrelevel < 16,"CrashSound2");
			TNT1 A 0 A_JumpIf(user_sceptrelevel < 8,"CrashSound1");
			goto CheckScaleAlpha;

		CheckScaleAlpha:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"Level16");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 15,"Level15");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 14,"Level14");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 13,"Level13");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 12,"Level12");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 11,"Level11");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 10,"Level10");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 9,"Level9");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 8,"Level8");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 7,"Level7");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 6,"Level6");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 5,"Level5");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 4,"Level4");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 3,"Level3");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 2,"Level2");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 1,"Level1");
			goto Level0;

		Level0:
			TNT1 A 0 A_SetScale(0.375);
			TNT1 A 0 A_FadeTo(0.5);
			goto Finish;
		Level1:
			TNT1 A 0 A_SetScale(0.40625);
			TNT1 A 0 A_FadeTo(0.5208333);
			goto Finish;
		Level2:
			TNT1 A 0 A_SetScale(0.4375);
			TNT1 A 0 A_FadeTo(0.5416666);
			goto Finish;
		Level3:
			TNT1 A 0 A_SetScale(0.46875);
			TNT1 A 0 A_FadeTo(0.5625);
			goto Finish;
		Level4:
			TNT1 A 0 A_SetScale(0.5);
			TNT1 A 0 A_FadeTo(0.583333);
			goto Finish;
		Level5:
			TNT1 A 0 A_SetScale(0.53125);
			TNT1 A 0 A_FadeTo(0.60416666);
			goto Finish;
		Level6:
			TNT1 A 0 A_SetScale(0.5625);
			TNT1 A 0 A_FadeTo(0.625);
			goto Finish;
		Level7:
			TNT1 A 0 A_SetScale(0.59375);
			TNT1 A 0 A_FadeTo(0.64583333);
			goto Finish;
		Level8:
			TNT1 A 0 A_SetScale(0.625);
			TNT1 A 0 A_FadeTo(0.66667);
			goto Finish;
		Level9:
			TNT1 A 0 A_SetScale(0.65625);
			TNT1 A 0 A_FadeTo(0.6875);
			goto Finish;
		Level10:
			TNT1 A 0 A_SetScale(0.6875);
			TNT1 A 0 A_FadeTo(0.7083333);
			goto Finish;
		Level11:
			TNT1 A 0 A_SetScale(0.71875);
			TNT1 A 0 A_FadeTo(0.72916666);
			goto Finish;
		Level12:
			TNT1 A 0 A_SetScale(0.75);
			TNT1 A 0 A_FadeTo(0.75);
			goto Finish;
		Level13:
			TNT1 A 0 A_SetScale(0.78125);
			TNT1 A 0 A_FadeTo(0.77083333);
			goto Finish;
		Level14:
			TNT1 A 0 A_SetScale(0.8125);
			TNT1 A 0 A_FadeTo(0.7916666);
			goto Finish;
		Level15:
			TNT1 A 0 A_SetScale(0.84375);
			TNT1 A 0 A_FadeTo(0.8125);
			goto Finish;
		Level16:
			TNT1 A 0 A_SetScale(0.875);
			TNT1 A 0 A_FadeTo(0.833333);
			goto Finish;

		Finish:
			TNT1 A 0 { A_HitSparkGetSize2(); }
			//SCPU CCDDDEEEFFFGGG 1 BRIGHT A_Fadeout(alpha/5)
			SCIM A 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			SCIM B 1 BRIGHT
			{
				if (user_sceptrepuffanim == 1) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			SCIM C 1 BRIGHT
			{
				A_SpawnItemEx("SceptrePuffShockWave",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE);
				if (user_sceptrepuffanim == 2) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			SCIM D 1 BRIGHT
			{
				if (user_sceptrepuffanim == 1) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			SCIM E 1 BRIGHT 
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			Stop;
	}
}
class SceptrePuffSilent : SceptrePuffNormal
{
	default
	{
		Tag "Sceptre of Empyrea";
	}
	States
	{
		MeleeSound1:
			TNT1 A 0;
			goto CheckScaleAlpha;
		MeleeSound2:
			TNT1 A 0;
			goto CheckScaleAlpha;
		MeleeSound3:
			TNT1 A 0;
			goto CheckScaleAlpha;

		CrashSound1:
			TNT1 A 0;
			goto CheckScaleAlpha;
		CrashSound2:
			TNT1 A 0;
			goto CheckScaleAlpha;
		CrashSound3:
			TNT1 A 0;
			goto CheckScaleAlpha;
	}
}
// Sceptre Spinning Attack Ghost Reticle
class SceptrePuffReticle : AetheriusPuffZSC
{
	default
	{
		VSpeed 0;
		RenderStyle "Translucent";
		+NOINTERACTION;
		+NOTIMEFREEZE;

		//decal "SceptreScorch";
		Scale 0.0375;
		Alpha 0.5;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			goto Finish;
		Melee:
			TNT1 A 1;
			goto Finish;
		Crash:
			TNT1 A 1;
			goto Finish;

		Finish:
			SCHR B 1 BRIGHT { A_Fadeout(alpha/6); }
			stop;
	}
}
// Sceptre Swing Attack Ghost Reticle
class SceptrePuffReticle2 : SceptrePuffReticle
{
	default
	{
		Scale 0.020;
		Alpha 0.375;
	}
	States
	{
		Spawn:
			TNT1 A 1 NoDelay;
			goto Finish;
		Melee:
			TNT1 A 1;
			goto Finish;
		Crash:
			TNT1 A 1;
			goto Finish;

		Finish:
			SCHR A 1 BRIGHT { A_Fadeout(alpha/6); }
			stop;
	}
}

// Spinning Attack Puffs [have a bit of impact radius]
class SceptrePuffSpinning : AetheriusPuffZSC
{
	int user_sceptrelevel;
	int user_sceptrepuffanim;
	default
	{
		Tag "Sceptre of Empyrea";
		VSpeed 0;
		RenderStyle "Translucent";
		Species "Players";
		+FORCERADIUSDMG;
		+PUFFGETSOWNER;
		+PUFFONACTORS;
		+FORCEPAIN;
		+THRUSPECIES;
		+MTHRUSPECIES;
		+SPECTRAL;
		damagetype "Sceptre";

		//decal "SceptreScorch";
		SeeSound "SceptreHitThing1"; // Hits a target
		AttackSound "SceptreEmpyrea/HitWall"; // Hits a wall
		Scale 0.375;
		Alpha 1;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(2,-1,1,true), A_MeleeImpactRadius(2), 0, 0, (A_MeleeImpactRadius(2)/4));
			}
			goto MakeImpactSoundSpawnMelee;
		Melee:
			TNT1 A 1
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(2,-1,1,true), A_MeleeImpactRadius(2), 0, 0, (A_MeleeImpactRadius(2)/4));
			}
			goto MakeImpactSoundSpawnMelee;
		Crash:
			TNT1 A 1
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(2,-1,1,true), A_MeleeImpactRadius(2), 0, 0, (A_MeleeImpactRadius(2)/4));
			}
			goto MakeImpactSoundCrash;

		MeleeSound1:
			TNT1 A 0 A_StartSound("SceptreHitThing1", 54);
			goto CheckScaleAlpha;
		MeleeSound2:
			TNT1 A 0 A_StartSound("SceptreHitThing2", 54);
			goto CheckScaleAlpha;
		MeleeSound3:
			TNT1 A 0 A_StartSound("SceptreHitThing3", 54);
			goto CheckScaleAlpha;

		CrashSound1:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall", 55);
			goto CheckScaleAlpha;
		CrashSound2:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall1", 55);
			goto CheckScaleAlpha;
		CrashSound3:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall2", 55);
			goto CheckScaleAlpha;

		MakeImpactSoundSpawnMelee:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"MeleeSound3");
			TNT1 A 0 A_JumpIf(user_sceptrelevel > 7 && user_sceptrelevel < 16,"MeleeSound2");
			TNT1 A 0 A_JumpIf(user_sceptrelevel < 8,"MeleeSound1");
			goto CheckScaleAlpha;
		MakeImpactSoundCrash:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"CrashSound3");
			TNT1 A 0 A_JumpIf(user_sceptrelevel > 7 && user_sceptrelevel < 16,"CrashSound2");
			TNT1 A 0 A_JumpIf(user_sceptrelevel < 8,"CrashSound1");
			goto CheckScaleAlpha;

		CheckScaleAlpha:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"Level16");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 15,"Level15");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 14,"Level14");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 13,"Level13");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 12,"Level12");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 11,"Level11");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 10,"Level10");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 9,"Level9");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 8,"Level8");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 7,"Level7");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 6,"Level6");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 5,"Level5");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 4,"Level4");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 3,"Level3");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 2,"Level2");
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 1,"Level1");
			goto Level0;

		Level0:
			TNT1 A 0 A_SetScale(0.375);
			TNT1 A 0 A_FadeTo(0.5);
			goto Finish;
		Level1:
			TNT1 A 0 A_SetScale(0.40625);
			TNT1 A 0 A_FadeTo(0.5208333);
			goto Finish;
		Level2:
			TNT1 A 0 A_SetScale(0.4375);
			TNT1 A 0 A_FadeTo(0.5416666);
			goto Finish;
		Level3:
			TNT1 A 0 A_SetScale(0.46875);
			TNT1 A 0 A_FadeTo(0.5625);
			goto Finish;
		Level4:
			TNT1 A 0 A_SetScale(0.5);
			TNT1 A 0 A_FadeTo(0.583333);
			goto Finish;
		Level5:
			TNT1 A 0 A_SetScale(0.53125);
			TNT1 A 0 A_FadeTo(0.60416666);
			goto Finish;
		Level6:
			TNT1 A 0 A_SetScale(0.5625);
			TNT1 A 0 A_FadeTo(0.625);
			goto Finish;
		Level7:
			TNT1 A 0 A_SetScale(0.59375);
			TNT1 A 0 A_FadeTo(0.64583333);
			goto Finish;
		Level8:
			TNT1 A 0 A_SetScale(0.625);
			TNT1 A 0 A_FadeTo(0.66667);
			goto Finish;
		Level9:
			TNT1 A 0 A_SetScale(0.65625);
			TNT1 A 0 A_FadeTo(0.6875);
			goto Finish;
		Level10:
			TNT1 A 0 A_SetScale(0.6875);
			TNT1 A 0 A_FadeTo(0.7083333);
			goto Finish;
		Level11:
			TNT1 A 0 A_SetScale(0.71875);
			TNT1 A 0 A_FadeTo(0.72916666);
			goto Finish;
		Level12:
			TNT1 A 0 A_SetScale(0.75);
			TNT1 A 0 A_FadeTo(0.75);
			goto Finish;
		Level13:
			TNT1 A 0 A_SetScale(0.78125);
			TNT1 A 0 A_FadeTo(0.77083333);
			goto Finish;
		Level14:
			TNT1 A 0 A_SetScale(0.8125);
			TNT1 A 0 A_FadeTo(0.7916666);
			goto Finish;
		Level15:
			TNT1 A 0 A_SetScale(0.84375);
			TNT1 A 0 A_FadeTo(0.8125);
			goto Finish;
		Level16:
			TNT1 A 0 A_SetScale(0.875);
			TNT1 A 0 A_FadeTo(0.833333);
			goto Finish;

		Finish:
			TNT1 A 0 { A_HitSparkGetSize2(); }
			SCIM A 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			SCIM B 1 BRIGHT
			{
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			SCIM C 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			SCIM D 1 BRIGHT
			{
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			SCIM E 1 BRIGHT 
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			Stop;
	}
}

class SceptrePuffSpinningSilent : SceptrePuffSpinning
{
	default
	{
		Tag "Sceptre of Empyrea";
	}

	States
	{
		MeleeSound1:
			TNT1 A 0;
			goto CheckScaleAlpha;
		MeleeSound2:
			TNT1 A 0;
			goto CheckScaleAlpha;
		MeleeSound3:
			TNT1 A 0;
			goto CheckScaleAlpha;

		CrashSound1:
			TNT1 A 0;
			goto CheckScaleAlpha;
		CrashSound2:
			TNT1 A 0;
			goto CheckScaleAlpha;
		CrashSound3:
			TNT1 A 0;
			goto CheckScaleAlpha;
	}
}

//**************************
//**************************
//**The Main Weapon itself**
//**************************
//**************************
class SceptreOfEmpyrea : FloraWeapon 
{
	double angoffset, ptcoffset;
	default
	{
		//$NotAngled;
		//$Color 14;
		//$Category "DV-DS Weapons/Flora/Normal";
		Tag "Sceptre of Empyrea";
		scale 0.5;
		Weapon.SlotPriority 1;
		Weapon.KickBack 256;
		+SPECTRAL;
		+DONTGIB;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOALERT;
		+WEAPON.MELEEWEAPON;
		Inventory.PickupMessage "What a sight... Simplistic in It's Majesty... \cx[Slot 1]\c-";
		Obituary "%o was smacked out of the ballpark by %k's \cjSceptre of Empyrea\c-";
	}

	States
	{
		//*******************
		//** NORMAL ATTACK **
		//*******************
		// Level 16 of Sceptre = 16[-4] Tics of Swing (-1), 1255-1305 Damage (15*16), 192 Range (+6), -4.31% Stamina
		SceptreSwingLv16: // 4 Frames
			SCLG A 1 { } // 1 [lower 1]
			SCLG B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCLG C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 3 [lower 3]
			SCLG D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
		SceptreSwingLv16Hold: // 1 Frame
			SCLG E 1 // 1 = 5 [lower 5]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv16Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv16Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv16Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv16Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv16Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv16Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv16Swing: // 1 Frame
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv16Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense3",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl16",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM E 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [swing 1]
			goto SceptreSwingHit;
		SceptreSwingLv16End: // 5 Frames
			SCEM H 1 bright { } // 1 = 7 [Attacking Frame] [H] [swing 2]
			SCEM I 1 { } // 1 = 8 [swing 3]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 9 [swing 4]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 10 [swing 5]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [swing 6]

		SceptreSwingLv16Raise: // 5 Frames
			SCLG F 1 { } // 1 = 12 [raising 1]
			SCLG G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 13 [raising 2]
			SCLG H 1 { } // 1 = 14 [raising 3]
			SCLG J 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 15 [raising 4]
			SCLG K 1 { } // 1 = 16 [raising 5]
			goto EndSceptreSwing;



		// Level 15 of Sceptre = 17[-4] Tics of Swing (-1), 1015-1065 Damage (0*15), 185 Range (+4), -4.42% Stamina
		SceptreSwingLv15: // 5 Frames
			SCLF A 1 { } // 1 [lower 1]
			SCLF B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCLF C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 3 [lower 3]
			SCLF D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCLF E 1 { } // 1 = 5 [lower 5]
		SceptreSwingLv15Hold: // 1 Frame
			SCLF F 1 // 1 = 6 [lower 6]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv15Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv15Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv15Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv15Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv15Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv15Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv15Swing: // 1 Frame
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv15Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense3",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl15",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM E 1 { } // 1 = 7 [swing 1]
			goto SceptreSwingHit;
		SceptreSwingLv15End: // 5 Frames
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 8 [Attacking Frame] [H] [swing 2]
			SCEM I 1 { } // 1 = 9 [swing 3]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 10 [swing 4]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 11 [swing 5]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 12 [swing 6]

		SceptreSwingLv15Raise: // 5 Frames
			SCLF G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 13 [raising 1]
			SCLF H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 14 [raising 2]
			SCLF I 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 15 [raising 3]
			SCLF J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 16 [raising 4]
			SCLF K 1 { } // 1 = 17 [raising 5]
			goto EndSceptreSwing;



		// Level 14 of Sceptre = 18[-4] Tics of Swing (-1), 1015-1065 Damage (+10*14), 180 Range (+2), -4.53% Stamina
		SceptreSwingLv14:
			SCLE A 1 { } // 1 [lower 1]
			SCLE B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCLE C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 3 [lower 3]
			SCLE D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCLE E 1 { } // 1 = 5 [lower 5]
		SceptreSwingLv14Hold:
			SCLE F 1 // 1 = 6 [lower 6]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv14Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv14Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv14Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv14Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv14Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv14Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv14Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv14Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense2",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl14",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM E 1 { } // 1 = 7 [swing 1]
			goto SceptreSwingHit;
		SceptreSwingLv14End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 8 [Attacking Frame] [H] [swing 2]
			SCEM I 1 { } // 1 = 9 [swing 3]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 10 [swing 4]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 11 [swing 5]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 12 [swing 6]

		SceptreSwingLv14Raise:
			SCLE F 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 13 [raising 1]
			SCLE E 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 14 [raising 2]
			SCLE D 1 { } // 1 = 15 [raising 3]
			SCLE C 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 16 [raising 4]
			SCLE B 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 17 [raising 5]
			SCLE A 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 18 [raising 6]
			goto EndSceptreSwing;



		// Level 13 of Sceptre = 19[-4] Tics of Swing (-1), 875-925 Damage (+5*13), 178 Range (+4), -4.64% Stamina
		SceptreSwingLv13:
			SCLD A 1 { } // 1 [lower 1]
			SCLD B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCLD C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 3 [lower 3]
			SCLD D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCLD E 1 { } // 1 = 5 [lower 5]
		SceptreSwingLv13Hold:
			SCLD F 1 // 1 = 6 [lower 6]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv13Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv13Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv13Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv13Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv13Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv13Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv13Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv13Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense2",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl13",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 7 [swing 1]
			SCEM F 1 { } // 1 = 8 [swing 2]
			goto SceptreSwingHit;
		SceptreSwingLv13End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 9 [Attacking Frame] [H] [swing 3]
			SCEM I 1 { } // 1 = 10 [swing 4]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [swing 5]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 12 [swing 6]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [swing 7]

		SceptreSwingLv13Raise:
			SCLD F 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 14 [raising 1]
			SCLD E 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 15 [raising 2]
			SCLD D 1 { } // 1 = 16 [raising 3]
			SCLD C 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 17 [raising 4]
			SCLD B 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 18 [raising 5]
			SCLD A 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 19 [raising 6]
			goto EndSceptreSwing;



		// Level 12 of Sceptre = 20[-4] Tics of Swing (-1), 810-860 Damage (+5*12), 173 Range (+2), -4.74% Stamina
		SceptreSwingLv12:
			SCLC A 1 { } // 1 [lower 1]
			SCLC B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCLC C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 3 [lower 3]
			SCLC D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCLC E 1 { } // 1 = 5 [lower 5]
		SceptreSwingLv12Hold:
			SCLC F 1 // 1 = 6 [lower 6]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv12Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv12Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv12Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv12Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv12Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv12Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv12Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv12Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense2",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl12",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 7 [swing 1]
			SCEM F 1 { } // 1 = 8 [swing 2]
			goto SceptreSwingHit;
		SceptreSwingLv12End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 9 [Attacking Frame] [H] [swing 3]
			SCEM I 1 { } // 1 = 10 [swing 4]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [swing 5]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 12 [swing 6]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [swing 7]
			SCEM O 1 { } // 1 = 14 [swing 8]

		SceptreSwingLv12Raise:
			SCLC F 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 15 [raising 1]
			SCLC E 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 16 [raising 2]
			SCLC D 1 { } // 1 = 17 [raising 3]
			SCLC C 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 18 [raising 4]
			SCLC B 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 19 [raising 5]
			SCLC A 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 20 [raising 6]
			goto EndSceptreSwing;



		// Level 11 of Sceptre = 21[-4] Tics of Swing (-1), 750-800 Damage (+10*11), 170 Range (+2), -4.84% Stamina
		SceptreSwingLv11:
			SCLB A 1 { } // 1 [lower 1]
			SCLB B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCLB C 1 { } // 1 = 3 [lower 3]
			SCLB D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCLB E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 5 [lower 5]
			SCLB F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
		SceptreSwingLv11Hold:
			SCLB G 1 // 1 = 7 [lower 7]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv11Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv11Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv11Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv11Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv11Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv11Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv11Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv11Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense2",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl11",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 8 [swing 1]
			SCEM F 1 { } // 1 = 9 [swing 2]
			goto SceptreSwingHit;
		SceptreSwingLv11End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 10 [Attacking Frame] [H] [swing 3]
			SCEM I 1 { } // 1 = 11 [swing 4]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 12 [swing 5]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 13 [swing 6]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 14 [swing 7]
			SCEM O 1 { } // 1 = 15 [swing 8]

		SceptreSwingLv11Raise:
			SCLB F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 16 [raising 1]
			SCLB E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 17 [raising 2]
			SCLB D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 18 [raising 3]
			SCLB C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 19 [raising 4]
			SCLB B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 20 [raising 5]
			SCLB A 1 { } // 1 = 21 [raising 6]
			goto EndSceptreSwing;



		// Level 10 of Sceptre = 22[-4] Tics of Swing (-1), 640-690 Damage (+5*10), 168 Range (+2), -4.94% Stamina
		SceptreSwingLv10:
			SCLA A 1 { } // 1 [lower 1]
			SCLA B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCLA C 1 { } // 1 = 3 [lower 3]
			SCLA D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCLA E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 5 [lower 5]
			SCLA F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
		SceptreSwingLv10Hold:
			SCLA G 1 // 1 = 7 [lower 7]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv10Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv10Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv10Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv10Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv10Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv10Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv10Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv10Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense2",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl10",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 8 [swing 1]
			SCEM F 1 { } // 1 = 9 [swing 2]
			goto SceptreSwingHit;
		SceptreSwingLv10End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 10 [Attacking Frame] [H] [swing 3]
			SCEM I 1 { } // 1 = 11 [swing 4]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 12 [swing 5]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 13 [swing 6]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 14 [swing 7]
			SCEM O 1 { } // 1 = 15 [swing 8]

		SceptreSwingLv10Raise:
			SCLA H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 16 [raising 1]
			SCLA I 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 17 [raising 2]
			SCLA J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 18 [raising 3]
			SCLA K 1 { } // 1 = 19 [raising 4]
			SCLA L 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 20 [raising 5]
			SCLA M 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 21 [raising 6]
			SCLA N 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 22 [raising 7]
			goto EndSceptreSwing;



		// Level 9 of Sceptre = 23[-4] Tics of Swing (-1), 590-640 Damage (+5*9), 165 Range (+4), -5.03% Stamina
		SceptreSwingLv9:
			SCL9 A 1 { } // 1 [lower 1]
			SCL9 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL9 C 1 { } // 1 = 3 [lower 3]
			SCL9 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL9 E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 5 [lower 5]
			SCL9 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL9 G 1 { } // 1 = 7 [lower 7]
		SceptreSwingLv9Hold:
			SCL9 H 1 // 1 = 8 [lower 8]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv9Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv9Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv9Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv9Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv9Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv9Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv9Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv9Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense2",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl9",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 9 [swing 1]
			SCEM F 1 { } // 1 = 10 [swing 2]
			goto SceptreSwingHit;
		SceptreSwingLv9End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [Attacking Frame] [H] [swing 3]
			SCEM I 1 { } // 1 = 12 [swing 4]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [swing 5]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 14 [swing 6]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 15 [swing 7]
			SCEM O 1 { } // 1 = 16 [swing 8]

		SceptreSwingLv9Raise:
			SCL9 G 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 17 [raising 1]
			SCL9 F 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 18 [raising 2]
			SCL9 E 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 19 [raising 3]
			SCL9 D 1 { } // 1 = 20 [raising 4]
			SCL9 C 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 21 [raising 5]
			SCL9 B 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 22 [raising 6]
			SCL9 A 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 23 [raising 7]
			goto EndSceptreSwing;



		// Level 8 of Sceptre = 24[-5] Tics of Swing (-2), 545-595 Damage (+15*8), 160 Range (+6), -5.12% Stamina
		SceptreSwingLv8:
			SCL8 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // 1 [lower 1]
			SCL8 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL8 C 1 { } // 1 = 3 [lower 3]
			SCL8 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL8 E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 5 [lower 5]
			SCL8 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL8 G 1 { } // 1 = 7 [lower 7]
		SceptreSwingLv8Hold:
			SCL8 H 1 // 1 = 8 [lower 8]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv8Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv8Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv8Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv8Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv8Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv8Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv8Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv8Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense2",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl8",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 9 [swing 1]
			SCEM F 1 { } // 1 = 10 [swing 2]
			goto SceptreSwingHit;
		SceptreSwingLv8End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [Attacking Frame] [H] [swing 3]
			SCEM I 1 { } // 1 = 12 [swing 4]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [swing 5]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 14 [swing 6]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 15 [swing 7]
			SCEM O 1 { } // 1 = 16 [swing 8]

		SceptreSwingLv8Raise:
			SCL8 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 17 [raising 1]
			SCL8 G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 18 [raising 2]
			SCL8 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 19 [raising 3]
			SCL8 E 1 { } // 1 = 20 [raising 4]
			SCL8 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 21 [raising 5]
			SCL8 C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 22 [raising 6]
			SCL8 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 23 [raising 7]
			SCL8 A 1 { } // 1 = 24 [raising 8]
			goto EndSceptreSwing;



		// Level 7 of Sceptre = 25[-5] Tics of Swing (-1), 425-475 Damage (+0*7), 153 Range (+4), -5.21% Stamina
		SceptreSwingLv7:
			SCL7 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // 1 [lower 1]
			SCL7 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL7 C 1 { } // 1 = 3 [lower 3]
			SCL7 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL7 E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 5 [lower 5]
			SCL7 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL7 G 1 { } // 1 = 7 [lower 7]
		SceptreSwingLv7Hold:
			SCL7 H 1 // 1 = 8 [lower 8]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv7Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv7Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv7Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv7Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv7Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv7Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv7Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv7Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense1",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl7",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 9 [swing 1]
			SCEM F 1 { } // 1 = 10 [swing 2]
			goto SceptreSwingHit;
		SceptreSwingLv7End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [Attacking Frame] [H] [swing 3]
			SCEM I 1 { } // 1 = 12 [swing 4]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [swing 5]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 14 [swing 6]
			SCEM L 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 15 [swing 7]
			SCEM M 1 { } // 1 = 16 [swing 8]
			SCEM O 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 17 [swing 9]

		SceptreSwingLv7Raise:
			SCL7 H 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 18 [raising 1]
			SCL7 G 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 19 [raising 2]
			SCL7 F 1 { } // 1 = 20 [raising 3]
			SCL7 E 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 21 [raising 4]
			SCL7 D 1 { } // 1 = 22 [raising 5]
			SCL7 C 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 23 [raising 6]
			SCL7 B 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 24 [raising 7]
			SCL7 A 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 25 [raising 8]
			goto EndSceptreSwing;



		// Level 6 of Sceptre = 26[-5] Tics of Swing (-1), 425-475 Damage (+10*6), 148 Range (+2), -5.30% Stamina
		SceptreSwingLv6:
			SCL6 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // 1 [lower 1]
			SCL6 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL6 C 1 { } // 1 = 3 [lower 3]
			SCL6 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL6 E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 5 [lower 5]
			SCL6 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL6 G 1 { } // 1 = 7 [lower 7]
		SceptreSwingLv6Hold:
			SCL6 H 1 // 1 = 8 [lower 8]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv6Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv6Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv6Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv6Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv6Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv6Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv6Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv6Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense1",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl6",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 9 [swing 1]
			SCEM F 1 { } // 1 = 10 [swing 2]
			SCEM G 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [swing 3]
			goto SceptreSwingHit;
		SceptreSwingLv6End:
			SCEM H 1 bright { } // 1 = 12 [Attacking Frame] [H] [swing 4]
			SCEM I 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [swing 5]
			SCEM J 1 { } // 1 = 14 [swing 6]
			SCEM K 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 15 [swing 7]
			SCEM L 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 16 [swing 8]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 17 [swing 9]
			SCEM O 1 { } // 1 = 18 [swing 10]

		SceptreSwingLv6Raise:
			SCL6 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 19 [raising 1]
			SCL6 G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 20 [raising 2]
			SCL6 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 21 [raising 3]
			SCL6 E 1 { } // 1 = 22 [raising 4]
			SCL6 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 23 [raising 5]
			SCL6 C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 24 [raising 6]
			SCL6 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 25 [raising 7]
			SCL6 A 1 { } // 1 = 26 [raising 8]
			goto EndSceptreSwing;



		// Level 5 of Sceptre = 27[-5] Tics of Swing (-1), 365-415 Damage (+5*5), 145 Range (+4), -5.38% Stamina
		SceptreSwingLv5:
			SCL5 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // 1 [lower 1]
			SCL5 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL5 C 1 { } // 1 = 3 [lower 3]
			SCL5 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL5 E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 5 [lower 5]
			SCL5 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL5 G 1 { } // 1 = 7 [lower 7]
		SceptreSwingLv5Hold:
			SCL5 H 1 // 1 = 8 [lower 8]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv5Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv5Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv5Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv5Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv5Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv5Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv5Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv5Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense1",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl5",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 9 [swing 1]
			SCEM F 1 { } // 1 = 10 [swing 2]
			SCEM G 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [swing 3]
			goto SceptreSwingHit;
		SceptreSwingLv5End:
			SCEM H 1 bright { } // 1 = 12 [Attacking Frame] [H] [swing 4]
			SCEM I 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [swing 5]
			SCEM J 1 { } // 1 = 14 [swing 6]
			SCEM K 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 15 [swing 7]
			SCEM L 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 16 [swing 8]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 17 [swing 9]
			SCEM O 1 { } // 1 = 18 [swing 10]

		SceptreSwingLv5Raise:
			SCL5 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 19 [raising 1]
			SCL5 I 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 20 [raising 2]
			SCL5 J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 21 [raising 3]
			SCL5 K 1 { } // 1 = 22 [raising 4]
			SCL5 L 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 23 [raising 5]
			SCL5 M 1 { } // 1 = 24 [raising 6]
			SCL5 N 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 25 [raising 7]
			SCL5 O 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 26 [raising 8]
			SCL5 P 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 27 [raising 9]
			goto EndSceptreSwing;



		// Level 4 of Sceptre = 28[-5] Tics of Swing (-1), 340-390 Damage (+5*4), 140 Range (+2), -5.46% Stamina
		SceptreSwingLv4:
			SCL4 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // 1 [lower 1]
			SCL4 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL4 C 1 { } // 1 = 3 [lower 3]
			SCL4 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL4 E 1 { } // 1 = 5 [lower 5]
			SCL4 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL4 G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 7 [lower 7]
			SCL4 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 8 [lower 8]
		SceptreSwingLv4Hold:
			SCL4 I 1 // 1 = 9 [lower 9]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv4Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv4Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv4Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv4Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv4Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv4Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv4Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv4Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense1",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl4",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 10 [swing 1]
			SCEM F 1 { } // 1 = 11 [swing 2]
			SCEM G 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 12 [swing 3]
			goto SceptreSwingHit;
		SceptreSwingLv4End:
			SCEM H 1 bright { } // 1 = 13 [Attacking Frame] [H] [swing 4]
			SCEM I 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 14 [swing 5]
			SCEM J 1 { } // 1 = 15 [swing 6]
			SCEM K 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 16 [swing 7]
			SCEM L 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 17 [swing 8]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 18 [swing 9]
			SCEM O 1 { } // 1 = 19 [swing 10]

		SceptreSwingLv4Raise:
			SCL4 J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 20 [raising 1]
			SCL4 K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 21 [raising 2]
			SCL4 L 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 22 [raising 3]
			SCL4 M 1 { } // 1 = 23 [raising 4]
			SCL4 N 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 24 [raising 5]
			SCL4 O 1 { } // 1 = 25 [raising 6]
			SCL4 P 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 26 [raising 7]
			SCL4 Q 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 27 [raising 8]
			SCL4 R 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 28 [raising 9]
			goto EndSceptreSwing;



		// Level 3 of Sceptre = 29[-5] Tics of Swing (-1), 320-370 Damage (+10*3), 138 Range (+3), -5.54% Stamina
		SceptreSwingLv3:
			SCL3 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // 1 [lower 1]
			SCL3 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL3 C 1 { } // 1 = 3 [lower 3]
			SCL3 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL3 E 1 { } // 1 = 5 [lower 5]
			SCL3 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL3 G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 7 [lower 7]
			SCL3 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 8 [lower 8]
		SceptreSwingLv3Hold:
			SCE3 I 1 // 1 = 9 [lower 9]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv3Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv3Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv3Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv3Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv3Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv3Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv3Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv3Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense1",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl3",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { } // 1 = 10 [swing 1]
			SCEM F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [swing 2]
			SCEM G 1 { } // 1 = 12 [swing 3]
			goto SceptreSwingHit;
		SceptreSwingLv3End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [Attacking Frame] [H] [swing 4]
			SCEM I 1 { } // 1 = 14 [swing 5]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 15 [swing 6]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 16 [swing 7]
			SCEM L 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 17 [swing 8]
			SCEM M 1 { } // 1 = 18 [swing 9]
			SCEM N 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 19 [swing 10]
			SCEM O 1 { } // 1 = 20 [swing 11]

		SceptreSwingLv3Raise:
			SCL3 J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 21 [raising 1]
			SCL3 K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 22 [raising 2]
			SCL3 L 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 23 [raising 3]
			SCL3 M 1 { } // 1 = 24 [raising 4]
			SCL3 N 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 25 [raising 5]
			SCL3 O 1 { } // 1 = 26 [raising 6]
			SCL3 P 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 27 [raising 7]
			SCL3 Q 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 28 [raising 8]
			SCL3 R 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 29 [raising 9]
			goto EndSceptreSwing;



		// Level 2 of Sceptre = 30[-6] Tics of Swing (-1), 290-340 Damage (+5*2), 135 Range (+2), -5.61% Stamina
		SceptreSwingLv2:
			SCL2 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // 1 [lower 1]
			SCL2 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL2 C 1 { } // 1 = 3 [lower 3]
			SCL2 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL2 E 1 { } // 1 = 5 [lower 5]
			SCL2 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL2 G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 7 [lower 7]
			SCL2 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 8 [lower 8]
		SceptreSwingLv2Hold:
			SCL2 I 1 // 1 = 9 [lower 9]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv2Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv2Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv2Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv2Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv2Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv2Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv2Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv2Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense1",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl2",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { } // 1 = 10 [swing 1]
			SCEM E 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [swing 2]
			SCEM F 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 12 [swing 3]
			SCEM G 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [swing 4]
			goto SceptreSwingHit;
		SceptreSwingLv2End:
			SCEM H 1 bright { } // 1 = 14 [Attacking Frame] [H] [swing 5]
			SCEM I 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 15 [swing 6]
			SCEM J 1 { } // 1 = 16 [swing 7]
			SCEM K 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 17 [swing 8]
			SCEM L 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 18 [swing 9]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 19 [swing 10]
			SCEM N 1 { } // 1 = 20 [swing 11]
			SCEM O 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 21 [swing 12]

		SceptreSwingLv2Raise:
			SCL2 J 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 21 [raising 1]
			SCL2 K 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 22 [raising 2]
			SCL2 L 1 { } // 1 = 23 [raising 3]
			SCL2 M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 24 [raising 4]
			SCL2 N 1 { } // 1 = 26 [raising 5]
			SCL2 O 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 27 [raising 6]
			SCL2 P 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 28 [raising 7]
			SCL2 Q 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 29 [raising 8]
			SCL2 R 1 { } // 1 = 30 [raising 9]
			goto EndSceptreSwing;



		// Level 1 of Sceptre = 31[-6] Tics of Swing (-1), 280-330 Damage (+5), 133 Range (+4), -5.68% Stamina
		SceptreSwingLv1:
			SCL1 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // 1 [lower 1]
			SCL1 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL1 C 1 { } // 1 = 3 [lower 3]
			SCL1 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL1 E 1 { } // 1 = 5 [lower 5]
			SCL1 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL1 G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 7 [lower 7]
			SCL1 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 8 [lower 8]
			SCL1 I 1 { } // 1 = 9 [lower 9]
		SceptreSwingLv1Hold:
			SCL1 J 1 // 1 = 10 [lower 10]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv1Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv1Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv1Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv1Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv1Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv1Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv1Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv1Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense1",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl1",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { } // 1 = 11 [swing 1]
			SCEM E 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 12 [swing 2]
			SCEM F 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 13 [swing 3]
			SCEM G 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 14 [swing 4]
			goto SceptreSwingHit;
		SceptreSwingLv1End:
			SCEM H 1 bright { } // 1 = 15 [Attacking Frame] [H] [swing 5]
			SCEM I 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 16 [swing 6]
			SCEM J 1 { } // 1 = 17 [swing 7]
			SCEM K 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 18 [swing 8]
			SCEM L 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 19 [swing 9]
			SCEM M 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 20 [swing 10]
			SCEM N 1 { } // 1 = 21 [swing 11]
			SCEM O 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 22 [swing 12]

		SceptreSwingLv1Raise:
			SCL1 I 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 21 [raising 1]
			SCL1 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 22 [raising 2]
			SCL1 G 1 { } // 1 = 23 [raising 3]
			SCL1 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 24 [raising 4]
			SCL1 E 1 { } // 1 = 27 [raising 5]
			SCL1 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 28 [raising 6]
			SCL1 C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 29 [raising 7]
			SCL1 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 30 [raising 8]
			SCL1 A 1 { } // 1 = 31 [raising 9]
			goto EndSceptreSwing;



		// Base Level of Sceptre = 32[-6] Tics of Swing, 275-325 Damage, 130 Range, -5.75% Stamina
		SceptreSwingLv0:
			SCL0 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // 1 [lower 1]
			SCL0 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 2 [lower 2]
			SCL0 C 1 { } // 1 = 3 [lower 3]
			SCL0 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 4 [lower 4]
			SCL0 E 1 { } // 1 = 5 [lower 5]
			SCL0 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 6 [lower 6]
			SCL0 G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(0); } } // 1 = 7 [lower 7]
			SCL0 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 8 [lower 8]
			SCL0 I 1 { } // 1 = 9 [lower 9]
		SceptreSwingLv0Hold:
			SCL0 J 1 // 1 = 10 [lower 10]
			{
				A_SetInventory("PrimingSceptre",1);
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH);
			}
			TNT1 A 0
			{
				if (!CountInv("InGameMenu"))
				{
					if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }

					if (dvds_sceptrefirekeytype == 0)
					{
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv0Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv0Raise"); }
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv0Hold"); }
						return resolvestate(null);
					}
					else
					{
						If (A_HoldInWeapon(0) == 2) { return resolvestate("SceptreSwingLv0Swing"); }
						If (A_HoldInWeapon(0) == 1) { return resolvestate("SceptreSwingLv0Raise"); }
						If (A_HoldInWeapon(0) == 0) { return resolvestate("SceptreSwingLv0Hold"); }
						return resolvestate(null);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			loop;

		SceptreSwingLv0Swing:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(0),2) == 0) { return resolvestate("SceptreSwingLv0Raise"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_GiveInventory("SwingDefense0",1);
				if (random(1,256) >= (192 + (CallACS("OtherVarCheckDECORATE",11)) * 5)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				A_StartSound("SceptreSwingLvl0",CHAN_WEAPON);
				return resolvestate(null);
			}
			SCEM D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 11 [swing 1]
			SCEM E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 12 [swing 2]
			SCEM F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 13 [swing 3]
			SCEM G 1 { } // 1 = 14 [swing 4]
			goto SceptreSwingHit;
		SceptreSwingLv0End:
			SCEM H 1 bright { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 15 [Attacking Frame] [H] [swing 5]
			SCEM I 1 { } // 1 = 16 [swing 6]
			SCEM J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 17 [swing 7]
			SCEM K 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // 1 = 18 [swing 8]
			SCEM L 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 19 [swing 9]
			SCEM M 1 { } // 1 = 20 [swing 10]
			SCEM N 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 21 [swing 11]
			SCEM O 1 { } // 1 = 22 [swing 12]

		SceptreSwingLv0Raise:
			SCL0 J 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 23 [raising 1]
			SCL0 I 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 1) { A_SetTics(0); } } // 1 = 24 [raising 2]
			SCL0 H 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 25 [raising 3]
			SCL0 G 1 { } // 1 = 26 [raising 4]
			SCL0 F 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 27 [raising 5]
			SCL0 E 1 { } // 1 = 28 [raising 6]
			SCL0 D 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 29 [raising 7]
			SCL0 C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // 1 = 30 [raising 8]
			SCL0 B 1 { if (A_WeaponCheckDoubleFireRate()) { A_SetTics(0); } } // 1 = 31 [raising 9]
			SCL0 A 1 { } // 1 = 32 [raising 10]
			goto EndSceptreSwing;


		// States for Actual Swing Attacks [referenced by all above states]
		SceptreSwingHit:
			TNT1 A 0
			{
				A_AddSceptreEXP_W(0,1); // Increase EXP by 1 Point for Sceptre
				A_GetSceptreSwingRecoil(0);
				if (CallACS("OtherVarCheckDECORATE",11) >= 13)
				{
					A_SetAngle(angle-112.5); 
					invoker.angoffset = -112.5;
				}
				else 
				{
					A_SetAngle(angle-90.0); 
					invoker.angoffset = -90.0;
				}
			}
			TNT1 AAAAAAA 0 
			{
				A_SetAngle(angle+22.5);
				invoker.angoffset += 22.5;
				A_SpreadAuraCustomPunch(A_GetSceptreDamage(0,0,0,false),1,CPF_NOTURN,"SceptrePuffNormal",A_GetSceptreRange(0),0,0,"","","");
				//A_SpreadAuraRailAttack(A_GetSceptreDamage(0,0,0,false), 0, 0, "", "", "", 1, 0, "SceptrePuffNormal",0.0,0.0,A_GetSceptreRange(0));
				A_SceptreSwingShield(invoker.angoffset);
			}
			TNT1 AA 0 
			{
				if (CallACS("OtherVarCheckDECORATE",11) >= 13)
				{
					invoker.angoffset += 22.5;
					A_SetAngle(angle+22.5);
					A_SpreadAuraCustomPunch(A_GetSceptreDamage(0,0,0,false),1,CPF_NOTURN,"SceptrePuffNormal",A_GetSceptreRange(0),0,0,"","","");
					A_SceptreSwingShield(invoker.angoffset);
					//A_SpreadAuraRailAttack(A_GetSceptreDamage(0,0,0,false), 0, 0, "", none, none, 1, 0, "SceptrePuffNormal",0.0,0.0,A_GetSceptreRange(0));
				}
			}
			TNT1 A 0 
			{
				if (CallACS("OtherVarCheckDECORATE",11) >= 13) { A_SetAngle(angle-90.0); }
				else { A_SetAngle(angle-67.5); }
			}
			goto SwingLevelCheckEnd;


		// Finishes off the normal-type Swings
		SwingLevelCheckEnd:
			TNT1 A 0
			{
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife")) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters(); } // Sometimes a swing will be enough to wake up all monsters in the area.
				}

				CallACS("StartTensionCountDown");
				if (CallACS("OtherVarCheckDECORATE",11) == 0) { return resolvestate("SceptreSwingLv0End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 1) { return resolvestate("SceptreSwingLv1End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 2) { return resolvestate("SceptreSwingLv2End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 3) { return resolvestate("SceptreSwingLv3End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 4) { return resolvestate("SceptreSwingLv4End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 5) { return resolvestate("SceptreSwingLv5End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 6) { return resolvestate("SceptreSwingLv6End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 7) { return resolvestate("SceptreSwingLv7End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 8) { return resolvestate("SceptreSwingLv8End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 9) { return resolvestate("SceptreSwingLv9End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 10) { return resolvestate("SceptreSwingLv10End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 11) { return resolvestate("SceptreSwingLv11End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 12) { return resolvestate("SceptreSwingLv12End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 13) { return resolvestate("SceptreSwingLv13End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 14) { return resolvestate("SceptreSwingLv14End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 15) { return resolvestate("SceptreSwingLv15End"); }
				else if (CallACS("OtherVarCheckDECORATE",11) == 16) { return resolvestate("SceptreSwingLv16End"); }
				return resolvestate(null);
			}
			goto SceptreSwingLv0End;

		EndSceptreSwing:
			TNT1 A 0
			{
				A_SetInventory("PrimingSceptre",0);
				A_SetInventory("SwingDefense0",0);
				A_SetInventory("SwingDefense1",0);
				A_SetInventory("SwingDefense2",0);
				A_SetInventory("SwingDefense3",0);
				A_Refire();
			}
			goto Ready;

		ReadySceptreSwing:
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 16,"SceptreSwingLv16");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 15,"SceptreSwingLv15");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 14,"SceptreSwingLv14");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 13,"SceptreSwingLv13");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 12,"SceptreSwingLv12");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 11,"SceptreSwingLv11");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 10,"SceptreSwingLv10");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 9,"SceptreSwingLv9");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 8,"SceptreSwingLv8");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 7,"SceptreSwingLv7");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 6,"SceptreSwingLv6");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 5,"SceptreSwingLv5");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 4,"SceptreSwingLv4");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 3,"SceptreSwingLv3");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 2,"SceptreSwingLv2");
			TNT1 A 0 A_JumpIf(CallACS("OtherVarCheckDECORATE",11) == 1,"SceptreSwingLv1");
			goto SceptreSwingLv0;



// *****************
// ** SPIN ATTACK **
// *****************

		SceptreSpinAttackLv3:
			SESN B 1;
			TNT1 A 0 
			{
				A_SetInventory("SceptreSpinDefense4",1);
				A_StartSound("SceptreSwingLvl4",CHAN_WEAPON);
				invoker.angoffset = 0;
			}
		SceptreSpinAttackLv3Loop:
			// loop 4 times
			TNT1 A 0 
			{
				A_GetSceptreSwingRecoil(1);
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,3,0,false),"SceptrePuffSpinning",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,3,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle-90);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,3,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,3,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,3,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");

				A_SceptreSpinningShield(invoker.angoffset);
				A_SetAngle(angle+6);
				invoker.angoffset += 6;
				CallACS("WeaponAngleLoopSecondary",1,0,1);
			}
			TNT1 A 0 A_JumpIf(CallACS("WeaponAngleLoopSecondary",0,10) == 1,"SceptreSpinAttackLv3LoopEnd");
			loop;
		SceptreSpinAttackLv3LoopEnd:
			SESN C 1 { invoker.angoffset = 0; }
			TNT1 A 0 { CallACS("WeaponAngleLoop",1,0,1); }
			TNT1 A 0 A_JumpIf(CallACS("WeaponAngleLoop",0,6) == 1,"SceptreSpinAttackLv3End");
			goto SceptreSpinAttackLv3Loop;
		SceptreSpinAttackLv3End:
			SESN D 1;
			TNT1 A 0 
			{ 
				CallACS("StartTensionCountDown");
				A_SetInventory("SceptreSpinDefense1",0);
				A_SetInventory("SceptreSpinDefense2",0);
				A_SetInventory("SceptreSpinDefense3",0);
				A_SetInventory("SceptreSpinDefense4",0);
				A_Refire();
			}
			TNT1 A 0 
			{ 
				if (CountInv("PrimingSceptre") > 0) 
				{
					if (CallACS("OtherVarCheckDECORATE",11) == 0) { return resolvestate("SceptreSwingLv0Hold"); } 
					else if (CallACS("OtherVarCheckDECORATE",11) == 1) { return resolvestate("SceptreSwingLv1Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 2) { return resolvestate("SceptreSwingLv2Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 3) { return resolvestate("SceptreSwingLv3Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 4) { return resolvestate("SceptreSwingLv4Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 5) { return resolvestate("SceptreSwingLv5Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 6) { return resolvestate("SceptreSwingLv6Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 7) { return resolvestate("SceptreSwingLv7Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 8) { return resolvestate("SceptreSwingLv8Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 9) { return resolvestate("SceptreSwingLv9Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 10) { return resolvestate("SceptreSwingLv10Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 11) { return resolvestate("SceptreSwingLv11Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 12) { return resolvestate("SceptreSwingLv12Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 13) { return resolvestate("SceptreSwingLv13Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 14) { return resolvestate("SceptreSwingLv14Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 15) { return resolvestate("SceptreSwingLv15Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 16) { return resolvestate("SceptreSwingLv16Hold"); }
					return resolvestate("Ready"); 
				}
				return resolvestate("Ready");
			}
			goto Ready;


		SceptreSpinAttackLv2:
			SESN B 1;
			TNT1 A 0 
			{
				A_SetInventory("SceptreSpinDefense3",1);
				A_StartSound("SceptreSwingLvl4",CHAN_WEAPON);
				invoker.angoffset = 0;
			}
		SceptreSpinAttackLv2Loop:
			TNT1 A 0
			{
				A_GetSceptreSwingRecoil(1);
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,2,0,false),"SceptrePuffSpinning",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,2,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle-90);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,2,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,2,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,2,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");

				A_SceptreSpinningShield(invoker.angoffset);
				A_SetAngle(angle+6);
				invoker.angoffset += 6;
				CallACS("WeaponAngleLoopSecondary",1,0,1);
			}
			TNT1 A 0 A_JumpIf(CallACS("WeaponAngleLoopSecondary",0,6) == 1,"SceptreSpinAttackLv2LoopEnd");
			loop;
		SceptreSpinAttackLv2LoopEnd:
			SESN C 1 { invoker.angoffset = 0; }
			TNT1 A 0 { CallACS("WeaponAngleLoop",1,0,1); }
			TNT1 A 0 A_JumpIf(CallACS("WeaponAngleLoop",0,10) == 1,"SceptreSpinAttackLv2End");
			goto SceptreSpinAttackLv2Loop;
		SceptreSpinAttackLv2End:
			SESN D 1;
			TNT1 A 0 
			{ 
				CallACS("StartTensionCountDown");
				A_SetInventory("SceptreSpinDefense1",0);
				A_SetInventory("SceptreSpinDefense2",0);
				A_SetInventory("SceptreSpinDefense3",0);
				A_SetInventory("SceptreSpinDefense4",0);
				A_Refire();
			}
			TNT1 A 0 
			{ 
				if (CountInv("PrimingSceptre") > 0) 
				{
					if (CallACS("OtherVarCheckDECORATE",11) == 0) { return resolvestate("SceptreSwingLv0Hold"); } 
					else if (CallACS("OtherVarCheckDECORATE",11) == 1) { return resolvestate("SceptreSwingLv1Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 2) { return resolvestate("SceptreSwingLv2Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 3) { return resolvestate("SceptreSwingLv3Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 4) { return resolvestate("SceptreSwingLv4Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 5) { return resolvestate("SceptreSwingLv5Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 6) { return resolvestate("SceptreSwingLv6Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 7) { return resolvestate("SceptreSwingLv7Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 8) { return resolvestate("SceptreSwingLv8Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 9) { return resolvestate("SceptreSwingLv9Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 10) { return resolvestate("SceptreSwingLv10Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 11) { return resolvestate("SceptreSwingLv11Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 12) { return resolvestate("SceptreSwingLv12Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 13) { return resolvestate("SceptreSwingLv13Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 14) { return resolvestate("SceptreSwingLv14Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 15) { return resolvestate("SceptreSwingLv15Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 16) { return resolvestate("SceptreSwingLv16Hold"); }
					return resolvestate("Ready"); 
				}
				return resolvestate("Ready");
			}
			goto Ready;


		SceptreSpinAttackLv1:
			SESN B 1;
			TNT1 A 0 
			{
				A_SetInventory("SceptreSpinDefense2",1);
				A_StartSound("SceptreSwingLvl4",CHAN_WEAPON);
				invoker.angoffset = 0;
			}
		SceptreSpinAttackLv1Loop:
			TNT1 A 0 
			{
				A_GetSceptreSwingRecoil(1);
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,1,0,false),"SceptrePuffSpinning",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,1,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle-90);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,1,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,1,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,1,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");

				A_SceptreSpinningShield(invoker.angoffset);
				A_SetAngle(angle+6);
				invoker.angoffset += 6;
				CallACS("WeaponAngleLoopSecondary",1,0,1);
			}

			TNT1 A 0 A_JumpIf(CallACS("WeaponAngleLoopSecondary",0,5) == 1,"SceptreSpinAttackLv1LoopEnd");
			loop;
		SceptreSpinAttackLv1LoopEnd:
			SESN C 1 { invoker.angoffset = 0; }
			TNT1 A 0 { CallACS("WeaponAngleLoop",1,0,1); }
			TNT1 A 0 A_JumpIf(CallACS("WeaponAngleLoop",0,12) == 1,"SceptreSpinAttackLv1End");
			goto SceptreSpinAttackLv1Loop;
		SceptreSpinAttackLv1End:
			SESN D 1;
			TNT1 A 0 
			{ 
				CallACS("StartTensionCountDown");
				A_SetInventory("SceptreSpinDefense1",0);
				A_SetInventory("SceptreSpinDefense2",0);
				A_SetInventory("SceptreSpinDefense3",0);
				A_SetInventory("SceptreSpinDefense4",0);
				A_Refire();
			}
			TNT1 A 0 
			{ 
				if (CountInv("PrimingSceptre") > 0) 
				{
					if (CallACS("OtherVarCheckDECORATE",11) == 0) { return resolvestate("SceptreSwingLv0Hold"); } 
					else if (CallACS("OtherVarCheckDECORATE",11) == 1) { return resolvestate("SceptreSwingLv1Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 2) { return resolvestate("SceptreSwingLv2Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 3) { return resolvestate("SceptreSwingLv3Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 4) { return resolvestate("SceptreSwingLv4Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 5) { return resolvestate("SceptreSwingLv5Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 6) { return resolvestate("SceptreSwingLv6Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 7) { return resolvestate("SceptreSwingLv7Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 8) { return resolvestate("SceptreSwingLv8Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 9) { return resolvestate("SceptreSwingLv9Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 10) { return resolvestate("SceptreSwingLv10Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 11) { return resolvestate("SceptreSwingLv11Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 12) { return resolvestate("SceptreSwingLv12Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 13) { return resolvestate("SceptreSwingLv13Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 14) { return resolvestate("SceptreSwingLv14Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 15) { return resolvestate("SceptreSwingLv15Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 16) { return resolvestate("SceptreSwingLv16Hold"); }
					return resolvestate("Ready"); 
				}
				return resolvestate("Ready");
			}
			goto Ready;


		SceptreSpinAttackLv0:
			SESN B 1;
			TNT1 A 0 
			{
				A_SetInventory("SceptreSpinDefense1",1);
				A_StartSound("SceptreSwingLvl4",CHAN_WEAPON);
				invoker.angoffset = 0;
			}
		SceptreSpinAttackLv0Loop:
			TNT1 A 0 
			{
				A_GetSceptreSwingRecoil(1);
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,0,0,false),"SceptrePuffSpinning",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,0,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle-90);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,0,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,0,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				A_SetAngle(angle+22.5);
				A_SpreadAuraFireBullets(0,0,1,A_GetSceptreDamage(2,0,0,false),"SceptrePuffSpinningSilent",FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,FBF_NORANDOM|FBF_NORANDOMPUFFZ|FBF_NOFLASH,A_GetSceptreRange(2),"",0,0,0,"");
				
				A_SceptreSpinningShield(invoker.angoffset);
				A_SetAngle(angle+6);
				invoker.angoffset += 6;
				CallACS("WeaponAngleLoopSecondary",1,0,1);
			}

			TNT1 A 0 A_JumpIf(CallACS("WeaponAngleLoopSecondary",0,4) == 1,"SceptreSpinAttackLv0LoopEnd");
			loop;
		SceptreSpinAttackLv0LoopEnd:
			SESN C 1 { invoker.angoffset = 0; }
			TNT1 A 0 { CallACS("WeaponAngleLoop",1,0,1); }
			TNT1 A 0 A_JumpIf(CallACS("WeaponAngleLoop",0,15) == 1,"SceptreSpinAttackLv0End");
			goto SceptreSpinAttackLv0Loop;
		SceptreSpinAttackLv0End:
			SESN D 1;
			TNT1 A 0 
			{ 
				CallACS("StartTensionCountDown");
				A_SetInventory("SceptreSpinDefense1",0);
				A_SetInventory("SceptreSpinDefense2",0);
				A_SetInventory("SceptreSpinDefense3",0);
				A_SetInventory("SceptreSpinDefense4",0);
				A_Refire();
			}
			TNT1 A 0 
			{ 
				if (CountInv("PrimingSceptre") > 0) 
				{
					if (CallACS("OtherVarCheckDECORATE",11) == 0) { return resolvestate("SceptreSwingLv0Hold"); } 
					else if (CallACS("OtherVarCheckDECORATE",11) == 1) { return resolvestate("SceptreSwingLv1Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 2) { return resolvestate("SceptreSwingLv2Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 3) { return resolvestate("SceptreSwingLv3Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 4) { return resolvestate("SceptreSwingLv4Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 5) { return resolvestate("SceptreSwingLv5Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 6) { return resolvestate("SceptreSwingLv6Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 7) { return resolvestate("SceptreSwingLv7Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 8) { return resolvestate("SceptreSwingLv8Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 9) { return resolvestate("SceptreSwingLv9Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 10) { return resolvestate("SceptreSwingLv10Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 11) { return resolvestate("SceptreSwingLv11Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 12) { return resolvestate("SceptreSwingLv12Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 13) { return resolvestate("SceptreSwingLv13Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 14) { return resolvestate("SceptreSwingLv14Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 15) { return resolvestate("SceptreSwingLv15Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 16) { return resolvestate("SceptreSwingLv16Hold"); }
					return resolvestate("Ready"); 
				}
				return resolvestate("Ready");
			}
			goto Ready;


		ReadySpinningSwing:
			TNT1 A 0
			{
				if (random(1,256) >= 249)
				{
					if (CountInv("PlayingStrife")) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters(); } // Sometimes a swing will be enough to wake up all monsters in the area.
				}

				if (A_UseStaminaAttack(A_GetSceptreStaminaUse(2),2) == 0) { return resolvestate("Ready"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_AddSceptreEXP_W(0,1); // Increase EXP by 1 Point for Sceptre
				if (random(1,256) >= (224 + (CallACS("OtherVarCheckDECORATE",11)) * 4.48)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); }
				if (CallACS("OtherVarCheckDECORATE",11) <= 4) { return resolvestate("SceptreSpinAttackLv0"); }
				if (CallACS("OtherVarCheckDECORATE",11) >= 5 && CallACS("OtherVarCheckDECORATE",11) <= 9) { return resolvestate("SceptreSpinAttackLv1"); }
				if (CallACS("OtherVarCheckDECORATE",11) >= 10 && CallACS("OtherVarCheckDECORATE",11) <= 14) { return resolvestate("SceptreSpinAttackLv2"); }
				if (CallACS("OtherVarCheckDECORATE",11) >= 15) { return resolvestate("SceptreSpinAttackLv3"); }
				return resolvestate(null);
			}
			goto SceptreSpinAttackLv0;


		Fire:
			TNT1 A 0 
			{
				A_SceptreShieldOff();
				CallACS("MiscVarSetDECORATE",397,0);
				if (A_CheckSceptreAltFire() == 2) { return resolvestate("ReadySpinningSwing"); }
				return resolvestate(null);
			}
			goto ReadySceptreSwing;


	//***********
	//*DEFENSIVE*
	//***********

		TwirlFail:
			TNT1 A 0
			{
				A_SceptreShieldOff();
				CallACS("MiscVarSetDECORATE",397,0);
			}
			goto Ready;


		// Twirling Animation A [Levels 0 to 7]
		TwirlCheckA:
			FLHS C 1
			{
				if (A_SceptreTwirlManaCheck(0) == 0 || A_UseStaminaAttack(21,2) == 0) { return resolvestate("TwirlFail"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_SceptreTwirlFrameCheck(3);
				A_SceptreShieldOn(1); 
				CallACS("MiscVarSetDECORATE",397,1);

				A_SceptreAltFireShield(0.0,0.0);

				A_SceptreTwirlVisualFrames(0);
				return resolvestate(null);
			}
			goto AltHold2;


		// Twirling Animation B [Levels 8 to 14]
		TwirlCheckB:
			FLHS C 1
			{
				if (A_SceptreTwirlManaCheck(0) == 0 || A_UseStaminaAttack(18,2) == 0) { return resolvestate("TwirlFail"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_SceptreTwirlFrameCheck(4);
				A_SceptreShieldOn(2); 
				CallACS("MiscVarSetDECORATE",397,2);

				A_SceptreAltFireShield(0.0,0.0);

				A_SceptreTwirlVisualFrames(1);
				return resolvestate(null);
			}
			goto AltHold2;


		// Twirling Animation C [Levels 15+]
		TwirlCheckC:
			FLHS C 1
			{
				if (A_SceptreTwirlManaCheck(0) == 0 || A_UseStaminaAttack(14,2) == 0) { return resolvestate("TwirlFail"); }
				return resolvestate(null);
			}
			TNT1 A 0
			{
				A_SceptreTwirlFrameCheck(6);
				A_SceptreShieldOn(3); 
				CallACS("MiscVarSetDECORATE",397,3);

				A_SceptreAltFireShield(0.0,0.0);

				A_SceptreTwirlVisualFrames(2);
				return resolvestate(null);
			}
			goto AltHold2;

		AltFire:
			TNT1 A 0
			{
				if (A_SceptreTwirlManaCheck(0) == 0) { return resolvestate("TwirlFail"); }
				return resolvestate(null);
			}
		AltHold:
			TNT1 A 0
			{
				A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH); // Allows Quick-Kicking to interupt the Shield mode :V
				if (CallACS("OtherVarCheckDECORATE",11) <= 7) { return resolvestate("TwirlCheckA"); }
				if (CallACS("OtherVarCheckDECORATE",11) >= 8 && CallACS("OtherVarCheckDECORATE",11) <= 14) { return resolvestate("TwirlCheckB"); }
				if (CallACS("OtherVarCheckDECORATE",11) >= 15) { return resolvestate("TwirlCheckC"); }
				return resolvestate(null);
			}
			goto TwirlCheckA;

		AltHold2:
			TNT1 A 0
			{
				A_Refire();
			}
			TNT1 A 0
			{
				A_SceptreShieldOff();
				A_SceptreTwirlFrameCheck(0);
				CallACS("MiscVarSetDECORATE",397,0);
			}
			goto Ready;

		// Other 'Normal States'
		Ready:
			SCEM A 1
			{
				if (dvdshud_sceptrecrosshair) { A_SetCrosshair(8); } else { A_SetCrosshair(0); }
				A_SetInventory("DrawingDiarisBow",0);
				A_WeaponReady();

				if (CountInv("PrimingSceptre") > 0) 
				{ 
					If (CallACS("OtherVarCheckDECORATE",11) >= 16) { return resolvestate("SceptreSwingLv16Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 15) { return resolvestate("SceptreSwingLv15Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 14) { return resolvestate("SceptreSwingLv14Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 13) { return resolvestate("SceptreSwingLv13Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 12) { return resolvestate("SceptreSwingLv12Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 11) { return resolvestate("SceptreSwingLv11Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 10) { return resolvestate("SceptreSwingLv10Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 9) { return resolvestate("SceptreSwingLv9Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 8) { return resolvestate("SceptreSwingLv8Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 7) { return resolvestate("SceptreSwingLv7Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 6) { return resolvestate("SceptreSwingLv6Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 5) { return resolvestate("SceptreSwingLv5Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 4) { return resolvestate("SceptreSwingLv4Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 3) { return resolvestate("SceptreSwingLv3Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 2) { return resolvestate("SceptreSwingLv2Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) == 1) { return resolvestate("SceptreSwingLv1Hold"); }
					If (CallACS("OtherVarCheckDECORATE",11) <= 0) { return resolvestate("SceptreSwingLv0Hold"); }
					return resolvestate(null); 
				}
				return resolvestate(null);
			}
			loop;

		Deselect:
			SCEM A 1
			{
				A_SetCrosshair(0);

				A_DVDSLower(0,10035,2);
				A_DVDSLower(0,10036,5);
				A_DVDSLower(CallACS("OtherVarCheckDECORATE",11)*0.5);
				A_DVDSLower(18);

				A_SceptreShieldOff();
				CallACS("MiscVarSetDECORATE",397,0);
			}
			loop;

		Select:
			SCEM A 1
			{
				if (dvdshud_sceptrecrosshair) { A_SetCrosshair(8); } else { A_SetCrosshair(0); }

				A_DVDSRaise(0,10035,2);
				A_DVDSRaise(0,10036,5);
				A_DVDSRaise(CallACS("OtherVarCheckDECORATE",11)*0.5);
				A_DVDSRaise(18);
			}
			loop;

		Spawn:
			SERP A 0 NoDelay
			{
				if (CountInv("SceptreOfEmpyrea",AAPTR_PLAYER1)) { A_FadeOut(1,1); }
				if (CallACS("CheckCharacterClass") != 2) { A_FadeOut(1,1); }
			}
			SERP C 1;
			loop;
	
		User1: // Kick - Sceptre version
			TNT1 A 0 
			{
				A_Overlay(-2,"Kick",true);
				
				if (CountInv("PrimingSceptre") > 0) 
				{
					if (CallACS("OtherVarCheckDECORATE",11) == 0) { return resolvestate("SceptreSwingLv0Hold"); } 
					else if (CallACS("OtherVarCheckDECORATE",11) == 1) { return resolvestate("SceptreSwingLv1Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 2) { return resolvestate("SceptreSwingLv2Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 3) { return resolvestate("SceptreSwingLv3Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 4) { return resolvestate("SceptreSwingLv4Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 5) { return resolvestate("SceptreSwingLv5Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 6) { return resolvestate("SceptreSwingLv6Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 7) { return resolvestate("SceptreSwingLv7Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 8) { return resolvestate("SceptreSwingLv8Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 9) { return resolvestate("SceptreSwingLv9Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 10) { return resolvestate("SceptreSwingLv10Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 11) { return resolvestate("SceptreSwingLv11Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 12) { return resolvestate("SceptreSwingLv12Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 13) { return resolvestate("SceptreSwingLv13Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 14) { return resolvestate("SceptreSwingLv14Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 15) { return resolvestate("SceptreSwingLv15Hold"); }
					else if (CallACS("OtherVarCheckDECORATE",11) == 16) { return resolvestate("SceptreSwingLv16Hold"); }
					return resolvestate("Ready"); 
				}
				return resolvestate("Ready");
			}
			goto Ready;
		Kick:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetKickStaminaUse(0),2) == 0) { return resolvestate("KickEnd"); }
				return resolvestate(null); 
			}
			TNT1 A 0
			{
				A_QMWKickInit();
			}
			goto KickStart;
		KickEnd:
			TNT1 A 0
			{
				A_KickBonusOff();
				A_SetMartialArtsMastery(0);
			}
			stop;
	}
}

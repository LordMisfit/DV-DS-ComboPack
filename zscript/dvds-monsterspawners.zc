class FailedSummon : AetheriusBaseZSC
{
	default
	{
		height 4;
		radius 4;
		+NOBLOCKMAP;
	}
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			stop;
	}
}

// BASE Spawner
class AetheriusMonsterSpawner : RandomSpawner2 abstract
{
	mixin EvolveMonsters;
	
	int deathtimer;
	string MonsterName;
	
	bool IsDoom1()
	{
		bool Doom1 = false;
		if (Wads.CheckNumForName("DS-DOOM1", Wads.ns_global, -1, true) != -1) Doom1 = true;
		//if (dvdsdebug_monsterspawns) Console.Printf("Doom1: %d", Doom1);
		return Doom1;
	}

	// This function is needed for handling boss replacers 
	// [also this is to try to fix the problem of INSTANT effects on the death of spawned "boss" monsters in maps like E2M8/E3M8 so you can try to pick up the bosses' drops before the level ends]
	override void Tick()
	{
		Actor.Tick(); // Actor instead of Super in order to replace the original code added to RandomSpawner instead of adding to it.
		AetheriusMonsterZSC monstertype;
		if (tracer) monstertype = AetheriusMonsterZSC(tracer);
		if (tracer == null)
		{
			int dtimermax = 35; 
			if (deathtimer > dtimermax)
			{
				deathtimer++;
				A_BossDeath();
				if (dvdsdebug_scriptdisplays) Console.Printf("BOSS/BOSSDEATH type RandomSpawner Self-Destroyed/nulled");
				Destroy();
			}
		}
		else
		{
			if (monstertype)
			{
				MonsterName = monstertype.GetClassName();
				if (monstertype.bossdeathactivate)
				{
					deathtimer++;
					int dtimermax = 35;
					if (HellWarrior(tracer)) dtimermax = 40;
					if (Hierophant(tracer)) dtimermax = 42;
					if (FlyingBalrog(tracer)) dtimermax = 43;
					if (DSBaronOfHell(tracer) ||
							DSHellKnight(tracer) ||
							Belphegor(tracer) ||
							Cybruiser(tracer))
					{
						dtimermax = 48;
					}
					if (DSFatso(tracer) ||
							Hectebus(tracer) ||
							Daedabus(tracer)) 
					{
						dtimermax = 54;
					}
					if (DSArachnotron(tracer) ||
							DSRailArachnotron(tracer) ||
							FusionArachnotron(tracer) || 
							ArachnotronMK2(tracer)) 
					{
						dtimermax = 55;
					}
					if (ArchonOfHell(tracer)) dtimermax = 60;
					if (BruiserDemon(tracer)) dtimermax = 74;
					if (PyroDemon(tracer)) dtimermax = 101;
					if (DSCyberDemon(tracer) ||
							Annihilator(tracer))
					{
						dtimermax = 120;
					}
					if (DSSpiderMastermind(tracer) ||
							Demolisher(tracer))
					{
						dtimermax = 130;
					}
					if (dvdsdebug_scriptdisplays) Console.Printf("%s [bossdeathactivate: %d]: %d / %d", MonsterName, monstertype.bossdeathactivate, deathtimer, dtimermax);
					if (deathtimer > dtimermax)
					{
						A_BossDeath();
						if (dvdsdebug_scriptdisplays) Console.Printf("%s [bossdeathactivate: %d]", MonsterName, monstertype.bossdeathactivate);
						Destroy();
					}
				}
			}
			else
			{
				if (tracer.health <= 0)
				{
					deathtimer++;
					int dtimermax = 35;
					if (HellWarrior(tracer)) dtimermax = 40;
					if (FlyingBalrog(tracer)) dtimermax = 43;
					if (DSBaronOfHell(tracer) ||
							DSHellKnight(tracer) ||
							Belphegor(tracer) ||
							Cybruiser(tracer))
					{
						dtimermax = 48;
					}
					if (DSArachnotron(tracer) ||
							DSRailArachnotron(tracer) ||
							FusionArachnotron(tracer) || 
							ArachnotronMK2(tracer)) 
					{
						dtimermax = 55;
					}
					if (DSFatso(tracer) ||
							Daedabus(tracer)) 
					{
						dtimermax = 54;
					}
					if (BruiserDemon(tracer)) dtimermax = 74;
					if (DSCyberDemon(tracer) ||
							Annihilator(tracer))
					{
						dtimermax = 120;
					}
					if (DSSpiderMastermind(tracer) ||
							Demolisher(tracer))
					{
						dtimermax = 130;
					}
					if (dvdsdebug_scriptdisplays) Console.Printf("BOSS/BOSSDEATH type RandomSpawner: %d / %d", deathtimer, dtimermax);
					if (deathtimer > dtimermax)
					{
						A_BossDeath();
						if (dvdsdebug_scriptdisplays) Console.Printf("BOSS/BOSSDEATH type RandomSpawner Self-Destroyed/nulled");
						Destroy();
					}
				}
			}
		}
	}

	protected bool CanFitHere(Class<Actor> actorClass) 
	{
		let actor = Spawn(actorClass, Pos, NO_REPLACE);
		
		if (actor == null)
			return false;
		else 
		{
			let result = actor.TestMobjLocation();
			actor.ClearCounters();
			actor.Destroy();
			return result;
		}
	}
}

// Summon Monster Spawners
class DoomSpellSummonMonster : AetheriusMonsterSpawner
{
	default
	{
		+FRIENDLY;
	}
	int firstspawnattempt;
	int randchoice;
}

class SummonWeakMonster : DoomSpellSummonMonster
{
	override Name ChooseSpawn()
	{
		string classname;
		for (firstspawnattempt = 0; firstspawnattempt < 16; firstspawnattempt++)
		{
			randchoice = random(1,19);
			if (randchoice == 1) classname = "FZombieman";
			if (randchoice == 2) classname = "FPlasmaGuy";
			if (randchoice == 3) classname = "FRocketLauncherGuy";
			if (randchoice == 4) classname = "FRepeaterZombie";
			if (randchoice == 5) classname = "FKarasawaGuy";

			if (randchoice == 6) classname = "FShotgunGuy";
			if (randchoice == 7) classname = "FSuperShotgunGuy";
			if (randchoice == 8) classname = "FFemaleRailZombie";

			if (randchoice == 9) classname = "FDoomImp";
			if (randchoice == 10) classname = "FDarkImp";
			if (randchoice == 11) classname = "FSTDarkImp";
			if (randchoice == 12) classname = "FVoidDarkImp";

			if (randchoice == 13) classname = "FDemon";
			if (randchoice == 14) classname = "FBloodDemon";

			if (randchoice == 15) classname = "FWolfensteinSS";
			if (randchoice == 16) classname = "FChaingunDemon";

			if (randchoice == 17) classname = "FLostSoul";
			if (randchoice == 18) classname = "FHadesSphere";
			if (randchoice == 19) classname = "FHSOverlord";

			if (dvdsdebug_summonspawndisplays) Console.Printf("%s (%d)", classname, firstspawnattempt);
			if (CanFitHere(classname)) 
			{
				return classname;
			}
		}
		if (dvdsdebug_summonspawndisplays) Console.Printf("FailedSummon");
		randchoice = 0;
		return "FailedSummon";
	}
}

class SummonMonster : DoomSpellSummonMonster
{
	override Name ChooseSpawn()
	{
		string classname;
		for (firstspawnattempt = 0; firstspawnattempt < 16; firstspawnattempt++)
		{
			randchoice = random(1,13);
			if (randchoice == 1) classname = "FHellCleric";

			if (randchoice == 2) classname = "FSpectre";
			if (randchoice == 3) classname = "FBloodSpectre";

			if (randchoice == 4) classname = "FChaingunGuy";
			if (randchoice == 5) classname = "FBFGGuy";
			if (randchoice == 6) classname = "FChaingunSpectre";

			if (randchoice == 7) classname = "FCacodemon";
			if (randchoice == 8) classname = "FCacolantern";
			if (randchoice == 9) classname = "FAbaddon";
			if (randchoice == 10) classname = "FHadesElemental";

			if (randchoice == 11) classname = "FHellKnight";
			if (randchoice == 12) classname = "FBaronOfHell";
			if (randchoice == 13) classname = "FHellWarrior";

			if (dvdsdebug_summonspawndisplays) Console.Printf("%s (%d)", classname, firstspawnattempt);
			if (CanFitHere(classname)) 
			{
				return classname;
			}
		}
		if (dvdsdebug_summonspawndisplays) Console.Printf("FailedSummon");
		randchoice = 0;
		return "FailedSummon";
	}
}

class SummonStrongMonster : DoomSpellSummonMonster
{
	override Name ChooseSpawn()
	{
		string classname;
		for (firstspawnattempt = 0; firstspawnattempt < 16; firstspawnattempt++)
		{
			randchoice = random(1,19);
			if (randchoice == 1) classname = "FFlyingBalrog";

			if (randchoice == 2) classname = "FBaronOfHell";
			if (randchoice == 3) classname = "FBelphegor";
			if (randchoice == 4) classname = "FBruiserDemon";
			if (randchoice == 5) classname = "FCyBruiser";
			if (randchoice == 6) classname = "FArchonOfHell";
			if (randchoice == 7) classname = "FPyroDemon";

			if (randchoice == 8) classname = "FHadesElemental";
			if (randchoice == 9) classname = "FHadesOverlord";

			if (randchoice == 10) classname = "FRevenant";
			if (randchoice == 11) classname = "FDeathIncarnate";

			if (randchoice == 12) classname = "FFatso";
			if (randchoice == 13) classname = "FHectebus";
			if (randchoice == 14) classname = "FDaedabus";

			if (randchoice == 15) classname = "FArachnotron";
			if (randchoice == 16) classname = "FRailArachnotron";
			if (randchoice == 17) classname = "FArachnotronMK2";
			if (randchoice == 18) classname = "FFusionArachnotron";

			if (randchoice == 19) classname = "FHierophant";

			if (dvdsdebug_summonspawndisplays) Console.Printf("%s (%d)", classname, firstspawnattempt);
			if (CanFitHere(classname)) 
			{
				return classname;
			}
		}
		if (dvdsdebug_summonspawndisplays) Console.Printf("FailedSummon");
		randchoice = 0;
		return "FailedSummon";
	}
}

class SummonArchvile : DoomSpellSummonMonster
{
	override Name ChooseSpawn()
	{
		string classname;
		for (firstspawnattempt = 0; firstspawnattempt < 16; firstspawnattempt++)
		{
			randchoice = random(1,2);
			if (randchoice == 1) classname = "FArchvile";
			if (randchoice == 2) classname = "FDiabloist";

			if (dvdsdebug_summonspawndisplays) Console.Printf("%s (%d)", classname, firstspawnattempt);
			if (CanFitHere(classname)) 
			{
				return classname;
			}
		}
		if (dvdsdebug_summonspawndisplays) Console.Printf("FailedSummon");
		randchoice = 0;
		return "FailedSummon";
	}
}

class SummonCyberdemon : DoomSpellSummonMonster
{
	override Name ChooseSpawn()
	{
		string classname;
		for (firstspawnattempt = 0; firstspawnattempt < 16; firstspawnattempt++)
		{
			randchoice = random(1,2);
			if (randchoice == 1) classname = "FCyberdemon";
			if (randchoice == 2) classname = "FAnnihilator";

			if (dvdsdebug_summonspawndisplays) Console.Printf("%s (%d)", classname, firstspawnattempt);
			if (CanFitHere(classname)) 
			{
				return classname;
			}
		}
		if (dvdsdebug_summonspawndisplays) Console.Printf("FailedSummon");
		randchoice = 0;
		return "FailedSummon";
	}
}

// Doom Monsters
class ZombiemanSpawner : AetheriusMonsterSpawner replaces Zombieman
{
	Default
	{
		//$Sprite "RNMSA0"
		Radius 20;
		Height 56;
	}
	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= 4) return "ShotgunGuySpawner"; // Gives an VERY-RARE chance for a Zombieman to use ShotgunGuy spawns instead. :V
		else if (random(1,256) <= 8 && modtype == 0 && checkbombers == 1) return "SuicideBomber";
		else if (random(1,256) <= 4 && modtype == 0 && monstersoption == 1) return "HellCleric";
		else if (random(1,256) <= 8 && doomtype == 1) return "ChaingunGuy";
		else if (random(1,256) <= evolvechance)
		{
			if (random(1,2) == 1) return "RocketLauncherGuy";
			else
			{
				evolveChance = A_GetEvolveChance();
				if (random(1,320) <= evolvechance)
				{
					if (modtype == 1) // Prevents Repeater and Karasawa Zombies from spawning in DVI-DS.
					{
						return "PlasmaGuy";
					}
					else
					{
						if (random(1,2) == 1) return "RepeaterZombie";
														 else return "KarasawaGuy";
					}
				}
				else return "PlasmaGuy";
			}
		}
		else
			return "DSZombieman";
	}
}
class StealthZombiemanSpawner : ZombiemanSpawner replaces StealthZombieman { }

// Plasma-Rifle Guy
// Rocket-Launcher Guy
// Repeater Zombie
// Karasawa Guy

// Shotgun Guy
class ShotgunGuySpawner : AetheriusMonsterSpawner replaces ShotgunGuy
{
	Default
	{
		//$Sprite "RNMSB0"
		Radius 20;
		Height 56;
	}
	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= 4) return "ZombiemanSpawner"; // Gives an VERY-RARE chance for a ShotgunGuy to use Zombieman spawns instead. :V
		if (random(1,256) <= 8 && modtype == 0 && checkbombers == 1) return "SuicideBomber";
		else if (random(1,256) <= 8 && modtype == 0 && monstersoption == 1) return "HellCleric";
		else if (random(1,256) <= 16 && doomtype == 1) return "ChaingunGuy";
		else if (random(1,256) <= evolvechance)
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,256) <= evolvechance)
				return "FemaleRailZombie";
			else
				return "SuperShotgunGuy";
		}
		else
			return "DSShotgunGuy";
	}
}
class StealthShotgunGuySpawner : ShotgunGuySpawner replaces StealthShotgunGuy { }

// Super-Shotgun Guy

// Chaingun Guy
class ChaingunGuySpawner : AetheriusMonsterSpawner replaces ChaingunGuy
{
	Default
	{
		//$Sprite "RNMSC0"
		Radius 20;
		Height 56;
	}
	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= 4) { if (random(1,2) == 1) return "ShotgunGuySpawner"; else return "ZombiemanSpawner"; } // Gives an VERY-RARE chance for a ChaingunGuy to use Zombieman or ShotgunGuy spawns instead. :V
		if (random(1,256) <= 8 && modtype == 0 && checkbombers == 1) return "SuicideBomber";
		else if (random(1,256) <= 4 && modtype == 0 && monstersoption == 1) return "HellCleric";
		else if (random(1,256) <= evolvechance)
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,320) <= evolvechance)
				return "BFGGuy";
			else
				return "Minigunner";
		}
		else
			return "DSChaingunGuy";
	}
}
class StealthChaingunGuySpawner : ChaingunGuySpawner replaces StealthChaingunGuy { }

// BFG9000 Guy

// Imp
class DoomImpSpawner : AetheriusMonsterSpawner replaces DoomImp
{
	Default
	{
		//$Sprite "RNMSD0"
		Radius 20;
		Height 56;
	}
	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		let darkimptype = random(1,3);
		
		if (random(1,256) <= 8 && modtype == 0 && monstersoption == 1)
			return "HellCleric";
		else if (random(1,256) <= evolvechance)
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,320) <= evolvechance)
			{
				if (CanFitHere("NetherDarkImp")) return "NetherDarkImp";
				else 
				{
					if (darkimptype == 1) return "VoidDarkImp"; // Stronger Dark Imp
					else if (darkimptype == 2) return "STDarkImp"; // Weaker Dark Imp
					else return "DarkImp"; // Normal Dark Imp
				}
			}
			else
			{
				if (darkimptype == 1) return "VoidDarkImp"; // Stronger Dark Imp
				else if (darkimptype == 2) return "STDarkImp"; // Weaker Dark Imp
				else return "DarkImp"; // Normal Dark Imp
			}
		}
		else
			return "DSDoomImp";
	}
}
class StealthDoomImpSpawner : DoomImpSpawner replaces StealthDoomImp { }

// Dark Imp

// Demon
class DemonSpawner : AetheriusMonsterSpawner replaces Demon
{
	Default
	{
		//$Sprite "RNMSE0"
		Radius 30;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= 16 && modtype == 0 && monstersoption == 1) return "HellCleric";
		else if (random(1,256) <= evolvechance) // Spectres
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,256) <= evolvechance)
			{
				evolveChance = A_GetEvolveChance();
				if (random(1,512) <= evolvechance)
					return "ChaingunSpectre";
				else if (random(1,16) <= 1)
					return "ChaingunSpectre";
				else
					return "BloodSpectre";
			}
			else
				return "DSSpectre";
		}
		else if (random(1,256) <= evolvechance) // Demons
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,512) <= evolvechance)
				return "ChaingunDemon";
			else if (random(1,16) <= 1)
				return "ChaingunDemon";
			else
				return "BloodDemon";
		}
		else
			return "DSDemon";
	}
}

class SpectreSpawner : AetheriusMonsterSpawner replaces Spectre
{
	Default
	{
		//$Sprite "RNMSF0"
		Radius 30;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= 16 && modtype == 0 && monstersoption == 1) return "HellCleric";
		else if (random(1,256) <= evolvechance) // Demons
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,512) <= evolvechance)
				return "ChaingunSpectre";
			else if (random(1,16) <= 1)
				return "ChaingunSpectre";
			else
				return "BloodSpectre";
		}
		else
			return "DSSpectre";
	}
}
class StealthDemonSpawner : DemonSpawner replaces StealthDemon { }

// Blood Demon

// Revenant
class RevenantSpawner : AetheriusMonsterSpawner replaces Revenant
{
	Default
	{
		//$Sprite "RNMSG0"
		Radius 20;
		Height 56;
	}
	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= 16 && modtype == 0 && monstersoption == 1) return "HellCleric";
		else if (random(1,320) <= evolvechance)
			return "DeathIncarnate";
		else
			return "DSRevenant";
	}
}
class StealthRevenantSpawner : RevenantSpawner replaces StealthRevenant { }

// Death Incarnate

// Cacodemon
class CacodemonSpawner : AetheriusMonsterSpawner replaces Cacodemon
{
	Default
	{
		//$Sprite "RNMSH0"
		Radius 31;
		Height 56;
	}
	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= evolvechance) // Upgrade to Other Cacos
		{
			if (modtype == 1) // DVI
			{
				evolveChance = A_GetEvolveChance();
				if (random(1,320) <= evolvechance)
				{
					if (CanFitHere("Abaddon")) return "Abaddon";
					else if (CanFitHere("Cacolantern")) return "Cacolantern";
					else return "DSCacoDemon";
				}
				else
				{
					if (CanFitHere("Cacolantern")) return "Cacolantern";
					else return "DSCacoDemon";
				}
			}
			else // Normal or DVII
			{
				evolveChance = A_GetEvolveChance();
				if (random(1,320) <= evolvechance)
				{
					evolveChance = A_GetEvolveChance();
					if (random(1,384) <= evolvechance)
					{
						evolveChance = A_GetEvolveChance();
						if (random(1,448) <= evolvechance)
						{
							if (CanFitHere("HadesOverlord")) return "HadesOverlord";
							else if (CanFitHere("HadesElemental")) return "HadesElemental";
							else if (CanFitHere("Abaddon")) return "Abaddon";
							else if (CanFitHere("Cacolantern")) return "Cacolantern";
							else return "DSCacodemon";
						}
						else
						{
							if (CanFitHere("HadesElemental")) return "HadesElemental";
							else if (CanFitHere("Abaddon")) return "Abaddon";
							else if (CanFitHere("Cacolantern")) return "Cacolantern";
							else return "DSCacodemon";
						}
					}
					else
					{
						if (CanFitHere("Abaddon")) return "Abaddon";
						else if (CanFitHere("Cacolantern")) return "Cacolantern";
						else return "DSCacodemon";
					}
				}
				else
				{
					if (CanFitHere("Cacolantern")) return "Cacolantern";
					else return "DSCacodemon";
				}
			}
		}
		else
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,768) <= evolvechance) // Upgrade to Hades Scion
			{
				evolveChance = A_GetEvolveChance();
				if (random(1,960) <= evolvechance)
				{
					if (CanFitHere("HadesOverlord")) return "HadesOverlord";
					else if (CanFitHere("HadesElemental")) return "HadesElemental";
					else return "DSCacodemon";
				}
				else
				{
					if (CanFitHere("HadesElemental")) return "HadesElemental";
					else return "DSCacodemon";
				}
			}
			else
				return "DSCacoDemon";
		}
	}
}
class StealthCacodemonSpawner : CacodemonSpawner replaces StealthCacodemon { }

// Cacolantern
// Abaddon

// Pain Elemental
class PainElementalSpawner : AetheriusMonsterSpawner replaces PainElemental
{
	Default
	{
		//$Sprite "RNMSI0"
		Radius 31;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (modtype == 0 && random(1,256) <= evolvechance) // Upgrade to Hades Scion
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,320) <= evolvechance)
			{
				if (CanFitHere("HadesOverlord")) return "HadesOverlord";
				else if (CanFitHere("HadesElemental")) return "HadesElemental";
				else return "DSPainElemental";
			}
			else
			{
				if (CanFitHere("HadesElemental")) return "HadesElemental";
				else return "DSPainElemental";
			}
		}
		else return "DSPainElemental";
	}
}

// Hades Elemental
// Hades Overlord

// LostSoul
class LostSoulSpawner : AetheriusMonsterSpawner replaces LostSoul
{
	Default
	{
		//$Sprite "RNMSR0"
		Radius 16;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;

		if (random(1,256) <= evolvechance)
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,384) <= evolvechance) 
			{
				if (random(1,256) <= evolveChance) return "BetaLostSoul";
																			else return "ForgottenOne";
			}
			else 
			{
				if (random(1,256) <= evolveChance) return "BetaLostSoul";
																			else return "DSLostSoul2";
			}
		}
		else 
		{
			if (random(1,256) <= evolveChance) return "BetaLostSoul";
																		else return "DSLostSoul";
		}
	}
}

// Arachnotron
class ArachnotronSpawner : AetheriusMonsterSpawner replaces Arachnotron
{
	Default
	{
		//$Sprite "RNMSJ0"
		Radius 64;
		Height 64;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= evolvechance) // Upgrade to Barons
		{
			if (random(1,2) == 1)
				return "FusionArachnotron";
			else
				return "ArachnotronMK2";
		}
		else if (random(1,256) <= randompick(96,128,128,128,128,160))
			return "DSRailArachnotron";
		else
			return "DSArachnotron";
	}
}
class StealthArachnotronSpawner : ArachnotronSpawner replaces StealthArachnotron { }

// Fusion Arachnotron

// Hell Knight
class HellKnightSpawner : AetheriusMonsterSpawner replaces HellKnight
{
	Default
	{
		//$Sprite "RNMSK0"
		Radius 24;
		Height 64;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		let barontype = random(1,3);
		
		if (random(1,256) <= 8 && modtype == 0 && monstersoption == 1)
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,512) <= evolvechance)
				return "Hierophant";
			else
				return "FlyingBalrog";
		}
		else if (random(1,256) <= evolvechance) // Upgrade to Barons
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,320) > evolvechance)
				return "DSBaronOfHell";
			else
			{
				evolveChance = A_GetEvolveChance();
				if (random(1,384) > evolvechance)
					return "Belphegor";
				else
				{
					evolveChance = A_GetEvolveChance();
					if (random(1,448) > evolvechance)
					{
						if (barontype == 1)
							return "BruiserDemon";
						else if (barontype == 2)
							return "ArchonofHell";
						else
							return "CyBruiser";
					}
					else
					{
						evolveChance = A_GetEvolveChance();
						if (random(1,1024) > evolvechance)
							return "PyroDemon";
						else
						{
							if (random(1,16) <= 1)
								return "Hierophant";
							else
								return "FlyingBalrog";
						}
					}
				}
			}
		}
		else
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,1024) <= evolvechance)
				return "HellWarrior";
			else
				return "DSHellKnight";
		}
	}
}
class StealthHellKnightSpawner : HellKnightSpawner replaces StealthHellKnight { }

// Mancubus
class MancubusSpawner : AetheriusMonsterSpawner replaces Fatso
{
	Default
	{
		//$Sprite "RNMSL0"
		Radius 48;
		Height 64;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= evolvechance)
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,320) > evolvechance)
				return "Hectebus";
			else
				return "Daedabus";
		}
		else
			return "DSFatso";
	}
}
class StealthMancubusSpawner : MancubusSpawner replaces StealthFatso { }

// Hectebus

// Archvile
class ArchvileSpawner : AetheriusMonsterSpawner replaces Archvile
{
	Default
	{
		//$Sprite "RNMSM0"
		Radius 20;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		let barontype = random(1,3);
		
		if (random(1,512) <= evolvechance)
			return "Diabloist";
		else
			return "DSArchvile";
	}
}
class StealthArchvileSpawner : ArchvileSpawner replaces StealthArchvile { }

// Diabloist

// Baron Of Hell
class BaronofHellSpawner : AetheriusMonsterSpawner replaces BaronofHell
{
	Default
	{
		//$Sprite "RNMSN0"
		Radius 24;
		Height 64;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		let barontype = random(1,3);
		
		if (random(1,256) <= 8 && modtype == 0 && monstersoption == 1)
		{
			evolveChance = A_GetEvolveChance();
			if (random(1,512) <= evolvechance)
				return "Hierophant";
			else
				return "FlyingBalrog";
		}
		else
		{
			if (random(1,256) <= evolvechance) // Upgrade to Barons
			{
				evolveChance = A_GetEvolveChance();
				if (random(1,320) > evolvechance)
					return "Belphegor";
				else
				{
					evolveChance = A_GetEvolveChance();
					if (random(1,384) > evolvechance)
					{
						if (barontype == 1)
							return "BruiserDemon";
						else if (barontype == 2)
							return "ArchonofHell";
						else
							return "CyBruiser";
					}
					else
					{
						evolveChance = A_GetEvolveChance();
						if (random(1,1024) > evolvechance)
							return "PyroDemon";
						else
							return "Hierophant";
					}
				}
			}
			else
			{
				evolveChance = A_GetEvolveChance();
				if (random(1,4096) <= evolvechance)
					return "HellWarrior";
				else
					return "DSBaronofHell";
			}
		}
	}
}
class StealthBaronSpawner : BaronofHellSpawner replaces StealthBaron { }

// Blephegor


// Brusier Demon
// Archon of Hell
// Pyro Demon

// Spider Mastermind
class SpiderMastermindSpawner : AetheriusMonsterSpawner replaces SpiderMastermind
{
	Default
	{
		//$Sprite "RNMSO0"
		Radius 128;
		Height 100;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= evolvechance)
			return "Demolisher";
		else
			return "DSSpiderMastermind";
	}
}

// Cyberdemon
class CyberdemonSpawner : AetheriusMonsterSpawner replaces Cyberdemon
{
	Default
	{
		//$Sprite "RNMSP0"
		Radius 40;
		Height 110;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,256) <= evolvechance)
			return "Annihilator";
		else
			return "DSCyberdemon";
	}
}

// FlyingBalrog
class FlyingBalrogSpawner : AetheriusMonsterSpawner
{
	Default
	{
		//$Sprite "RNMSQ0"
		Radius 24;
		Height 64;
	}

	override Name ChooseSpawn()
	{
		int modtype = CallACS("OtherVarCheckDECORATE",8);
		int doomtype = CallACS("OtherVarCheckDECORATE",7);
		int evolvechance = A_GetEvolveChance();
		int monstersoption = dvds_classicdviimonsters;
		int checkbombers = dvds_suicidebombers;
		
		if (random(1,512) <= evolvechance)
			return "Hierophant";
		else
			return "FlyingBalrog";
	}
}
class BaseExperiessence : AetheriusCustomInventory
{
	int user_transpulsetype;
	int ActorVar1;
	
	action void A_PickupExperiessence(double percentage = 1.0)
	{
		int CharacterClass = CallACS("CheckCharacterClass");
		int PlayerLevel = CallACS("StatCheck",0);
		int ClearedOfMindPerkLevel = CallACS("MiscVarCheckDECORATE",10055);
		int ClearedOfMindEXPerkLevel = CallACS("MiscVarCheckDECORATE",10056);
		
		if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("percentage: %.8f", percentage);
		double BaseEXPGain = percentage;
		double perkfactor;
		if (random(1,64) == 1) BaseEXPGain *= 2.0;
		if (random(1,256) == 1) BaseEXPGain *= 2.0;
		if (random(1,1024) == 1) BaseEXPGain *= 2.0;
		
		int EXPGiven;
		
		if (PlayerLevel == 0) { EXPGiven = (CallACS("ExpTableCheckDECORATE",PlayerLevel) * BaseEXPGain) / 100; }
		else if (PlayerLevel >= 1) { EXPGiven = ((CallACS("ExpTableCheckDECORATE",PlayerLevel) - CallACS("ExpTableCheckDECORATE",(PlayerLevel-1))) * BaseEXPGain) / 100; }
		if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [Base]", EXPGiven);
		
		if (ClearedOfMindPerkLevel > 0)
		{
			perkfactor = 1.00;
			if (ClearedOfMindPerkLevel >= 1) perkfactor += 0.04;
			if (ClearedOfMindPerkLevel >= 2) perkfactor += 0.05;
			if (ClearedOfMindPerkLevel >= 3) perkfactor += 0.06;
			if (ClearedOfMindPerkLevel >= 4) perkfactor += 0.07;
			if (ClearedOfMindPerkLevel >= 5) perkfactor += 0.08;
			if (ClearedOfMindEXPerkLevel >= 1) perkfactor += 0.10;
			if (ClearedOfMindEXPerkLevel >= 2) perkfactor += 0.20;
			EXPGiven *= perkfactor;
			if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [Perks1], PerkFactor: %.8f", EXPGiven, perkfactor);
		}
		if (CallACS("MiscVarCheckDECORATE",11001) > 0)
		{
			if (CallACS("MiscVarCheckDECORATE",11001) == 1)
			{
				if (CharacterClass == 0 | CharacterClass == 1) EXPGiven *= 1.225; // EXP Multiplier Option [122.5%]
				if (CharacterClass == 2) EXPGiven *= 1.15; // EXP Multiplier Option [115%]
			}
			if (CallACS("MiscVarCheckDECORATE",11001) == 2)
			{
				if (CharacterClass == 0 | CharacterClass == 1) EXPGiven *= 1.45; // EXP Multiplier Option [145%]
				if (CharacterClass == 2) EXPGiven *= 1.3; // EXP Multiplier Option [130%]
			}
			if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [Perks2]", EXPGiven);
		}
	
		int ExpMultiplier = dvds_expmultiplier;
		int basemulti;
		if (EXPGiven > 0)
		{
			basemulti = random(25,35) * 25;
			EXPGiven = (EXPGiven * basemulti) / 1000;
			if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [Factor1], BaseMult: %d / 1000", EXPGiven, basemulti);
	
			EXPGiven = (EXPGiven * ExpMultiplier) / 100;
			if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [ExpMulti], ExpMultiplier: %d / 100", EXPGiven, ExpMultiplier);

			CallACS("ExpCheat",ExpGiven); // Experience += EXPGiven;
		}
	}
}

class BaseSeed : AetheriusCustomInventory
{
	action void A_GrabSeedOther(int SeedType = 0, double SeedAmount = 0, int SeedLimitTypeIncrease = 0)
	{
		int ModType = CallACS("OtherVarCheckDECORATE",8);

		int SkillSeedRuns, MaxSkillSeedRuns, SkillSeedRND, OldAGL, NewAGL, OldDEF, NewDEF, OldDFT, NewDFT, OldSOR, NewSOR, OldSTR, NewSTR, OldTHE, NewTHE, OldAeonPts, NewAeonPts;
		int SeedMulti;
		
		if (ModType == 0 && dvds_canseedsappear == 0) { }
		else
		{
			if (SeedAmount < 1) SeedAmount = 1;
			
			// "0" is for non-dropped or map-placed seeds as to not impose a limit on those
			if (SeedLimitTypeIncrease == 1) CallACS("MiscVarSetDECORATE",30,1,1); // "1" is Normal Seeds
			if (SeedLimitTypeIncrease == 2) CallACS("MiscVarSetDECORATE",37,1,1); // "2" is Skill Seeds
			if (SeedLimitTypeIncrease == 3) CallACS("MiscVarSetDECORATE",27,1,1); // "3" is Fyggs
			
			if (SeedType < 0) SeedAmount = 0;
			if (SeedType > 7) SeedAmount = 0;
			
			OldAeonPts = CallACS("MiscVarCheckDECORATE",25);
			OldAGL = CallACS("MiscVarCheckDECORATE",31);
			OldDEF = CallACS("MiscVarCheckDECORATE",32);
			OldDFT = CallACS("MiscVarCheckDECORATE",33);
			OldSOR = CallACS("MiscVarCheckDECORATE",34);
			OldSTR = CallACS("MiscVarCheckDECORATE",35);
			OldTHE = CallACS("MiscVarCheckDECORATE",36);
			
			SeedMulti = 1;
			if (random(1,24) >= 24)
			{ 
				SeedMulti += 1;
				if (random(1,24) >= 24)
				{
					SeedMulti += 1;
					if (random(1,24) >= 24) SeedMulti += 1;
				}
			}
			
			if (SeedType == 0) // Seed of Skill [special seed, 4+ AeonPts ]
			{
				SeedAmount = 4;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				SeedAmount *= CallACS("MiscVarCheckDECORATE",86);
				CallACS("MiscVarSetDECORATE",25,SeedAmount,1);
			}
			
			if (SeedType == 1) // Seed of Agility [Speed/Movement]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",31) < 512) CallACS("MiscVarSetDECORATE",31,SeedAmount,1);
			}
			
			if (SeedType == 2) // Seed of Defense [Overall Resistance]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",32) < 512) CallACS("MiscVarSetDECORATE",32,SeedAmount,1);
			}
			
			if (SeedType == 3) // Seed of Deftness [EXP Gain %]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",33) < 512) CallACS("MiscVarSetDECORATE",33,SeedAmount,1);
			}
			
			if (SeedType == 4) // Seed of Sorcery [Magical Attack]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",34) < 512) CallACS("MiscVarSetDECORATE",34,SeedAmount,1);
			}
			
			if (SeedType == 5) // Seed of Strength [Overall Attack]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",35) < 512) CallACS("MiscVarSetDECORATE",35,SeedAmount,1);
			}
			
			if (SeedType == 6) // Seed of Therapeusis [Magical Resistance]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",36) < 512) CallACS("MiscVarSetDECORATE",36,SeedAmount,1);
			}
			
			if (SeedType == 7) // Fygg (extremely rare) [all stats +16]
			{
				SeedAmount = 16;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",31) < 512) CallACS("MiscVarSetDECORATE",31,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",32) < 512) CallACS("MiscVarSetDECORATE",32,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",33) < 512) CallACS("MiscVarSetDECORATE",33,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",34) < 512) CallACS("MiscVarSetDECORATE",34,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",35) < 512) CallACS("MiscVarSetDECORATE",35,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",36) < 512) CallACS("MiscVarSetDECORATE",36,SeedAmount,1);
			}
			
			if (SeedType == 8) // Platinum Fygg (extremely rare) [+16 to all stats & +64 Aeon Points]
			{
				SeedAmount = 64;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				SeedAmount *= CallACS("MiscVarCheckDECORATE",86);
				CallACS("MiscVarSetDECORATE",25,SeedAmount,1);
			
				SeedAmount = 16;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",31) < 512) CallACS("MiscVarSetDECORATE",31,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",32) < 512) CallACS("MiscVarSetDECORATE",32,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",33) < 512) CallACS("MiscVarSetDECORATE",33,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",34) < 512) CallACS("MiscVarSetDECORATE",34,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",35) < 512) CallACS("MiscVarSetDECORATE",35,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",36) < 512) CallACS("MiscVarSetDECORATE",36,SeedAmount,1);
			}
			
			if (SeedType == 9) // Enhanced Seed of Skill [special seed, 16+ AeonPts ]
			{
				SeedAmount = 16;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				SeedAmount *= CallACS("MiscVarCheckDECORATE",86);
				CallACS("MiscVarSetDECORATE",25,SeedAmount,1);
			}
			
			if (CallACS("MiscVarCheckDECORATE",31) > 512) CallACS("MiscVarSetDECORATE",31,512);
			if (CallACS("MiscVarCheckDECORATE",32) > 512) CallACS("MiscVarSetDECORATE",32,512);
			if (CallACS("MiscVarCheckDECORATE",33) > 512) CallACS("MiscVarSetDECORATE",33,512);
			if (CallACS("MiscVarCheckDECORATE",34) > 512) CallACS("MiscVarSetDECORATE",34,512);
			if (CallACS("MiscVarCheckDECORATE",35) > 512) CallACS("MiscVarSetDECORATE",35,512);
			if (CallACS("MiscVarCheckDECORATE",36) > 512) CallACS("MiscVarSetDECORATE",36,512);
			NewAeonPts = CallACS("MiscVarCheckDECORATE",25);
			NewAGL = CallACS("MiscVarCheckDECORATE",31);
			NewDEF = CallACS("MiscVarCheckDECORATE",32);
			NewDFT = CallACS("MiscVarCheckDECORATE",33);
			NewSOR = CallACS("MiscVarCheckDECORATE",34);
			NewSTR = CallACS("MiscVarCheckDECORATE",35);
			NewTHE = CallACS("MiscVarCheckDECORATE",36);
			
			if (NewAeonPts-OldAeonPts > 0)
			{
				CallACS("MiscVarSetDECORATE",224,(NewAeonPts-OldAeonPts),1); 
				CallACS("MiscVarSetDECORATE",2033,105); 
			}
			if (NewAGL-OldAGL > 0)
			{
				CallACS("MiscVarSetDECORATE",225,(NewAGL-OldAGL),1); 
				CallACS("MiscVarSetDECORATE",2034,105); 
			}
			if (NewDEF-OldDEF > 0)
			{
				CallACS("MiscVarSetDECORATE",226,(NewDEF-OldDEF),1); 
				CallACS("MiscVarSetDECORATE",2035,105); 
			}
			if (NewDFT-OldDFT > 0)
			{
				CallACS("MiscVarSetDECORATE",227,(NewDFT-OldDFT),1); 
				CallACS("MiscVarSetDECORATE",2036,105); 
			}
			if (NewSOR-OldSOR > 0)
			{
				CallACS("MiscVarSetDECORATE",228,(NewSOR-OldSOR),1); 
				CallACS("MiscVarSetDECORATE",2037,105); 
			}
			if (NewSTR-OldSTR > 0)
			{
				CallACS("MiscVarSetDECORATE",229,(NewSTR-OldSTR),1); 
				CallACS("MiscVarSetDECORATE",2038,105); 
			}
			if (NewTHE-OldTHE > 0)
			{
				CallACS("MiscVarSetDECORATE",230,(NewTHE-OldTHE),1); 
				CallACS("MiscVarSetDECORATE",2039,105); 
			}
			
			if (SeedType == 0) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Skill!\n\n\cjAeonPts: %d --> %d", OldAeonPts, NewAeonPts), frandom(1.542,1.08));
			}
			
			if (SeedType == 1) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Agility!\n\n\cjAgility: %d --> %d", OldAGL, NewAGL), frandom(1.028,1.2));
			}
			
			if (SeedType == 2) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Defense!\n\n\cjDefense: %d --> %d", OldDEF, NewDEF), frandom(1.028,1.2));
			}
			
			if (SeedType == 3) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Deftness!\n\n\cjDeftness: %d --> %d", OldDFT, NewDFT), frandom(1.028,1.2));
			}
			
			if (SeedType == 4) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Sorcery!\n\n\cjSorcery: %d --> %d", OldSOR, NewSOR), frandom(1.028,1.2));
			}
			
			if (SeedType == 5) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Strength!\n\n\cjStrength: %d --> %d", OldSTR, NewSTR), frandom(1.028,1.2));
			}
			
			if (SeedType == 6) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Therapeusis!\n\n\cjTherapeusis: %d --> %d", OldTHE, NewTHE), frandom(1.028,1.2));
			}
			
			if (SeedType == 7) 
			{
				A_PrintBold(String.Format("\cjZOMG You've Ate a Fygg!!!!\n\n\cjAgility: %d --> %d\n\cjDefense: %d --> %d\n\cjDeftness: %d --> %d\n\cjSorcery: %d --> %d\n\cjStrength: %d --> %d\n\cjTherapeusis: %d --> %d", OldAGL, NewAGL, OldDEF, NewDEF, OldDFT, NewDFT, OldSOR, NewSOR, OldSTR, NewSTR, OldTHE, NewTHE), frandom(2.057,2.4));
			}
			
			if (SeedType == 8) 
			{
				A_PrintBold(String.Format("\cjZOMG You've Ate a PLATNIUM Fygg!!!!\n\n\cjAeonPts: %d --> %d\n\cjAgility: %d --> %d\n\cjDefense: %d --> %d\n\cjDeftness: %d --> %d\n\cjSorcery: %d --> %d\n\cjStrength: %d --> %d\n\cjTherapeusis: %d --> %d", OldAeonPts, NewAeonPts, OldAGL, NewAGL, OldDEF, NewDEF, OldDFT, NewDFT, OldSOR, NewSOR, OldSTR, NewSTR, OldTHE, NewTHE), frandom(2.057,2.4));
			}
			
			if (SeedType == 9) 
			{
				A_PrintBold(String.Format("\cjYou've Ate an Enhanced Seed of Skill!\n\n\cjAeonPts: %d --> %d", OldAeonPts, NewAeonPts), frandom(1.542,1.08));
			}
		}
	}
	
	action void A_GrabLifeManaSeed(int SeedType = 0, int SeedAmount = 0, int SeedLimitTypeIncrease = 0)
	{
		int CharacterClass = CallACS("CheckCharacterClass");
		int ModType = CallACS("OtherVarCheckDECORATE",8);
		int MaxHealthTrue = CallACS("StatCheck",1);
		int MaxMana = CallACS("StatCheck",2);
		int CurrentMana = CallACS("StatCheck",14);
		int debugseedstuff = dvdsdebug_showseedstuff;
		
		int SkillSeedRuns, SkillSeedRND, OldHP, NewHP, OldMP, NewMP, StatGain1, StatGain2, ArmorHPBonus, PerkFactor;
		
		if (ModType == 0 && dvds_canseedsappear == 0) { }
		else
		{
			SeedAmount = clamp(SeedAmount, 1, SeedAmount);
			SeedType = clamp(SeedType, 1, 2);
			
			OldHP = MaxHealthTrue;
			OldMP = MaxMana;
			
			if (SeedType == 1) // Seed of Life
			{
				StatGain1 = (MaxHealthTrue * 0.0125);
				if (CharacterClass == 0) StatGain1 += randompick(1,1,2,2,2,2,2,3,3);
				if (CharacterClass == 1) StatGain1 += randompick(1,1,1,1,2,2,2,2,2);
				if (CharacterClass == 2) StatGain1 += randompick(1,1,1,1,1,1,2,2,2);
				if (CharacterClass == 8) StatGain1 += randompick(1,1,1,1,1,1,1,1,2);
				if (CharacterClass == 9) StatGain1 += randompick(1,2,2,2,2,3,3,3,3);
				if (debugseedstuff) Console.Printf("StatGain1 [Base]: %d", StatGain1);
			
				SkillSeedRND = random(1,19);
			
				if (SkillSeedRND == 1) StatGain1 = floor(StatGain1 * 1.0);
				if (SkillSeedRND >= 2 && SkillSeedRND <= 6) StatGain1 = floor(StatGain1 * 1.5);
				if (SkillSeedRND >= 7 && SkillSeedRND <= 12) StatGain1 = floor(StatGain1 * 2.0);
				if (SkillSeedRND >= 13 && SkillSeedRND <= 18) StatGain1 = floor(StatGain1 * 2.5);
				if (SkillSeedRND == 19) StatGain1 = floor(StatGain1 * 3.0);
				if (debugseedstuff) Console.Printf("StatGain1 [Randomizer1]: %d", StatGain1);
			
				StatGain1 *= SeedAmount;
				StatGain1 *= CallACS("MiscVarCheckDECORATE",87);
				if (debugseedstuff) Console.Printf("StatGain1 [Multipliers]: %d", StatGain1);
			
				// Flora's Armor Items [up to +45% Max HP gained from Max HP Bonuses]
				if (CharacterClass == 2)
				{
					if (player.mo.CountInv("PearlyCorset")) ArmorHPBonus += 20; // +20%
					if (player.mo.CountInv("KissaBra")) ArmorHPBonus += 10; // +10%
					if (player.mo.CountInv("BalrogRing")) ArmorHPBonus += 15; // +15%
					ArmorHPBonus += 100;
					if (debugseedstuff) Console.Printf("ArmorHPBonus: %d", ArmorHPBonus);
					StatGain1 = StatGain1 * ArmorHPBonus / 100; // Flora is the only one who can use the Pearly Corset
					if (debugseedstuff) Console.Printf("StatGain1 [ArmorHPBonus]: %d", StatGain1);
				}
			
				PerkFactor = ((CallACS("MiscVarCheckDECORATE",10001) * 500) + (CallACS("MiscVarCheckDECORATE",10002) * 1250)) + 10000;
				StatGain1 = StatGain1 * PerkFactor / 10000; // "LifeUp" and "LifeUp EX" perks.
				if (debugseedstuff) Console.Printf("StatGain1 [LifeUp Perks]: %d", StatGain1);
			
				PerkFactor = (CallACS("MiscVarCheckDECORATE",317) * 1250) + 10000;
				StatGain1 = StatGain1 * PerkFactor / 10000; // [STRIFE-Compatibility] Times "Stamina Upgraded"
				if (debugseedstuff) Console.Printf("StatGain1 [Stamina Upgrade (Strife)]: %d", StatGain1);
			
				StatGain1 = clamp(StatGain1, 1, StatGain1);
				CallACS("MiscVarSetDECORATE",222,StatGain1,1);
				CallACS("MiscVarSetDECORATE",2031,105); 
				
				player.mo.health = player.health += StatGain1;
				MaxHealthTrue += StatGain1;
				CallACS("OtherVarSetDECORATE",0,MaxHealthTrue);
			}
			
			if (SeedType == 2) // Seed of Magic
			{
				StatGain1 = MaxMana / 80;
				if (CharacterClass == 0) StatGain1 += randompick(1,1,1,1,1,1,2,2,2);
				if (CharacterClass == 1) StatGain1 += randompick(1,1,1,2,2,2,2,3,3);
				if (CharacterClass == 2) StatGain1 += randompick(2,2,3,3,3,3,3,4,4);
				if (CharacterClass == 8) StatGain1 += randompick(2,2,2,2,3,3,3,3,3);
				if (CharacterClass == 9) StatGain1 += randompick(1,1,1,1,1,1,1,1,2);
				if (debugseedstuff) Console.Printf("StatGain1 [Base]: %d", StatGain1);
			
				SkillSeedRND = random(1,19);
			
				if (SkillSeedRND == 1) StatGain1 = floor(StatGain1 * 1.0);
				if (SkillSeedRND >= 2 && SkillSeedRND <= 6) StatGain1 = floor(StatGain1 * 1.5);
				if (SkillSeedRND >= 7 && SkillSeedRND <= 12) StatGain1 = floor(StatGain1 * 2.0);
				if (SkillSeedRND >= 13 && SkillSeedRND <= 18) StatGain1 = floor(StatGain1 * 2.5);
				if (SkillSeedRND == 19) StatGain1 = floor(StatGain1 * 3.0);
				if (debugseedstuff) Console.Printf("StatGain1 [Randomizer1]: %d", StatGain1);
			
				StatGain1 *= SeedAmount;
				StatGain1 *= CallACS("MiscVarCheckDECORATE",87);
				if (debugseedstuff) Console.Printf("StatGain1 [Multipliers]: %d", StatGain1);
			
				PerkFactor = ((CallACS("MiscVarCheckDECORATE",10003) * 500) + (CallACS("MiscVarCheckDECORATE",10004) * 1250)) + 10000;
				StatGain1 = StatGain1 * PerkFactor / 10000; // "MagiUp" and "MagiUp EX" perks.
				if (debugseedstuff) Console.Printf("StatGain1 [LifeUp Perks]: %d", StatGain1);
			
				PerkFactor = (CallACS("MiscVarCheckDECORATE",317) * 1250) + 10000;
				StatGain1 = StatGain1 * PerkFactor / 10000; // [STRIFE-Compatibility] Times "Stamina Upgraded"
				if (debugseedstuff) Console.Printf("StatGain1 [Stamina Upgrade (Strife)]: %d", StatGain1);
			
				StatGain1 = clamp(StatGain1, 1, StatGain1);
				CallACS("MiscVarSetDECORATE",223,StatGain1,1);
				CallACS("MiscVarSetDECORATE",2032,105); 
			
				MaxMana += StatGain1;
				CurrentMana += StatGain1;
				CallACS("OtherVarSetDECORATE",1,MaxMana);
				CallACS("OtherVarSetDECORATE",2,CurrentMana);
			}
			
			NewHP = MaxHealthTrue;
			NewMP = MaxMana;
			
			if (SeedType == 1) 
			{
				A_PrintBold(String.Format("\cjYou've Found a Seed of Life!\n\n\cjHP/Health: %d --> %d", OldHP, NewHP), frandom(1.028,1.2));
			}
			
			if (SeedType == 2) 
			{
				A_PrintBold(String.Format("\cjYou've Found a Seed of Magic!\n\n\cjMP/Mana: %d --> %d", OldMP, NewMP), frandom(1.028,1.2));
			}
		}
	}
}

class AetheriusPowerMask : AetheriusPowerIronFeet
{
	Default
	{
		Powerup.Duration -80;
		Powerup.Color "00 00 00", 0;
		+INVENTORY.HUBPOWER
		Inventory.Icon "";
	}
	
	override void AbsorbDamage (int damage, Name damageType, out int newdamage)
	{
		if (damageType == 'Magma') newdamage = damage * 0.05;
		if (damageType == 'Slime' || damageType == 'Drowning') newdamage = 0;
	}

	override void DoEffect ()
	{
		if (Owner.player != NULL) Owner.player.mo.ResetAirSupply();
	}
}

class FloraArmorFloorGuard : AetheriusPowerMask 
{
	Default
	{
		Powerup.Duration 2147483646;
		Powerup.Color "00 00 00", 0;
		+INVENTORY.HUBPOWER
		Inventory.Icon "";
	}
	
	override void AbsorbDamage (int damage, Name damageType, out int newdamage)
	{
		if (damageType == 'Magma') newdamage = damage * 0.05;
		if (damageType == 'Slime' || damageType == 'Drowning') newdamage = 0;
	}
	
	override void DoEffect ()
	{
	}
}

class AetheriusPowerMaskArmor : AetheriusPowerMask
{
	Default
	{
		Powerup.Duration -80;
		Powerup.Color "00 00 00", 0;
		+INVENTORY.HUBPOWER
		Inventory.Icon "";
	}
	
	override void AbsorbDamage (int damage, Name damageType, out int newdamage)
	{
		if (damageType == 'Magma') newdamage = damage * 0.05;
		if (damageType == 'Slime' || damageType == 'Drowning') newdamage = 0;
	}

	override void DoEffect ()
	{
		if (Owner.player != NULL) Owner.player.mo.ResetAirSupply();
	}
}

class AetheriusBaseCustomInventoryZSC : CustomInventory 
{
	// Spreader Aura Level 1 Angles
	const spread1angle1 = -15.0;
	const spread1angle2 = 15.0;
	const spread1horz1 = 0.0;
	const spread1horz2 = 0.0;
	const spread1height1 = 0.0;
	const spread1height2 = 0.0;

	// Spreader Aura Level 2 Angles/Pitches
	const spread2angle1 = -7.5;
	const spread2angle2 = 7.5;
	const spread2horz1 = 0.0;
	const spread2horz2 = 0.0;
	const spread2pitch1 = -7.5;
	const spread2pitch2 = 7.5;
	const spread2height1 = 0.0;
	const spread2height2 = 0.0;

	// Spread Aura Function [Projectiles]
	action void A_SpreadAuraFireProjectile (Class<Actor> missiletype, double angle = 0.0, int ammouseamount = 0, string ammousetype = "", float spawnofs_horz = 0.0, int spawnheight = 0, int flags = 0, double pitch = 0.0) 
	{
		if (CountInv("SpreaderAura2") > 0)
		{
			A_FireProjectile(missiletype,angle+spread2angle2,0,spawnofs_horz+spread2horz2,spawnheight+spread2height2,flags,pitch+spread2pitch2);
			A_FireProjectile(missiletype,angle+spread2angle2,0,spawnofs_horz+spread2horz2,spawnheight+spread2height1,flags,pitch+spread2pitch1);
			A_FireProjectile(missiletype,angle+spread2angle1,0,spawnofs_horz+spread2horz1,spawnheight+spread2height1,flags,pitch+spread2pitch1);
			A_FireProjectile(missiletype,angle+spread2angle1,0,spawnofs_horz+spread2horz1,spawnheight+spread2height2,flags,pitch+spread2pitch2);
		}
		if (CountInv("SpreaderAura1") > 0 || CountInv("SpreaderAura2") > 0)
		{
			A_FireProjectile(missiletype,angle+spread1angle1,0,spawnofs_horz+spread1horz1,spawnheight+spread1height1,flags,pitch);
			A_FireProjectile(missiletype,angle+spread1angle2,0,spawnofs_horz+spread1horz2,spawnheight+spread1height1,flags,pitch);
		}
		A_FireProjectile(missiletype,angle,0,spawnofs_horz,spawnheight,flags,pitch);

		A_TakeInventory(ammousetype,ammouseamount,TIF_NOTAKEINFINITE,AAPTR_DEFAULT);
	}

	action void A_ThrowRockBombShard()
	{
		int buttons = GetPlayerInput(INPUT_BUTTONS);
		if (buttons & BT_ZOOM)
		{
			A_SpreadAuraFireProjectile("RockBombShardProjT",0,0,"",0,0,FPF_NOAUTOAIM,-16);
		}
		else
		{
			A_SpreadAuraFireProjectile("RockBombShardProj",0,0,"",0,0,FPF_NOAUTOAIM,-16);
		}
	}
}

class BackPackNew : AetheriusCustomInventory
{
}

class RandomSpawner2 : RandomSpawner
{
	default
	{
		+DONTGIB
		+NOTIMEFREEZE
		-BLOCKEDBYSOLIDACTORS
	}
}

//********************************
//** ACTUAL Item Definitions V: **
//********************************
class RandomHellcoreWeapon : RandomSpawner2 //26902
{
	//$Sprite "RNDCA0"
	//$Category DV-DS Random Spawners
	Default
	{
		Tag "Random Hellcore Soul: Spawns a random Hellcore Soul";
		+DONTGIB;
		DropItem "ImpSoulCI";
		DropItem "DarkImpSoulCI";
		DropItem "CacodemonSoulCI";
		DropItem "CacolanternSoulCI";
		DropItem "AbaddonSoulCI";
		DropItem "KnightSoulCI";
		DropItem "BaronSoulCI";
		DropItem "BelphegorSoulCI";
		DropItem "BruiserSoulCI";
		DropItem "ArchonSoulCI";
		DropItem "PyroDemonSoulCI";
		DropItem "IncarnateSoulCI";
		DropItem "BalrogSoulCI";
		DropItem "ArchvileSoulCI";
		DropItem "DiabloistSoulCI";
	}
}

class BaseItemSpawner : AetheriusBaseZSC
{
	default
	{
		+NOTIMEFREEZE;
	}
	const SpawnerFlags = SXF_TRANSFERPOINTERS | SXF_TRANSFERSPECIAL | SXF_NOCHECKPOSITION;
}

class RandomMagicSpawner : BaseItemSpawner //32109
{
	default
	{
		//$Sprite "RNDMA0"
		//$Category DV-DS Random Spawners
		Tag "Random Magic Spawn: Spawns a random Magic item type";
		RenderStyle "Add";
		Radius 16;
		Height 16;
		Alpha 0.0;
		Scale 1.25;
		+FLOATBOB;
	}

	States
	{
		Spawn:
			RNDH A 0 NoDelay;
			RNDH A 0 A_Jump(256,"Herb1","Herb1","Herb1","Herb2","Herb2","Herb3");
			RNDH A 0 A_FadeOut(1.0);
			Stop;

		Herb1:
			TNT1 A 0 A_SpawnItemEx("MagicWater",0,0,0,0,0,0,0,SpawnerFlags,0,tid);
			TNT1 A 0 A_FadeOut(1.0);
			Stop;
		Herb2:
			TNT1 A 0 A_SpawnItemEx("SageElixir",0,0,0,0,0,0,0,SpawnerFlags,0,tid);
			TNT1 A 0 A_FadeOut(1.0);
			Stop;
		Herb3:
			TNT1 A 0 A_SpawnItemEx("ElfinElixir",0,0,0,0,0,0,0,SpawnerFlags,0,tid);
			TNT1 A 0 A_FadeOut(1.0);
			Stop;
	}
}

class RandomHerbSpawner : BaseItemSpawner //32110
{
	default
	{
		//$Sprite "RNDHA0"
		//$Category DV-DS Random Spawners
		Tag "Random Herb Spawn: Spawns a random Medicinal Herb type";
		RenderStyle "Add";
		Radius 16;
		Height 16;
		Alpha 0.0;
		Scale 1.25;
		+FLOATBOB;
	}

	States
	{
		Spawn:
			RNDH A 0;
			RNDH A 0 A_Jump(256,"Herb1","Herb1","Herb1","Herb2","Herb2","Herb3");
			RNDH A 0 A_FadeOut(1.0);
			Stop;

		Herb1:
			TNT1 A 0 A_SpawnItemEx("MedicinalHerb",0,0,0,0,0,0,0,SpawnerFlags,0,tid);
			TNT1 A 0 A_FadeOut(1.0);
			Stop;
		Herb2:
			TNT1 A 0 A_SpawnItemEx("StrongMedicine",0,0,0,0,0,0,0,SpawnerFlags,0,tid);
			TNT1 A 0 A_FadeOut(1.0);
			Stop;
		Herb3:
			TNT1 A 0 A_SpawnItemEx("SpecialMedicine",0,0,0,0,0,0,0,SpawnerFlags,0,tid);
			TNT1 A 0 A_FadeOut(1.0);
			Stop;
	}
}

class RandomArmorSpawner : AetheriusBaseZSC //32111
{
	default
	{
		//$Category DV-DS Random Spawners
		RenderStyle "Add";
		Alpha 0.0;
		Scale 1.25;
		+FLOATBOB;
	}

	int user_spawntimes;
	int user_roll;

	States
	{
		Spawn:
			FLAR A 0 NoDelay
			{
				if (CallACS("CheckCharacterClass") == 2) 
				{ 
					A_SpawnItemEx("HealthBonus2",0,0,0,0,0,0,0,tid,0);
					for (user_spawntimes = 0; user_spawntimes < 63; user_spawntimes++)
					{
						A_SpawnItemEx("HealthBonus2",0,0,0,frandom(-12,12),frandom(-12,12),frandom(-12,12),0,0,8);
					}
					Thing_Remove(0);
				}
				else
				{
					user_roll = random(1,5);
					if (user_roll == 1)
					{
						A_SpawnItemEx("GreenArmorDS",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
					}
					if (user_roll == 2)
					{
						A_SpawnItemEx("BlueArmorDS",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
					}
					if (user_roll == 3)
					{
						if (random(1,256) <= 8)
						{
							A_SpawnItemEx("StoneSkinGA",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
						}
						else
						{
							A_SpawnItemEx("StoneSkin",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
						}
					}
					if (user_roll == 4)
					{
						if (random(1,256) <= 8)
						{
							A_SpawnItemEx("DiamondSkinGA",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
						}
						else
						{
							A_SpawnItemEx("DiamondSkin",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
						}
					}
					if (user_roll == 5)
					{
						A_SpawnItemEx("ArmorBonus2",0,0,0,0,0,0,0,tid,0);
						for (user_spawntimes = 0; user_spawntimes < 63; user_spawntimes++)
						{
							A_SpawnItemEx("ArmorBonus2",0,0,0,frandom(-12,12),frandom(-12,12),frandom(-12,12),0,0,8);
						}
					}
				}
				Thing_Remove(0);
			}
			Stop;
	}
}

class RandomPowerupSpawner : RandomSpawner2 //32112
{
	default
	{
		+DONTGIB;
		DropItem "SoulSphere2", 256, 10;
		DropItem "MegaSphere2", 256, 10;
		DropItem "InvulnerabilitySphere2", 256, 10;
		DropItem "BlurSphere2", 256, 10;
		DropItem "SpreadSphereSpawner", 256, 10;
		DropItem "DoubleSphere", 256, 10;
		DropItem "GuardSphere", 256, 10;
		DropItem "TimeFreezeSphere", 256, 10;
		DropItem "DivinationSphere", 256, 1;
	}
}

class AetheriusUsableInventory : AetheriusCustomInventory
{
}

//
//
//
class SauronHelmet : AetheriusCustomInventory 
{
	default
	{
		radius 16;
		height 16;
		mass 666;
		+DONTGIB;
		+FLOATBOB;
		+INVENTORY.ALWAYSPICKUP;
		+INVENTORY.BIGPOWERUP;
		scale 0.125;
		inventory.icon "SHEMA0";
		Inventory.PickupMessage "\caThis old thing looks like it might have some use!\c-";
	}

	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("SauronHelmet",AAPTR_PLAYER1)) { Thing_Remove(0); } else { A_StartSound("SauronHelmet/Hum",CHAN_ITEM); }
			}
		Spawn2:
			SHEM A 1
			{
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 140) 
				{
					A_Stopsound(CHAN_ITEM);
					A_StartSound("SauronHelmet/Hum",CHAN_ITEM);
					A_SetInventory("ActorVar1",0);
				}
				if (GetCVar("dvds_sauronhelmetdrops") <= 0) { Thing_Remove(0); }
				if (CountInv("SauronHelmet",AAPTR_PLAYER1)) { Thing_Remove(0); }
			}
			loop;

		Use:
			TNT1 A 0;
			Stop;
		Pickup:
			// Other Things
			TNT1 A 0 A_JumpIf(CallACS("CheckPlayerIfDead") == 1,2);
			TNT1 A 0 A_StartSound("generalequip", 5);
			TNT1 A 0;
			Stop;
	}
}

class TheOneRing : AetheriusCustomInventory
{
	int user_theta;
	default
	{
		radius 4;
		height 4;
		mass 666;
		+DONTGIB;
		+FLOATBOB;
		+INVENTORY.ALWAYSPICKUP;
		+INVENTORY.BIGPOWERUP;
		scale 0.05;
		inventory.icon "LOTRA0";
		Inventory.PickupMessage "You are now the \cfLord of The Rings\c-!! :D";
		Inventory.PickupSound "getonering";
	}

	States
	{
		Spawn:
			LOTR A 0 NoDelay { if (CountInv("TheOneRing",AAPTR_PLAYER1)) { Thing_Remove(0); } }
		SpawnSoundEmit:
			LOTR A 0 
			{
				A_Stopsound(CHAN_ITEM);
				A_StartSound("TheOneRing/Hum",CHAN_ITEM);
				A_SetInventory("ActorVar1",0);
				if (CountInv("TheOneRing",AAPTR_PLAYER1)) { Thing_Remove(0); }
			}
		SpawnPhase1:
			LOTR A 1 bright
			{
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 20) { return resolvestate("SpawnPrePhase2"); }
				if (GetCVar("dvds_theoneringdrops") <= 0) { Thing_Remove(0); }
				if (CountInv("TheOneRing",AAPTR_PLAYER1)) { Thing_Remove(0); }
				return resolvestate(null);
			}
			loop;
		SpawnPrePhase2:
			LOTR A 0 bright A_SetInventory("ActorVar1",0);
		SpawnPhase2:
			LOTR A 1 bright 
			{
				A_FadeOut(0.025,0);
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 40) { return resolvestate("SpawnPrePhase3"); }
				if (GetCVar("dvds_theoneringdrops") <= 0) { Thing_Remove(0); }
				if (CountInv("TheOneRing",AAPTR_PLAYER1)) { Thing_Remove(0); }
				return resolvestate(null);
			}
			loop;
		SpawnPrePhase3:
			LOTR A 0 bright A_SetInventory("ActorVar1",0);
		SpawnPhase3:
			LOTR A 1 bright
			{
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 20) { return resolvestate("SpawnPrePhase4"); }
				if (GetCVar("dvds_theoneringdrops") <= 0) { Thing_Remove(0); }
				if (CountInv("TheOneRing",AAPTR_PLAYER1)) { Thing_Remove(0); }
				return resolvestate(null);
			}
			loop;
		SpawnPrePhase4:
			LOTR A 0 bright A_SetInventory("ActorVar1",0);
		SpawnPhase4:
			LOTR A 1 bright 
			{
				A_FadeIn(0.025,0);
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 40) { return resolvestate("SpawnSoundEmit"); }
				if (GetCVar("dvds_theoneringdrops") <= 0) { Thing_Remove(0); }
				if (CountInv("TheOneRing",AAPTR_PLAYER1)) { Thing_Remove(0); }
				return resolvestate(null);
			}
			loop;

		Pickup:
			// Other Things
			TNT1 A 0 A_JumpIf(CallACS("CheckPlayerIfDead") == 1,2);
			TNT1 A 0 A_StartSound("generalequip", 5);
			TNT1 A 0;
			Stop;
		Use:
			TNT1 A 0;
			Stop;
	}
}

class BaseFloraArmorItem : AetheriusCustomInventory
{
	default
	{
		radius 20;
		height 20;
		scale 0.33;
		//Alpha 0.1;
		//RenderStyle "Add";
		mass 666;
		+DONTGIB;
		+FLOATBOB;
		+INVENTORY.ALWAYSPICKUP;
		+INVENTORY.BIGPOWERUP;
	}

	States
	{
		Spawn:
			FAMR A 0 bright NoDelay;
			goto Looper;
		Looper:
			#### # 0
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("ArmorGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64); } }
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") <= 1) { A_SpawnItemEx("ArmorGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,128); } }
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") <= 2) { A_SpawnItemEx("ArmorGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,192); } }
			}
			#### ## 1 bright;
			#### # 0 
			{
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 21)
				{
					A_Stopsound(CHAN_ITEM);
					A_StartSound("FloraArmor/Hum",CHAN_ITEM);
					A_SetInventory("ActorVar1",0);
					return resolvestate("Spawn");
				}
				return resolvestate(null);
			}
			loop;
		Use:
			TNT1 A 0;
			Stop;
		Pickup:
			// Other Things
			TNT1 A 0 A_JumpIf(CallACS("CheckPlayerIfDead") == 1,2);
			TNT1 A 0 A_StartSound("generalequip", 5);
			TNT1 A 0;
			Stop;
	}
}

class RuinousShield : BaseFloraArmorItem 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRL0"
		inventory.icon "FAMRL0";
		Inventory.PickupMessage "Got the \cmRuinous Shield\c-!!";
	}

	States
	{
		Spawn:
			FAMR L 0 bright NoDelay A_CheckFloraArmorCopies(8);
			goto Looper;
		Looper:
			"####" # 0
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("ArmorGlitter2", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64); } }
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") <= 1) { A_SpawnItemEx("ArmorGlitter2", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,128); } }
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") <= 2) { A_SpawnItemEx("ArmorGlitter2", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,192); } }
			}
			#### ## 1 bright A_CheckFloraArmorCopies(8);
			#### # 0
			{
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 21)
				{
					A_Stopsound(CHAN_ITEM);
					A_StartSound("FloraArmor/Hum",CHAN_ITEM);
					A_SetInventory("ActorVar1",0);
					return resolvestate("Spawn");
				}
				return resolvestate(null);
			}
			loop;
		Pickup:
			// Other Things
			TNT1 A 0 A_JumpIf(CallACS("CheckPlayerIfDead") == 1,3);
			TNT1 A 0 A_StartSound("generalequip", 5);
			TNT1 A 0 A_StartSound("GetCursed", 6);
			TNT1 A 0;
			Stop;
	}
}
// To give the player the proper "item" to boost their Stamina and Aeon Points upon completing the Training Area [MAP31 of Strife] 
class TrainingMapBonus : AetheriusCustomInventory
{
	default
	{
		Inventory.PickupSound "none";
		Inventory.PickupMessage "";
		radius 20;
		height 20;
		scale 0.25;
		alpha 0.0;
		RenderStyle "None";
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+DONTGIB;
		Inventory.MaxAmount 0;
	}

	States
	{
		Spawn:
			TOKN A 1
			{
				if (CallACS("MiscVarCheckDECORATE",317) >= 10 && CallACS("MiscVarCheckDECORATE",318) >= 10) { Thing_Remove(0); }
			}
			Loop;
		Use:
			TNT1 A 0 A_StrifeStatUpgrade("Combo");
			stop;
	}
}

// To give the player the proper "item" to boost their Stamina and Aeon Points upon destroying the Drone Transmitter [MAP14 of Strife]
class TransmitterBonus : AetheriusCustomInventory
{
	default
	{
		Inventory.PickupSound "none";
		Inventory.PickupMessage "";
		radius 20;
		height 20;
		scale 0.25;
		alpha 0.0;
		RenderStyle "None";
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+DONTGIB;
		Inventory.MaxAmount 0;
	}
	
	States
	{
		Spawn:
			TOKN A 1
			{
				if (CallACS("MiscVarCheckDECORATE",317) >= 10 && CallACS("MiscVarCheckDECORATE",318) >= 10) { Thing_Remove(0); }
			}
			Loop;
		Use:
			TNT1 A 0 A_StrifeStatUpgrade("Combo");
			stop;
	}
}

// To give the player the proper "item" to boost their Stamina and Aeon Points upon destroying the Acolyte Converter [MAP24 of Strife] 
class ConverterBonus : AetheriusCustomInventory
{
	default
	{
		Inventory.PickupSound "none";
		Inventory.PickupMessage "";
		radius 20;
		height 20;
		scale 0.25;
		alpha 0.0;
		RenderStyle "None";
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+DONTGIB;
		Inventory.MaxAmount 0;
	}
	
	States
	{
		Spawn:
			TOKN A 1
			{
				if (CallACS("MiscVarCheckDECORATE",317) >= 10 && CallACS("MiscVarCheckDECORATE",318) >= 10) { Thing_Remove(0); }
			}
			Loop;
		Use:
			TNT1 A 0 A_StrifeStatUpgrade("Combo");
			stop;
	}
}

// To give the player the proper "item" to boost their Stamina and Aeon Points upon destroying the Loremaster's Spectre [MAP27 of Strife] 
class LoreMasterBonus : AetheriusCustomInventory
{
	default
	{
		Inventory.PickupSound "none";
		Inventory.PickupMessage "";
		radius 20;
		height 20;
		scale 0.25;
		alpha 0.0;
		RenderStyle "None";
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+DONTGIB;
		Inventory.MaxAmount 0;
	}

	States
	{
		Spawn:
			TOKN A 1
			{
				if (CallACS("MiscVarCheckDECORATE",317) >= 10 && CallACS("MiscVarCheckDECORATE",318) >= 10) { Thing_Remove(0); }
			}
			Loop;
		Use:
			TNT1 A 0 A_StrifeStatUpgrade("Combo");
			stop;
	}
}

// Strife Unique Items [for changing things like accuracy/stamina upgrades, and health/ammo refills.
class UpgradeStaminaNew : AetheriusCustomInventory replaces UpgradeStamina
{
	default
	{
		Inventory.PickupMessage "";
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+DONTGIB;
		Inventory.MaxAmount 0;
	}
	
	States
	{
		Spawn:
			TOKN A 1
			{
				if (CallACS("MiscVarCheckDECORATE",317) >= 10) { Thing_Remove(0); }
			}
			Loop;
		Use:
			TNT1 A 0 A_StrifeStatUpgrade("Stamina");
			stop;
	}
}

class UpgradeAccuracyNew : AetheriusCustomInventory replaces UpgradeAccuracy
{
	default
	{
		Inventory.PickupMessage "";
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+DONTGIB;
		Inventory.MaxAmount 0;
	}
	
	States
	{
		Spawn:
			TOKN A 1
			{
				if (CallACS("MiscVarCheckDECORATE",318) >= 10) { Thing_Remove(0); }
			}
			Loop;
		Use:
			TNT1 A 0 A_StrifeStatUpgrade("Accuracy");
			stop;
	}
}

class ExplosiveBarrelNew : ExplosiveBarrel replaces ExplosiveBarrel
{
	default
	{
		Tag "Explosive Barrel";
		+PUSHABLE;
		DamageType "Explosive";
		DamageFactor "Dashing", 0;
		Painchance "Dashing", 0;
	}
	
	States
	{
		Spawn:
			BAR1 AB 6;
			Loop;
		Death:
			BEXP A 5 Bright;
			BEXP B 5 Bright
			{
				A_Scream();
				A_AlertMonsters();
			}
			BEXP C 5 Bright;
			BEXP D 5 Bright A_Explode(128,128,XF_HURTSOURCE, false,0,0, 10,"BulletPuff","Explosive");
			BEXP E 10 Bright;
			TNT1 A 1050 Bright A_BarrelDestroy();
			TNT1 A 5 A_Respawn();
			Wait;
	}
}

class TestExplosiveBarrel : ExplosiveBarrel
{
	default
	{
		Tag "Explosive Barrel";
		Mass 1000000000;
		DamageFactor "Dashing", 0;
		Painchance "Dashing", 0;
	}
	
	States
	{
		Spawn:
			BAR1 AB 6;
			Loop;
		Death:
			BEXP A 5 Bright;
			BEXP B 5 Bright
			{
				A_Scream();
				A_AlertMonsters();
			}
			BEXP C 5 Bright;
			BEXP D 5 Bright A_Explode(128,128);
			BEXP E 10 Bright;
			TNT1 A 1050 Bright A_BarrelDestroy();
			TNT1 A 5 A_Respawn();
			Wait;
	}
}

class ExplosiveBarrelTelefraggingNew : ExplosiveBarrelNew 
{
	default
	{
		Tag "Explosive Barrel";
		+TELESTOMP;
		DamageType "Explosive";
		DamageFactor "Dashing", 0;
		Painchance "Dashing", 0;
	}
}

class VitalitySerum : AetheriusCustomInventory
{
	default
	{
		//$Category Powerups
		//$Title "Vitality Serum: Gives one 'Stamina' Level boost [for non-Strife gamemodes]"
		Radius 20;
		Scale 0.9;
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+DONTGIB;
		Inventory.PickupMessage "\cfVitality Serum:\c- \cyStamina Level +10!\c-";
		Inventory.PickupSound "boostitem/pickup";
	}
	
	States
	{
		Spawn:
			VSRM AAAAAABBBBBBCCCCCC 1 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",317) >= 10) { Thing_Remove(0); }
			}
			loop;
		Use:
			TNT1 A 0 A_StrifeStatUpgrade("Stamina");
			stop;
	}
}

class CarrotusPotion : AetheriusCustomInventory 
{
	default
	{
		//$Category Powerups
		//$Title "Carrotus Potion: Gives one 'Accuracy' Level boost [for non-Strife gamemodes]"
		Radius 20;
		Scale 0.667;
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+DONTGIB;
		Inventory.PickupMessage "\cfCarrotus Potion:\c- \cyAccuracy Level +10!\c-";
		Inventory.PickupSound "boostitem/pickup";
	}
	States
	{
		Spawn:
			CRTS AAABBBCCCBBBAAA 1 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",318) >= 10) { Thing_Remove(0); }
			}
			loop;
		Use:
			TNT1 A 0 A_StrifeStatUpgrade("AccuracyLite");
			stop;
	}
}

class GoldenApple : AetheriusCustomInventory
{
	default
	{
		//$Category Powerups
		//$Title "Golden Apple: Gives one level of both Stamina and Accuracy [for non-Strife gamemodes]"
		Radius 12;
		Scale 0.75;
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+DONTGIB;
		Inventory.PickupMessage "\cfGolden Apple:\c- \cyStamina AND Accuracy Increased by 10!\c-";
		Inventory.PickupSound "boostitem/pickup";
	}
	
	States
	{
		Spawn:
			APPL B 1 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",317) >= 10 && CallACS("MiscVarCheckDECORATE",318) >= 10) { Thing_Remove(0); }
			}
			loop;
		Use:
			TNT1 A 0 A_StrifeStatUpgrade("ComboLite");
			stop;
	}
}

class Experiessence : BaseExperiessence
{
	default
	{
		Radius 20;
		Height 16;
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.Pickupsound "GrabExperiessence";
		Inventory.PickupMessage "Found a small dose of \cfExperiessence\c-.";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (GetCVar("dvds_expgains") == 0) { return resolvestate("Death"); }
				return resolvestate(null);
			}
		Idle:
			EXPD AABBCCDDEEFFGGHH 1 bright
			{
				if (GetCVar("dvds_expgains") == 0) { return resolvestate("Death"); }
				if (alpha <= 0.25) { A_SetInventory("ActorVar1",1); } // Set to Fade In
				if (alpha >= 0.75) { A_SetInventory("ActorVar1",0); } // Set to Fade Out
				if (CountInv("ActorVar1") == 0) { A_FadeOut(0.05); } // Fading Out
				if (CountInv("ActorVar1") == 1) { A_FadeIn(0.05); } // Fading In
				return resolvestate(null);
			}
			loop;
		Pickup:
			TNT1 A 0 { A_PickupExperiessence(1.0*frandom(4.0,6.0)); }
			Stop;
		Death:
			TNT1 A 0 A_FadeOut(1.0,FTF_REMOVE);
			stop;
	}
}

class LargeExperiessence : BaseExperiessence
{
	default
	{
		Radius 20;
		Height 16;
		Scale 0.556;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.Pickupsound "GrabExperiessence";
		Inventory.PickupMessage "Found a large dose of \cfExperiessence\c-.";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (GetCVar("dvds_expgains") == 0) { return resolvestate("Death"); }
				return resolvestate(null);
			}
		Idle:
			EXPD AABBCCDDEEFFGGHH 1 bright
			{
				if (GetCVar("dvds_expgains") == 0) { return resolvestate("Death"); }
				if (alpha <= 0.375) { A_SetInventory("ActorVar1",1); } // Set to Fade In
				if (alpha >= 0.875) { A_SetInventory("ActorVar1",0); } // Set to Fade Out
				if (CountInv("ActorVar1") == 0) { A_FadeOut(0.075); } // Fading Out
				if (CountInv("ActorVar1") == 1) { A_FadeIn(0.075); } // Fading In
				return resolvestate(null);
			}
			loop;
		Pickup:
			TNT1 A 0 { A_PickupExperiessence(2.0*frandom(4.0,6.0)); }
			Stop;
		Death:
			TNT1 A 0 A_FadeOut(1.0,FTF_REMOVE);
			stop;
	}
}

class HugeExperiessence : BaseExperiessence
{
	default
	{
		Radius 20;
		Height 16;
		Scale 0.889;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.Pickupsound "GrabExperiessence";
		Inventory.PickupMessage "Found a massive dose of \cfExperiessence\c-.";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (GetCVar("dvds_expgains") == 0) { return resolvestate("Death"); }
				return resolvestate(null);
			}
		Idle:
			EXPD AABBCCDDEEFFGGHH 1 bright
			{
				if (GetCVar("dvds_expgains") == 0) { return resolvestate("Death"); }
				if (alpha <= 0.50) { A_SetInventory("ActorVar1",1); } // Set to Fade In
				if (alpha >= 1.0) { A_SetInventory("ActorVar1",0); } // Set to Fade Out
				if (CountInv("ActorVar1") == 0) { A_FadeOut(0.1); } // Fading Out
				if (CountInv("ActorVar1") == 1) { A_FadeIn(0.1); } // Fading In
				return resolvestate(null);
			}
			loop;
		Pickup:
			TNT1 A 0 { A_PickupExperiessence(4.0*frandom(4.0,6.0)); }
			Stop;
		Death:
			TNT1 A 0 A_FadeOut(1.0,FTF_REMOVE);
			stop;
	}
}

class HealthBonus2 : AetheriusCustomInventory // replaces HealthBonus
{
	default
	{
		//$Sprite "BON1A0"
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.Pickupsound "gethealthbonus";
		Inventory.PickupMessage "Picked up a \cnhealth bonus\c-.";
	}
	States
	{
		Spawn:
			BON1 A 0 NoDelay;
			BON1 A 0
			{
				if (random(1,2048) <= 1) { A_SpawnItemEx("MonsterMunchies",0,0,0,0,0,0,0); }
				if (random(1,256) <= 1)
				{
					if (random(1,256) <= 192)
					{
						A_SpawnItemEx("MedicinalHerb",0,0,0,0,0,0,0,0,tid);
					}
					else
					{
						if (random(1,256) <= 192)
						{
							A_SpawnItemEx("StrongMedicine",0,0,0,0,0,0,0,0,tid);
						}
						else
						{
							A_SpawnItemEx("SpecialMedicine",0,0,0,0,0,0,0,0,tid);
						}
					}
					bCOUNTITEM = false;
					A_Destroy();
				}
				
				if (random(1,256) <= 1)
				{
					if (random(1,256) <= 64)
					{
						A_SpawnItemEx("RandomPowerupSpawner",0,0,0,0,0,0,0);
					}
				}
				
				if (random(1,256) <= 1)
				{
					if (random(1,256) <= 64)
					{
						A_SpawnItemEx("YggdrasilDew",0,0,0,0,0,0,0);
					}
				}
				
				if (random(1,256) <= 1)
				{
					if (random(1,256) <= 104)
					{
						A_SpawnItemEx("PaxaPunch",0,0,0,0,0,0,0);
					}
				}
				
				if (random(1,256) <= 1)
				{
					if (random(1,256) <= 104)
					{
						A_SpawnItemEx("MercuryBandana",0,0,0,0,0,0,0);
					}
				}
				
				if (random(1,256) <= 1)
				{
					if (random(1,256) <= 16)
					{
						if (random(1,256) <= 64)
						{
							A_SpawnItemEx("GreaterVimstone",0,0,0,0,0,0,0);
						}
						else
						{
							A_SpawnItemEx("LesserVimstone",0,0,0,0,0,0,0);
						}
					}
				}

				if (random(1,256) <= 1)
				{
					if (random(1,256) <= 224) { A_SpawnItemEX("MiraclePotion",0,0,0,0,0,0,0); }
				}

				if (random(1,256) <= 8)
				{
					A_SpawnItemEx("HealthBonusBig",0,0,0,random(-8,8),random(-8,8),random(-8,8),0,0,124);
					A_SpawnItemEx("HealthBonusBig",0,0,0,random(-8,8),random(-8,8),random(-8,8),0,0,248);
					if (random(1,8) == 1) 
					{ 
						A_SpawnItemEx("HealthBonusBig",0,0,0,0,0,0,0);
						return resolvestate("Float"); 
					}
					else
					{
						A_SpawnItemEx("HealthBonusBig",0,0,0,0,0,0,0,0,tid);
					}
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			goto Float;

		Float:
			BON1 AABBCCDDCCBB 3 BRIGHT;
			Loop;
		Pickup:
			TNT1 A 0 { A_EmulateGiveHealthBonusACI(1,8,100,1); }
			Stop;
	}
}

class HealthBonusBig : AetheriusCustomInventory
{
	default
	{
		//$Sprite "BON3A0"
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		Scale 1.125;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.Pickupsound "gethealthbonus" ;
		Inventory.PickupMessage "Picked up a \cnlarge health bonus\c-.";
	}
	
	States
	{
		Spawn:
			BON3 A 0;
			goto Float;
		Float:
			BON3 ABCDCB 6 BRIGHT;
			Loop;
		Pickup:
			NULL A 0 { A_EmulateGiveHealthBonusACI(10,8,100,1); }
			Stop;
	}
}

class HealthBonusSpawner : AetheriusBaseZSC replaces HealthBonus
{
	default
	{
		Radius 8;
		Height 8;
		Scale 1;
		RenderStyle "None";
		Alpha 0;
		+NOTIMEFREEZE;
		//$Sprite "BON1A0";
	}
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx("HealthBonus2",0.0,0.0,0.0,0,0,0,0.0,SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERSPECIAL,0,tid);
				if (random(1,256) <= 1)
				{
					if (random(1,256) <= 32)
					{
						A_SpawnItemEx("RandomSeedDropForced",0,0,0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0);
					}
				}
			}
		Idle:
			TNT1 A 0;
			stop;
	}
}

//****************
//**Seed Pickups**
//****************
class SeedOfLife : BaseSeed
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDG0"
		//Alpha 0.1; RenderStyle "Add";
		Tag "Seed of Life: Extends Maximum HP by a minor amount.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate a \coSeed of Life\c-!";
	}

	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			goto Active;
		Active:
			SEED G 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabLifeManaSeed(1,1,0);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatHPSeed",CHAN_BODY);
			Stop;
	}
}

class SeedOfMagic : BaseSeed
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDH0"
		//Alpha 0.1; RenderStyle "Add";
		Tag "Seed of Magic: Extends Maximum MP by a minor amount.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate a \coSeed of Magic\c-!";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			goto Active;
		Active:
			SEED H 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabLifeManaSeed(2,1,0);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatMPSeed",CHAN_BODY);
			Stop;
	}
}

class SeedOfAgility : BaseSeed
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDA0";
		Tag "Seed of Agility: Gives the player +1 Agility.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate a \coSeed of Agility\c-!";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(1);
			goto Active;
		Active:
			SEED A 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabSeedOther(1,1,1);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatAGLSeed",CHAN_BODY);
			Stop;
	}
}

// This version does not get removed if seeds exceed limits nor increases seeds towards their limit [for mapper-placed seeds you want to ALWAYS be there for rewards or something]
class SeedOfAgilityForced : SeedOfAgility 
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDA0"
		Tag "Seed of Agility [Forced]: Gives the player +1 Agility. (ignores seed limits)";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			goto Active;
		Active:
			SEED A 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabSeedOther(1,1,0);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatAGLSeed",CHAN_BODY);
			Stop;
	}
}

class SeedOfDefense : BaseSeed 
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDB0"
		Tag "Seed of Defense: Gives the player +1 Defense.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate a \coSeed of Defense\c-!";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(1);
			goto Active;
		Active:
			SEED B 0 BRIGHT;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabSeedOther(2,1,1);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatDEFSeed",CHAN_BODY);
			Stop;
	}
}

// This version does not get removed if seeds exceed limits nor increases seeds towards their limit [for mapper-placed seeds you want to ALWAYS be there for rewards or something]
class SeedOfDefenseForced : SeedOfDefense
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDB0"
		Tag "Seed of Defense [Forced]: Gives the player +1 Defense. (ignores seed limits)";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			goto Active;
		Active:
			SEED B 0 BRIGHT;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabSeedOther(2,1,0);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatDEFSeed",CHAN_BODY);
			Stop;
	}
}

class SeedOfDeftness : BaseSeed
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDC0"
		Tag "Seed of Deftness: Gives the player +1 Deftness.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate a \coSeed of Deftness\c-!";
	}

	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(1);
			goto Active;
		Active:
			SEED C 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatDFTSeed",CHAN_BODY);
			TNT1 A 0 A_GrabSeedOther(3,1,1);
			Stop;
	}
}

// This version does not get removed if seeds exceed limits nor increases seeds towards their limit [for mapper-placed seeds you want to ALWAYS be there for rewards or something]
class SeedOfDeftnessForced : SeedOfDeftness
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDC0"
		Tag "Seed of Deftness [Forced]: Gives the player +1 Deftness. (ignores seed limits)";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			goto Active;
		Active:
			SEED C 0 BRIGHT;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatDFTSeed",CHAN_BODY);
			TNT1 A 0 A_GrabSeedOther(3,1,0);
			Stop;
	}
}

class SeedOfSorcery : BaseSeed
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDD0"
		Tag "Seed of Sorcery: Gives the player +1 Sorcery.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate a \coSeed of Sorcery\c-!";
	}

	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(1);
			goto Active;
		Active:
			SEED D 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatSORSeed",CHAN_BODY);
			TNT1 A 0 A_GrabSeedOther(4,1,1);
			Stop;
	}
}

// This version does not get removed if seeds exceed limits nor increases seeds towards their limit [for mapper-placed seeds you want to ALWAYS be there for rewards or something]
class SeedOfSorceryForced : SeedOfSorcery
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDD0"
		Tag "Seed of Sorcery [Forced]: Gives the player +1 Sorcery. (ignores seed limits)";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			goto Active;
		Active:
			SEED D 0 BRIGHT;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatSORSeed",CHAN_BODY);
			TNT1 A 0 A_GrabSeedOther(4,1,0);
			Stop;
	}
}

class SeedOfStrength : BaseSeed
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDE0"
		Tag "Seed of Strength: Gives the player +1 Strength.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate a \coSeed of Strength\c-!";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(1);
			goto Active;
		Active:
			SEED E 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatSTRSeed",CHAN_BODY);
			TNT1 A 0 A_GrabSeedOther(5,1,1);
			Stop;
	}
}

// This version does not get removed if seeds exceed limits nor increases seeds towards their limit [for mapper-placed seeds you want to ALWAYS be there for rewards or something]
class SeedOfStrengthForced : SeedOfStrength
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDE0"
		Tag "Seed of Strength [Forced]: Gives the player +1 Strength. (ignores seed limits)";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			goto Active;
		Active:
			SEED E 0 BRIGHT;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatSTRSeed",CHAN_BODY);
			TNT1 A 0 A_GrabSeedOther(5,1,0);
			Stop;
	}
}

class SeedOfTherapeusis : BaseSeed
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDF0"
		Tag "Seed of Therapeusis: Gives the player +1 Therapeusis.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate a \coSeed of Therapeusis\c-!";
	}

	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(1);
			goto Active;
		Active:
			SEED F 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatTHESeed",CHAN_BODY);
			TNT1 A 0 A_GrabSeedOther(6,1,1);
			Stop;
	}
}

class SeedOfTherapeusisForced : SeedOfTherapeusis
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDF0"
		Tag "Seed of Therapeusis [Forced]: Gives the player +1 Therapeusis. (ignores seed limits)";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			goto Active;
		Active:
			SEED F 0 BRIGHT;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatTHESeed",CHAN_BODY);
			TNT1 A 0 A_GrabSeedOther(6,1,0);
			Stop;
	}
}

class SeedOfSkill : BaseSeed
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDI0"
		//Alpha 0.1 RenderStyle "Add"
		Tag "Seed of Skill: Gives the player 4 Aeon Points.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate a \coSeed of Skill\c-!";
	}
	
	States
	{
		Evolve:
			TNT1 A 0 A_SpawnItemEx("SeedOfSkill2");
			stop;
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(0);
			TNT1 A 0 A_Jump(8,"Evolve");
			goto Active;
		Active:
			SEED I 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabSeedOther(0,1,2);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatSKLSeed",CHAN_BODY);
			Stop;
	}
}

// This version does not get removed if seeds exceed limits nor increases seeds towards their limit [for mapper-placed seeds you want to ALWAYS be there for rewards or something]
class SeedOfSkillForced : SeedOfSkill
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDI0"
		Tag "Seed of Skill [Forced]: Gives the player 4 Aeon Points. (ignores seed limits)";
	}
	
	States
	{
		Evolve:
			TNT1 A 0 A_SpawnItemEx("SeedOfSkill2Forced");
			stop;
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			TNT1 A 0 A_Jump(8,"Evolve");
			goto Active;
		Active:
			SEED I 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabSeedOther(0,1,0);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatSKLSeed",CHAN_BODY);
			Stop;
	}
}

class SeedOfSkill2 : BaseSeed
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDJ0"
		//Alpha 0.1; RenderStyle "Add";
		Tag "Enhanced Seed of Skill: Gives the player 16 Aeon Points.";
		Scale 0.334;
		+FLOATBOB;
		+DONTGIB;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You just ate an \co Enhanced Seed of Skill\c-!";
	}

	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(0);
			goto Active;
		Active:
			SEED J 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,96); } }
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,144); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabSeedOther(9,1,2);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatSKLSeed",CHAN_BODY);
			Stop;
	}
}

class SeedOfSkill2Forced : SeedOfSkill2
{
	default
	{
		//$Category DV-DS Stat Boosting Items
		//$Sprite "SEEDJ0"
		Tag "Enhanced Seed of Skill [Forced]: Gives the player 16 Aeon Points. (ignores seed limits)";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 1 A_SeedLimitChecker(3);
			goto Active;
		Active:
			SEED J 0;
			#### ### 2 BRIGHT
			{
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,96); } }
				if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("SeedGlitter", 0, 0, 14, random(-2,2), random(-2,2), random(-2,2) ,144); } }
			}
			Loop;
		Pickup:
			TNT1 A 0 A_GrabSeedOther(9,1,0);
			TNT1 A 0 A_StartSound("EatingSeed",CHAN_VOICE);
			TNT1 A 0 A_StartSound("EatSKLSeed",CHAN_BODY);
			Stop;
	}
}

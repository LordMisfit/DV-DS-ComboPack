class DSScriptedMarine : ScriptedMarine replaces ScriptedMarine
{
	default
	{
		Tag "UAC Marine Buddy";
		dropitem "DoomSpellMana", 24;
		dropitem "DoomSpellMana2", 24;
		dropitem "DoomSpellMana3", 24;
		dropitem "Chainsaw", 2;
		dropitem "DoubleBladedChainsaw", 2;
		dropitem "Pistol", 2;
		dropitem "Shotgun", 2;
		dropitem "SuperShotgun", 2;
		dropitem "Chaingun", 2;
		dropitem "Minigun", 2;
		dropitem "RocketLauncher", 2;
		dropitem "PlasmaRifle", 2;
		dropitem "Railgun2", 2;
		dropitem "Repeater2", 2;
		dropitem "KaraSawa2", 2;
		dropitem "BFG9000", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}
}

// Zombieman Class
//
//                           / > KaraSawaGuy
// Zombieman ---> PlasmaGuy -------------------> RocketLauncherGuy
//                           \ > RepeaterZombie
//

// Rifle Trooper
class DSZombieman : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/Zombieman Type";
		Tag "Zombieman";

		Health 20;
		Radius 20;
		Height 56;
		Speed 8;
		Mass 100;
		Painchance 200;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 255; // Zombies = +33% Pain Chance [maxed out in this case]
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 255; // Zombies = +33% Pain Chance [maxed out in this case]
		Monster;
		+FLOORCLIP;
		+DOHARMSPECIES;

		dropitem "DoomSpellMana", 16;
		dropitem "Clip";
		dropitem "Clip", 4;
		dropitem "Clip", 4;
		dropitem "ClipBox", 2, 50;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "Pistol2", 2;

		SeeSound "grunt/sight";
		AttackSound "grunt/attack";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		Obituary "%o was pecked to death by a zombieman.";
	}

	states
	{
		Spawn:
			POSS AB 10 A_Look();
			loop;
		See:
			POSS A 0
			{
				user_shotsfired = 0;
			}
			POSS AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			POSS E 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				if (random(1,8) == 1) 
				{
					user_shotsfiredmax = 2;
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/20); }
				}
				else 
				{
					user_shotsfiredmax = 1; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/40); }
				}

				A_FaceTarget();
				user_shotsfired = 0;
				user_shotaccuracy = 10.45; // 22.5;
				user_shotzaccuracy = 5.225; // 0.0;
				if (user_charmed) { user_shotaccuracy *= 0.667; user_shotzaccuracy *= 0.667; }
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); user_shotaccuracy = user_shotaccuracy * 6 / 9; user_shotzaccuracy = user_shotzaccuracy * 6 / 9; }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); user_shotaccuracy = user_shotaccuracy * 7 / 9; user_shotzaccuracy = user_shotzaccuracy * 7 / 9; }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); user_shotaccuracy = user_shotaccuracy * 8 / 9; user_shotzaccuracy = user_shotzaccuracy * 8 / 9; }
				user_shotaccuracy1 = user_shotaccuracy * -0.5;
				user_shotaccuracy2 = user_shotaccuracy * 0.5;
				user_shotzaccuracy1 = user_shotzaccuracy * -0.5;
				user_shotzaccuracy2 = user_shotzaccuracy * 0.5;
				//A_GetAccuracySpreads();
			}
		Missile1:
			POSS F 8 bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				A_StartSound("grunt/attack");
				A_FaceTarget();
				A_MonsterCrisisCheck(); // Tracer
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5) * 3, "BulletPuff", 0, CBAF_NORANDOM);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
				}
			}
			POSS E 8 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				user_shotsfired += 1;
				A_FaceTarget();
			}
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			TNT1 A 0 A_MonsterRefire(32,"See");
			TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax,"Decide1");
			loop;
		Decide1:
			TNT1 A 0 A_Jump(240,"See");
			TNT1 A 0 
			{
				if (random(1,8) == 1) 
				{
					user_shotsfiredmax = 2; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/20); }
				}
				else 
				{
					user_shotsfiredmax = 1;
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/40); }
				}
	
				user_shotsfired = 0;
				A_FaceTarget();
			}
			goto Missile1;

		Pain:
			POSS G 3;
			POSS G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			POSS G 3;
			POSS G 3 A_DVDSPain();
			POSS GG 3;
			Goto See;
		Pain.Kick:
			POSS G 3;
			POSS G 3 A_DVDSPain();
			POSS GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			POSS H 5;
			POSS I 5 A_Scream();
			POSS J 5 A_NoBlocking();
			POSS K 5
			{
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (!CountInv("Pistol2",AAPTR_PLAYER1)) { A_DropItem("Pistol2",1,32); }
				}
			}
			POSS L -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			POSS M 5;
			POSS N 5 A_XScream();
			POSS O 5 A_NoBlocking();
			POSS P 5
			{
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (!CountInv("Pistol2",AAPTR_PLAYER1)) { A_DropItem("Pistol2",1,32); }
				}
			}
			POSS QRST 5;
			POSS U -1;
			Stop;
		Ice:
			#### # 0 
			{
				A_DVDSIceDeath(-2,0,1);
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (!CountInv("Pistol2",AAPTR_PLAYER1)) { A_DropItem("Pistol2",1,32); }
				}
			}
			POSS G 5 A_GenericFreezeDeath();
			POSS G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			POSS K 5;
			POSS JIH 5;
			goto See;
	}
}

// Plasma Specialist
class PlasmaGuy : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/Zombieman Type";
		Tag "Plasma Dude";

		dropitem "DoomSpellMana", 32;
		dropitem "DoomSpellMana", 8;
		DropItem "PlasmaRifle";
		DropItem "PlasmaRifle", 2;
		DropItem "PlasmaRifle", 2;
		DropItem "Cell", 4, 40;
		DropItem "Cell", 4, 40;
		DropItem "CellPack", 2, 100;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;

		Health 50;
		Radius 20;
		Height 56;
		Speed 8;
		Mass 100;
		MONSTER;
		+FLOORCLIP;
		SeeSound "grunt/sight";
		AttackSound "grunt/attack";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		Obituary "%o got burned by a plasma-rifle zombie.";
		MissileType "PlasmaBallMonster";

		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 166; // Zombies = +33% Pain Chance [maxed out in this case]
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 166; // Zombies = +33% Pain Chance

		Painchance 100;
		Painchance "Fist", 150; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 250; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 150; // Fist attacks have a +50% chance of stunning an enemy
		+AVOIDMELEE;
		+DOHARMSPECIES;
	}

	States
	{
		Spawn:
			ZMAY AB 10 A_Look();
			loop;
		See:
			ZMAY A 0
			{
				user_shotsfired = 0;
			}
			ZMAY AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0;
			ZMAY E 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }

				user_shotsfiredmax = random(5,10);
				if (levelbehavior) { user_shotsfiredmax += random((user_monsterlevel/20),(user_monsterlevel/10)); }

				user_shotsfired = 0;
				user_attacktype = 0;
				if (levelbehavior)
				{
					if (user_monsterlevel > 180) { user_attacktype = randompick(0,0,0,1,1,1,1,1); }
					else if (user_monsterlevel > 135) { user_attacktype = randompick(0,0,0,0,1,1,1,1); }
					else if (user_monsterlevel > 90) { user_attacktype = randompick(0,0,0,0,0,1,1,1); }
					else if (user_monsterlevel > 45) { user_attacktype = randompick(0,0,0,0,0,0,1,1); }
					else { user_attacktype = randompick(0,0,0,0,0,0,0,1); }
				}
				A_FaceTarget();
			}
		Missile1:
			ZMAY F 3 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_MonsterCrisisCheck(); // Single Shot / Multiple Projectiles [Shotgun Style]
				if (user_attacktype == 0) 
				{ 
					A_CrisisSpawnProjectile("PlasmaBallMonster","PlasmaBallCrisis",32.0,0.0,0.0); 
					user_shotsfired += 1;
				}
				if (user_attacktype == 1) 
				{ 
					for (A_SetInventory("PlasmaBurstLevel",0); CountInv("PlasmaBurstLevel") < random(3,5); A_GiveInventory("PlasmaBurstLevel",1))
					{
						A_CrisisSpawnProjectile("PlasmaBallMonster","PlasmaBallCrisis",32.0,0.0,(0.5*random(-30,30)),CMF_OFFSETPITCH|CMF_BADPITCH,(0.5*random(-30,30))); 
					}
					user_shotsfired += 1;
				}

				A_FaceTarget();
			}
			TNT1 A 0 A_MonsterRefire(32,"See");
			TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax,"Decide1");
			loop;
		Decide1:
			TNT1 A 0 A_Jump(240,"See");
			TNT1 A 0 
			{
				user_shotsfiredmax = random(5,10);
				if (levelbehavior) { user_shotsfiredmax += random((user_monsterlevel/20),(user_monsterlevel/10)); }

				user_shotsfired = 0;
				A_FaceTarget();
			}
			goto Missile1;

		Pain:
			ZMAY G 3;
			ZMAY G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			ZMAY G 3;
			ZMAY G 3 A_DVDSPain();
			ZMAY GG 3;
			Goto See;
		Pain.Kick:
			ZMAY G 3;
			ZMAY G 3 A_DVDSPain();
			ZMAY GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			ZMAY H 5;
			ZMAY I 5 A_Scream();
			ZMAY J 5 A_Fall();
			ZMAY K 5;
			ZMAY L -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			ZMAY O 5;
			ZMAY P 5 A_XScream();
			ZMAY Q 5 A_Fall();
			ZMAY RSTU 5;
			ZMAY V -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			ZMAY G 5 A_GenericFreezeDeath();
			ZMAY G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			ZMAY K 5;
			ZMAY JIH 5;
			Goto See;
	}
}

// Rocket Commando
class RocketLauncherGuy : AetheriusMonsterZSC
{ 
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/Zombieman Type";
		Tag "Rocketeer Zombie";

		health 80;
		radius 20;
		height 56;
		Mass 100;
		speed 8;

		Painchance 170;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 226; // Zombies = +33% Pain Chance [maxed out in this case]
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 226; // Zombies = +33% Pain Chance
		MONSTER;
		+FLOORCLIP;
		+AVOIDMELEE;
		+DOHARMSPECIES;
		seesound "shotguy/sight";
		attacksound "shotguy/attack";
		painsound "shotguy/pain";
		deathsound "shotguy/death";
		activesound "shotguy/active";
		obituary "%o was 'sploded by a rocket-launcher guy.";

		dropitem "DoomSpellMana", 32;
		dropitem "DoomSpellMana", 8;
		dropitem "RocketLauncher";
		dropitem "RocketLauncher", 2;
		dropitem "RocketLauncher", 2;
		dropItem "RocketAmmo", 4, 1;
		dropItem "RocketAmmo", 4, 1;
		dropItem "RocketBox", 2, 5;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	States 
	{
		Spawn:
			MPO2 AB 10 A_Look();
			goto Spawn;
		See:
			MPO2 A 0
			{
				user_shotsfired = 0;
			}
			MPO2 AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0;
			MPO2 E 10 
			{
				user_ammotype = random(1,2);
			
				user_shotsfired = 0;
				user_attacktype = 0;
				if (levelbehavior)
				{
					if (user_monsterlevel > 180) { user_attacktype = randompick(0,0,0,1,1,1,1,1); }
					else if (user_monsterlevel > 135) { user_attacktype = randompick(0,0,0,0,1,1,1,1); }
					else if (user_monsterlevel > 90) { user_attacktype = randompick(0,0,0,0,0,1,1,1); }
					else if (user_monsterlevel > 45) { user_attacktype = randompick(0,0,0,0,0,0,1,1); }
					else { user_attacktype = randompick(0,0,0,0,0,0,0,1); }
				}
				if (random(1,8) == 8) 
				{
					user_shotsfiredmax = 2; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/25); }
					if (user_attacktype == 1) { user_shotsfiredmax *= random(3,5); }
				}
				else 
				{
					user_shotsfiredmax = 1; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/50); }
					if (user_attacktype == 1) { user_shotsfiredmax *= random(3,5); }
				}

				if (user_attacktype == 1)
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(3); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }
					else { A_SetTics(3); }
				}
				else
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				}
				A_FaceTarget();
			}
		Missile1:
			MPO2 F 10 bright
			{
				if (user_attacktype == 1)
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(3); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }
					else { A_SetTics(3); }
				}
				else
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				}
	
				A_MonsterCrisisCheck(); // Single Projectile
				if (user_ammotype == 2) 
				{ 
					if (user_attacktype == 1) 
					{ 
						A_CrisisSpawnProjectile("STGrenadeMonster","STGrenadeCrisis",32.0,0.0,(0.5*random(-30,30)),CMF_OFFSETPITCH|CMF_BADPITCH,(0.5*random(-30,30))); 
					}
					else
					{
						A_CrisisSpawnProjectile("STGrenadeMonster","STGrenadeCrisis",32.0,0.0,0.0,CMF_OFFSETPITCH|CMF_BADPITCH,-9.4921875); 
					}
				}
				else 
				{ 
					if (user_attacktype == 1) 
					{ 
						A_CrisisSpawnProjectile("RocketMonster","RocketCrisis",32.0,0.0,(0.5*random(-15,15)),CMF_OFFSETPITCH|CMF_BADPITCH,(0.5*random(-15,15))); 
					}
					else
					{
						A_CrisisSpawnProjectile("RocketMonster","RocketCrisis"); 
					}
				}
	
				user_shotsfired += 1;
				A_FaceTarget();
			}
			MPO2 E 10 
			{
				if (user_attacktype == 1)
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(3); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }
					else { A_SetTics(3); }
				}
				else
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				}
	
				A_FaceTarget();
			}
			TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax,"Decide1");
			loop;
		Decide1:
			TNT1 A 0 A_Jump(240,"See");
			TNT1 A 0 
			{
				if (random(1,8) == 8) 
				{
					user_shotsfiredmax = 2; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/25); }
				}
				else 
				{
					user_shotsfiredmax = 1; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/50); }
				}
				user_shotsfired = 0;
				A_FaceTarget();
			}
			goto Missile1;

		Pain:
			MPO2 G 3;
			MPO2 G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			MPO2 G 3;
			MPO2 G 3 A_DVDSPain();
			MPO2 GG 3;
			Goto See;
		Pain.Kick:
			MPO2 G 3;
			MPO2 G 3 A_DVDSPain();
			MPO2 GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			MPO2 H 5;
			MPO2 I 5 A_Scream();
			MPO2 J 5;
			MPO2 K 5 A_Fall();
			MPO2 L -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			MPO2 M 5;
			MPO2 N 5 A_XScream();
			MPO2 O 5;
			MPO2 P 5 A_Fall();
			MPO2 QRST 5;
			MPO2 U -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			MPO2 G 5 A_GenericFreezeDeath();
			MPO2 G 1 A_FreezeDeathChunks();
			wait;
		Raise: 
			MPO2 K 5;
			MPO2 JIH 5;
			Goto See;
	}
}

// Repeater Ranger
class RepeaterZombie : AetheriusMonsterZSC
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/Zombieman Type"

		dropitem "DoomSpellMana", 16;
		DropItem "RepeaterChecker", 256;
		DropItem "RepeaterChecker", 4;
		DropItem "RepeaterChecker", 4;
		DropItem "RepeaterChecker", 4;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;

		Health 100;
		Radius 20;
		Height 56;
		Speed 8;
		Mass 100;
		Monster;
		+AVOIDMELEE;
		+DOHARMSPECIES;
		+FLOORCLIP;
		SeeSound "Grunt/Sight";
		PainSound "Grunt/Pain";
		DeathSound "Grunt/Death";
		ActiveSound "Grunt/Active";
		Obituary "%o was vapourized by a Repeater Zombie";
		Decal "MummyScorch";
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 128; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 128; // Zombies = +33% Pain Chance
		PainChance 96;
		Painchance "Fist", 144; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 240; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 144; // Fist attacks have a +50% chance of stunning an enemy
		Tag "Repeater Guy";
	}
	
	States 
	{
		Spawn:
			RPZM A 0 A_JumpIfInventory("RepeaterZombieFiring", 1, "SpinDown");
			RPZM AAAAAAAAAABBBBBBBBBB 1 A_Look();
			loop;
		See:
			RPZM A 0;
			RPZM A 0 A_JumpIfInventory("RepeaterZombieFiring", 1, "SpinDown");
			RPZM AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0;
			TNT1 A 0 A_GiveInventory("RepeaterZombieFiring", 1);
			TNT1 A 0 A_StartSound("Weapons/RepeaterSpinUp",CHAN_7);
			RPZM EEFFEFEF 4 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				A_FaceTarget();
			}
		MissileLoop:
			RPZM G 2 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
	
				A_GiveInventory("RepeaterZombieHeat", 1);
				A_FaceTarget();
				A_StartSound("Weapons/RepeaterFire");
				A_MonsterCrisisCheck(); // Multiple Projectiles
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(20, 16, 2, random(1,3)*6, "RepeaterPuff", 0, 1);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieRepeaterTracer", "ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-8.0,8.0));
					A_CrisisSpawnProjectile("ZombieRepeaterTracer", "ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-8.0,8.0));
				}
			}
			RPZM G 0 A_JumpIfInventory("RepeaterZombieHeat", 100, "Overload");
			RPZM H 2 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				A_FaceTarget();
	
				A_StartSound("Weapons/RepeaterFire");
				A_MonsterCrisisCheck(); // Multiple Tracers
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(20, 16, 2, random(1,3)*6, "RepeaterPuff", 0, 1);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieRepeaterTracer", "ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-8.0,8.0));
					A_CrisisSpawnProjectile("ZombieRepeaterTracer", "ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-8.0,8.0));
				}
				A_GiveInventory("RepeaterZombieHeat", 1);
			}
			RPZM E 2 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				A_FaceTarget();
			}
			RPZM E 0 A_Jump(220, 2);
			RPZM E 0 A_SpidRefire();
			RPZM E 0 A_JumpIfInventory("RepeaterZombieHeat", 100, "Overload");
			loop;

		SpinDown:
			RPZM E 0 A_StartSound("Weapons/RepeaterSpinDown",CHAN_7);
			RPZM E 0 A_TakeInventory("RepeaterZombieFiring", 1);
			RPZM E 0 A_TakeInventory("RepeaterZombieHeat", 100);
			RPZM EFEFEEFF 4
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				A_FaceTarget();
			}
			Goto See;
		Overload:
			RPZM E 0 A_StartSound("Weapons/RepeaterSpinDown",CHAN_7);
			RPZM E 0 A_StartSound("RepeaterZombie/Steam",CHAN_WEAPON);
			RPZM E 0 A_TakeInventory("RepeaterZombieFiring", 1);
			RPZM E 0 A_TakeInventory("RepeaterZombieHeat", 100);
			RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEEFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEEFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEEFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			Goto See;

		Pain:
			RPZM I 0
			{
				A_StopSound(CHAN_7);;
				if (CountInv("RepeaterZombieFiring") > 0) { A_StartSound("Weapons/RepeaterSpinDown",CHAN_7); }
				A_TakeInventory("RepeaterZombieFiring", 1);
				A_TakeInventory("RepeaterZombieHeat", 100);
			}
			RPZM I 3;
			RPZM I 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			RPZM I 0
			{
				A_StopSound(CHAN_7);;
				if (CountInv("RepeaterZombieFiring") > 0) { A_StartSound("Weapons/RepeaterSpinDown",CHAN_7); }
				A_TakeInventory("RepeaterZombieFiring", 1);
				A_TakeInventory("RepeaterZombieHeat", 100);
			}
			RPZM I 3;
			RPZM I 3 A_DVDSPain();
			RPZM II 3;
			Goto See;
		Pain.Kick:
			RPZM I 0
			{
				A_StopSound(CHAN_7);;
				if (CountInv("RepeaterZombieFiring") > 0) { A_StartSound("Weapons/RepeaterSpinDown",CHAN_7); }
				A_TakeInventory("RepeaterZombieFiring", 1);
				A_TakeInventory("RepeaterZombieHeat", 100);
			}
			RPZM I 3;
			RPZM I 3 A_DVDSPain();
			RPZM IIII 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			RPZM I 4 A_StopSound(CHAN_7);
			RPZM J 5;
			RPZM K 5 A_Scream();
			RPZM L 5 A_Fall();
			RPZM M 5;
			RPZM N -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			RPZM O 5 A_StopSound(CHAN_7);
			RPZM P 5 A_XScream();
			RPZM Q 5;
			RPZM R 5 A_Fall();
			RPZM STUV 5;
			RPZM W -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			RPZM I 5 A_GenericFreezeDeath();
			RPZM I 1 A_FreezeDeathChunks();
			wait;
		Raise: 
			RPZM N 5;
			RPZM MLKJI 5;
			Goto See;
	}
}

// Karasawa Specialist
class KarasawaGuy : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/Zombieman Type";
		Tag "'Sawa Man";

		dropitem "DoomSpellMana", 16;
		dropItem "KarasawaChecker";
		dropitem "KarasawaChecker", 4;
		dropitem "KarasawaChecker", 4;
		dropitem "KarasawaChecker", 4;
		dropitem "BlurSphere2", 2;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;

		Health 150;
		Radius 20;
		Height 56;
		Speed 8;
		Mass 100;
		MONSTER;
		+FLOORCLIP;
		+AVOIDMELEE;
		SeeSound "grunt/sight";
		AttackSound "Weapons/KarasawaFire";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		Obituary "%o got ripped apart by a Karasawa zombie.";

		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 93; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 93; // Zombies = +33% Pain Chance [maxed out in this case]

		PainChance 70;
		Painchance "Fist", 105; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 175; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 105; // Fist attacks have a +50% chance of stunning an enemy
	}

	States
	{
		Spawn:
			KSWZ AB 10 A_Look();
			loop;
		See:
			KSWZ A 0;
			KSWZ AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
				
				user_pulseinterval += 1;
				if (user_pulseinterval >= 4)
				{
					A_StartSound("Weapons/KarasawaIdle",0,1.0);
					user_pulseinterval = 0;
				}
			}
			Loop;

		Missile:
			TNT1 A 0;
			KSWZ E 0
			{
				A_FaceTarget();
				user_shotangle = 0;
				if (random(1,2) == 1)
				{
					user_shotangle = 0;
				}
				else
				{
					if (Distance3D(target) <= 512)
					{
						if (random(1,4) == 1)
						{
							user_shotangle = 0;
						}
						else
						{
							if (random(1,2) == 1) { user_shotangle = -8; } else { user_shotangle = 8; }
						}
					}
				}
			}
			KSWZ E 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
			}
			KSWZ F 10 Bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_StartSound("Weapons/KarasawaFire",CHAN_WEAPON);
				A_MonsterCrisisCheck(); // Single Projectile
				A_CrisisSpawnProjectile("KsawBolt", "KsawBoltCrisis", 32, 1, user_shotangle, 0);
			}
			KSWZ E 3 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
			}
			KSWZ E 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_StartSound("Weapons/KarasawaCharge");
			}
			KSWZ AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 120) { bAVOIDMELEE = true; A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSWander(0,1,3,1,1);
			}
			Goto See;

		Pain:
			KSWZ G 3;
			KSWZ G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			KSWZ G 3;
			KSWZ G 3 A_DVDSPain();
			KSWZ GG 3;
			Goto See;
		Pain.Kick:
			KSWZ G 3;
			KSWZ G 3 A_DVDSPain();
			KSWZ GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			KSWZ H 5;
			KSWZ I 5 A_Scream;
			KSWZ J 5 A_Fall;
			KSWZ K 5;
			KSWZ L 5;
			KSWZ M 5;
			KSWZ N -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			KSWZ O 5;
			KSWZ P 5 A_XScream;
			KSWZ Q 5 A_Fall;
			KSWZ RSTUV 5;
			KSWZ W -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			KSWZ G 5 A_GenericFreezeDeath();
			KSWZ G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			KSWZ N 5;
			KSWZ MLKJIH 5;
			Goto See;
	}
}

// Shotgun Guy Class
//
//
// ShotgunGuy ---> SuperShotgunGuy ---> FemaleRailZombie
//
//

// Shotgun Sargeant
class DSShotgunGuy : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/ShotgunGuy Type";
		Tag "Shotgun Guy";

		Health 30;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		Painchance 170;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 226; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 226; // Zombies = +33% Pain Chance

		Monster;
		+FLOORCLIP;
		+DOHARMSPECIES;

		SeeSound "shotguy/sight";
		AttackSound "shotguy/attack";
		PainSound "shotguy/pain";
		DeathSound "shotguy/death";
		ActiveSound "shotguy/active";
		Obituary "$OB_SHOTGUY";

		dropitem "DoomSpellMana", 16;
		dropitem "Shotgun";
		dropitem "Shotgun", 4;
		dropitem "Shotgun", 4;
		dropitem "ShellBox", 2, 10;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	states
	{
		Spawn:
			SPOS AB 10 A_Look();
			loop;
		See:
			SPOS A 0;
			SPOS AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			SPOS E 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			SPOS F 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget();
				A_StartSound("shotguy/attack");
				if (GetCVar("dvds_shotgunnerspread") == 0) { user_pelletsfired = 3; } else { user_pelletsfired = 7; }
	
				A_MonsterCrisisCheck(); // Multiple Tracers
				if (bullet_tracer_mode == 0) // Hitscan
				{
					A_CustomBulletAttack(22.4, 5.68, user_pelletsfired, random(1,5) * 3, "BulletPuff", 0, 1);
				}
				else
				{
					for (user_currenttracer = 0; user_currenttracer < user_pelletsfired; user_currenttracer++)
					{
						A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(-11.2,11.2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-2.84,2.84));
					}
				}
			}
			SPOS E 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
			}
			goto See;

		Pain:
			SPOS G 3;
			SPOS G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			SPOS G 3;
			SPOS G 3 A_DVDSPain();
			SPOS GG 3;
			Goto See;
		Pain.Kick:
			SPOS G 3;
			SPOS G 3 A_DVDSPain();
			SPOS GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			SPOS H 5;
			SPOS I 5 A_Scream();
			SPOS J 5 A_NoBlocking();
			SPOS K 5;
			SPOS L -1;
			stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			SPOS M 5;
			SPOS N 5 A_XScream();
			SPOS O 5 A_NoBlocking();
			SPOS PQRST 5;
			SPOS U -1;
			stop;
		Ice:
			SPOS G 0 A_DVDSIceDeath(-2,0,1);
			SPOS G 5 A_GenericFreezeDeath();
			SPOS G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			SPOS L 5;
			SPOS KJIH 5;
			goto See;
	}
}

// Super Shotgun Sargeant
class SuperShotgunGuy : AetheriusMonsterZSC 
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/ShotgunGuy Type";
		Tag "SuperShotgun Guy";
		Health 120;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 9;
		Translation "112:127=16:47";
		SeeSound "chainguy/sight";
		PainSound "chainguy/pain";
		DeathSound "chainguy/death";
		ActiveSound "chainguy/active";
		AttackSound "weapons/sshotf"; // "ssgguy/attack";
		MONSTER;
		+FLOORCLIP;
		Obituary "%o was jacked by a super shotgun guy.";
		dropitem "DoomSpellMana", 16;
		DropItem "SuperShotgun";
		dropitem "SuperShotgun", 4;
		dropitem "SuperShotgun", 4;
		dropitem "ShellBox", 2, 10;
		dropitem "ShellBox", 2, 10;
		dropitem "ShellBox", 2, 10;
		dropitem "ShellBox", 2, 10;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;

		+AVOIDMELEE;
		+DOHARMSPECIES;

		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 207; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 207; // Zombies = +33% Pain Chance

		Painchance 155;
		Painchance "Fist", 233; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 233; // Fist attacks have a +50% chance of stunning an enemy
	}
	
	States
	{
		Spawn:
			GPOS AB 10 A_Look();
			loop;
		See:
			GPOS A 0;
			GPOS AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 20) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			GPOS E 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			GPOS F 8 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget();

				A_StartSound("weapons/sshotf");
				if (GetCVar("dvds_shotgunnerspread") == 0) { user_pelletsfired = 7; } else { user_pelletsfired = 20; }

				A_MonsterCrisisCheck(); // Multiple Tracers
				if (bullet_tracer_mode == 0) // Hitscan
				{
					A_CustomBulletAttack(44.8, 28.4, user_pelletsfired, random(1,5) * 3, "BulletPuff", 0, 1);
				}
				else
				{
					for (user_currenttracer = 0; user_currenttracer < user_pelletsfired; user_currenttracer++)
					{
						A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(-22.4,22.4), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-14.2,14.2));
					}
				}
			}
			GPOS E 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
			}
			Goto See;

		Pain:
			GPOS G 3;
			GPOS G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			GPOS G 3;
			GPOS G 3 A_DVDSPain();
			GPOS GG 3;
			Goto See;
		Pain.Kick:
			GPOS G 3;
			GPOS G 3 A_DVDSPain();
			GPOS GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			GPOS H 5;
			GPOS I 5 A_Scream();
			GPOS J 5 A_NoBlocking();
			GPOS KLM 5;
			GPOS N -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			GPOS O 5;
			GPOS P 5 A_XScream();
			GPOS Q 5 A_NoBlocking();
			GPOS RS 5;
			GPOS T -1;
			Stop;
		Ice:
			GPOS G 0 A_DVDSIceDeath(-2,0,1);
			GPOS G 5 A_GenericFreezeDeath();
			GPOS G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			GPOS L 5;
			GPOS KJIH 5;
			Goto See;
	}
}

// Railgunner Captain
class FemaleRailZombie : AetheriusMonsterZSC 
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/ShotgunGuy Type";
		Tag "Railgunner Captain";

		Health 160; // 40 
		Radius 14; // 20 
		Height 52; // 56
		Speed 11; // 10
		Mass 100;
		Damage 10;
		Scale 0.975; // 0.9
		MONSTER;
		+FLOORCLIP;
		Obituary "%o was spiked by a Railgunner Captain!";
		seesound "fem/sight";
		painsound "fem/pain";
		deathsound "fem/death";
		activesound "fem/active";
		Decal "RedRailScorch";
		MaxTargetRange 8192;
	 
		PainChance 150;
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 207; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 207; // Zombies = +33% Pain Chance

		Painchance "Fist", 225; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 225; // Fist attacks have a +50% chance of stunning an enemy

		dropitem "DoomSpellMana", 16;
		DropItem "RailgunChecker", 256;
		DropItem "RailgunChecker", 4;
		DropItem "RailgunChecker", 4;
		DropItem "RailgunChecker", 4;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}
	
	States 
	{
		Spawn: 
			RZOW A 0 NoDelay A_SetInventory("RailgunCharge",5);
			RZOW AB 10 A_Look();
			goto Spawn+1;
		See: 
			RZOW AABBCCDD 4 
			{
				if (levelbehavior && user_monsterlevel > 20) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);

				// Randomly Charges Railgun while roaming...
				user_chargeinterval += 1;
				if (user_chargeinterval >= 4)
				{
					if (random(1,100) <= (2 + (user_monsterlevel/10)) - (CountInv("RailgunCharge")/10))
					{
						if (CountInv("RailgunCharge") < (dvds_railcaptainmaxcharge*5))
						{
							A_StartSound("baby/chargerailgun");
							A_GiveInventory("RailgunCharge",5);
						}
					}
					user_chargeinterval = 0;
				}
				if (CountInv("RailgunCharge") >= (dvds_railcaptainmaxcharge*5)) { A_SetInventory("RailgunCharge",(dvds_railcaptainmaxcharge*5)); }
				
				// Charge Pulse
				user_pulseinterval += 1;
				if (user_pulseinterval >= 4)
				{
					A_StartSound("Railgun/IdlePulse",CHAN_WEAPON,CHANF_DEFAULT,(0.01*CountInv("RailgunCharge")));
					user_pulseinterval = 0;
				}
			}
			loop;

		Missile: 
			RZOW E 0
			{
				if (CountInv("RailgunCharge") < 5) { return resolvestate("See"); }
				return resolvestate(null);
			}
			RZOW E 7
			{
				if (levelbehavior && user_monsterlevel > 270) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(6); }

				A_FaceTarget();
			}
			RZOW F 5
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(4); }
				user_randominaccuracy = 15.0 - (user_monsterlevel/20);
				user_randominaccuracy2 = user_randominaccuracy * 0.2;
				if (user_randominaccuracy <= 3.0) { user_randominaccuracy = 3.0; }
				if (user_randominaccuracy2 <= 0.6) { user_randominaccuracy2 = 0.6; }
				A_FaceTarget();
			
				if (CountInv("RailgunCharge") >= 25) { A_StartSound("weapons/railgf",3); }
				if (CountInv("RailgunCharge") >= 50) { A_StartSound("weapons/railgf",4); }
				if (CountInv("RailgunCharge") >= 75) { A_StartSound("weapons/railgf",5); }
				if (CountInv("RailgunCharge") >= 100) { A_StartSound("weapons/railgf",8); }

				double driftspeed = 1.0 + (0.005 * CountInv("RailgunCharge"));
				double sparsity = 1.0 + (0.01 * CountInv("RailgunCharge"));
				double pduration = 29.0 + (CountInv("RailgunCharge") * 1.25);

				A_MonsterCrisisCheck();
				A_CrisisRailgun(A_EnemyRailgunDamage(random(1,3)*10), 0, "ac1819", "FF6C00", 0, 1, 0, "DBTRailPuff", user_randominaccuracy, 0, 8192, pduration, sparsity, driftspeed, "None", 0, 270, 0, 0.0);
				A_SetInventory("RailgunCharge",0);
			}
			RZOW EEE 6
			{
				if (levelbehavior && user_monsterlevel > 300) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 200) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(5); }
	
				A_FaceTarget();
			}
			RZOW E 3
			{
				if (levelbehavior && user_monsterlevel > 300) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(2); }
	
				if (CountInv("RailgunCharge") < 100)
				{
					A_StartSound("baby/chargerailgun");
					A_GiveInventory("RailgunCharge",5);
					if (CountInv("RailgunCharge") >= 100) { A_SetInventory("RailgunCharge",100); }
				}
				A_FaceTarget();
			}
			RZOW E 5
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(4); }
	
				A_FaceTarget();
			}
			RZOW E 0
			{
				if (random(1,256) <= 64) { return resolvestate("Missile"); }
				return resolvestate(null);
			}
			goto See;
		Pain: 
			RZOW G 5;
			RZOW G 3 A_DVDSPain();
			Goto PainEnd;
		Pain.Fist:
			RZOW G 5;
			RZOW G 3 A_DVDSPain();
			RZOW GG 3;
			Goto PainEnd;
		Pain.Kick:
			RZOW G 5;
			RZOW G 3 A_DVDSPain();
			RZOW GGGG 3;
			Goto PainEnd;
		PainEnd:
			RZOW G 0
			{
				if (CountInv("RailgunCharge") < 4)
				{
					A_StartSound("baby/chargerailgun");
					A_GiveInventory("RailgunCharge",5);
					if (CountInv("RailgunCharge") >= 100) { A_SetInventory("RailgunCharge",100); }
				}
				else
				{
					if (random(1,100) <= (10+(user_monsterlevel/2)) )
					{
						if (CountInv("RailgunCharge") < 100)
						{
							A_StartSound("baby/chargerailgun");
							A_GiveInventory("RailgunCharge",5);
							if (CountInv("RailgunCharge") >= 100) { A_SetInventory("RailgunCharge",100); }
						}
					}
				}
			}
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			RZOW H 5;
			RZOW I 5 A_Scream();
			RZOW J 5 A_Fall();
			RZOW K 5;
			RZOW L 5;
			RZOW M 5;
			RZOW N -1;
			Stop;
		XDeath: 
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			RZOW O 5;
			RZOW P 5 A_XScream();
			RZOW Q 5 A_Fall();
			RZOW RSTUV 5;
			RZOW W -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			RZOW G 5 A_GenericFreezeDeath();
			RZOW G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			RZOW M 5;
			RZOW LKJIH 5;
			Goto See;
	}
}

// SS Nazi
class DSWolfensteinSS : AetheriusMonsterZSC replaces WolfensteinSS
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/Others";
		Tag "SS Nazi";
		Health 50;
		Radius 20;
		Height 56;
		Speed 8;
		Mass 100;
		Painchance 170;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 226; // Zombies = +33% Pain Chance
		Monster;
		+FLOORCLIP;
		+DOHARMSPECIES;
		SeeSound "wolfss/sight";
		PainSound "nazi/pain";
		DeathSound "wolfss/death";
		ActiveSound "wolfss/active";
		AttackSound "wolfss/attack";
		Obituary "$OB_WOLFSS";
		
		dropitem "DoomSpellMana", 16;
		dropitem "Clip";
		dropitem "Clip", 4;
		dropitem "Clip", 4;
		dropitem "ClipBox", 2, 50;
		dropitem "ClipBox", 2, 50;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	states
	{
		Spawn:
			SSWV AB 10 A_Look();
			loop;
		See:
			SSWV A 0;
			SSWV AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0;
			SSWV E 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			SSWV F 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
		MissileLoop:
			SSWV G 4 bright 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
	
				A_FaceTarget();
				A_StartSound("chainguy/attack", CHAN_WEAPON);
				A_MonsterCrisisCheck(); // Single Projectile/Tracer
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(22.4, 0, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(-11.2,11.2));
				}
			}
			SSWV F 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			SSWV G 4 bright 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
	
				A_FaceTarget();
				A_StartSound("chainguy/attack", CHAN_WEAPON);
				A_MonsterCrisisCheck(); // Single Projectile/Tracer
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(22.4, 0, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(-11.2,11.2));
				}
			}
			SSWV F 1 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(0); }
				A_CPosRefire();
			}
			loop;

		Pain:
			SSWV H 3;
			SSWV H 3 A_StartSound("nazi/pain");
			Goto See;
		Pain.Fist:
			SSWV H 3;
			SSWV H 3 A_StartSound("nazi/pain");
			SSWV HH 3;
			Goto See;
		Pain.Kick:
			SSWV H 3;
			SSWV H 3 A_StartSound("nazi/pain");
			SSWV HHHH 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			SSWV I 5;
			SSWV J 5 A_Scream();
			SSWV K 5 A_NoBlocking();
			SSWV L 5;
			TNT1 A 0;
			SSWV M -1;
			stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			SSWV N 5;
			SSWV O 5 A_XScream();
			SSWV P 5 A_NoBlocking();
			SSWV QRSTU 5;
			TNT1 A 0;
			SSWV V -1;
			stop;
		Ice:
			SSWV H 0 A_DVDSIceDeath(-2,0,1);
			SSWV H 5 A_GenericFreezeDeath();
			SSWV H 1 A_FreezeDeathChunks();
			wait;
		Raise:
			SSWV M 5;
			SSWV LKJI 5;
			goto See;
	}
}

// Chaingun Commando
class DSChaingunGuy : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/ChaingunGuy Type";
		Tag "Chaingun Guy";

		Health 70;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		Painchance 170;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 226; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 226; // Zombies = +33% Pain Chance

		Monster;
		+FLOORCLIP;
		+DOHARMSPECIES;
		SeeSound "chainguy/sight";
		PainSound "chainguy/pain";
		DeathSound "chainguy/death";
		ActiveSound "chainguy/active";
		AttackSound "chainguy/attack";
		Obituary "$OB_CHAINGUY";

		dropitem "DoomSpellMana", 16;
		dropitem "Chaingun";
		dropitem "Chaingun", 4, 10;
		dropitem "Chaingun", 4, 10;
		dropitem "ClipBox", 2, 50;
		dropitem "ClipBox", 2, 50;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	states
	{
		Spawn:
			CPOS AB 10 A_Look();
			loop;
		See:
			CPOS A 0
			{
				user_shotsfired = 0;
			}
			CPOS AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			TNT1 A 0
			{
				if (!(CountInv("ChaingunCooldown")))
				{
					if (levelbehavior) { user_shotsfiredmax += random((25 + (user_monsterlevel / 8)),(50 + (user_monsterlevel / 4))); }
					else { user_shotsfiredmax = random(25,50); }
				}
				else
				{
					return resolvestate("See");
				}
				return resolvestate(null);
			}
			CPOS E 10
			{
				user_shotaccuracy = 22.5;
				user_shotzaccuracy = 5.625; // 0.0;
				if (user_charmed) { user_shotaccuracy *= 0.667; user_shotzaccuracy *= 0.667; }
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); user_shotaccuracy = user_shotaccuracy * 6 / 9; user_shotzaccuracy = user_shotzaccuracy * 4 / 9; }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); user_shotaccuracy = user_shotaccuracy * 7 / 9; user_shotzaccuracy = user_shotzaccuracy * 5 / 9; }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); user_shotaccuracy = user_shotaccuracy * 7 / 9; user_shotzaccuracy = user_shotzaccuracy * 6 / 9; }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); user_shotaccuracy = user_shotaccuracy * 7 / 9; user_shotzaccuracy = user_shotzaccuracy * 7 / 9; }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); user_shotaccuracy = user_shotaccuracy * 8 / 9; user_shotzaccuracy = user_shotzaccuracy * 8 / 9; }
				user_shotaccuracy1 = user_shotaccuracy * -0.5;
				user_shotaccuracy2 = user_shotaccuracy * 0.5;
				user_shotzaccuracy1 = user_shotzaccuracy * -0.5;
				user_shotzaccuracy2 = user_shotzaccuracy * 0.5;
				A_FaceTarget();
			}
		MissileLoop:
			CPOS FE 4 bright
			{
				A_CheckIfTargetDead("See");

				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				A_FaceTarget();
				A_StartSound("chainguy/attack", CHAN_WEAPON);
				A_MonsterCrisisCheck(); // Single Projectile/Tracer
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
				}
				user_shotsfired += 1;
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("ChaingunCooldown", 1);
					return resolvestate("MissileEnd"); 
				}
				return resolvestate(null);
			}
			CPOS F 0
			{
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("ChaingunCooldown", 1);
					return resolvestate("MissileEnd"); 
				}
				return resolvestate(null);
			}
			CPOS F 1 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(0); }
			}
			CPOS F 0 A_MonsterRefire(40,"See"); // A_CPosRefire();
			loop;

		MissileEnd:
			TNT1 A 0 
			{
				user_shotsfired = 0;
			}
			CPOS F 0 A_FaceTarget();
			Goto See;

		Pain:
			CPOS G 3;
			CPOS G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			CPOS G 3;
			CPOS G 3 A_DVDSPain();
			CPOS GG 3;
			Goto See;
		Pain.Kick:
			CPOS G 3;
			CPOS G 3 A_DVDSPain();
			CPOS GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			CPOS H 5;
			CPOS I 5 A_Scream();
			CPOS J 5 A_NoBlocking();
			CPOS KLM 5;
			TNT1 A 0;
			CPOS N -1;
			stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			CPOS O 5;
			CPOS P 5 A_XScream();
			CPOS Q 5 A_NoBlocking();
			CPOS RS 5;
			TNT1 A 0;
			CPOS T -1;
			stop;
		Ice:
			CPOS G 0 A_DVDSIceDeath(-2,0,1);
			CPOS G 5 A_GenericFreezeDeath();
			CPOS G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			CPOS N 5;
			CPOS MLKJIH 5;
			goto See;
	}
}

// Mingunner Corporal
class Minigunner : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/ChaingunGuy Type";
		Tag "Minigun Zombie";
		
		Health 105; // 70
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		Painchance 170;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 226; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 226; // Zombies = +33% Pain Chance
		Monster;
		+FLOORCLIP;
		+DOHARMSPECIES;
		SeeSound "grunt/sight";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		AttackSound "weapons/minigunfire";
		Obituary "%o was shredded by a minigun zombie.";
		dropitem "DoomSpellMana", 16;
		DropItem "MinigunChecker";
		DropItem "MinigunChecker", 4, 10;
		DropItem "MinigunChecker", 4, 10;
		DropItem "Clip";
		DropItem "Clip", 64;
		DropItem "Clip", 16;
		DropItem "Clip", 4;
		DropItem "Clip", 1;
		dropitem "ClipBox", 2, 50;
		dropitem "ClipBox", 2, 50;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	States
	{
		Spawn:
			MINZ AB 10 A_Look();
			loop;
		See:
			MINZ A 0
			{
				user_shotsfired = 0;
			}
			MINZ AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			TNT1 A 0
			{
				if (!(CountInv("MinigunCooldown")))
				{
					if (levelbehavior) { user_shotsfiredmax += random((40 + (user_monsterlevel / 5)),(100 + (user_monsterlevel / 2))); }
					else { user_shotsfiredmax = random(40,100); }
				}
				else
				{
					return resolvestate("See");
				}
				return resolvestate(null);
			}
			MINZ E 10
			{
				user_shotaccuracy = 35.5; // 30.0;
				user_shotzaccuracy = 14.2; // 2.0;
				if (user_charmed) { user_shotaccuracy *= 0.667; user_shotzaccuracy *= 0.667; }
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); user_shotaccuracy = user_shotaccuracy * 6 / 9; user_shotzaccuracy = user_shotzaccuracy * 4 / 9; }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); user_shotaccuracy = user_shotaccuracy * 7 / 9; user_shotzaccuracy = user_shotzaccuracy * 5 / 9; }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); user_shotaccuracy = user_shotaccuracy * 7 / 9; user_shotzaccuracy = user_shotzaccuracy * 6 / 9; }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); user_shotaccuracy = user_shotaccuracy * 7 / 9; user_shotzaccuracy = user_shotzaccuracy * 7 / 9; }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); user_shotaccuracy = user_shotaccuracy * 8 / 9; user_shotzaccuracy = user_shotzaccuracy * 8 / 9; }
				user_shotaccuracy1 = user_shotaccuracy * -0.5;
				user_shotaccuracy2 = user_shotaccuracy * 0.5;
				user_shotzaccuracy1 = user_shotzaccuracy * -0.5;
				user_shotzaccuracy2 = user_shotzaccuracy * 0.5;
				A_FaceTarget();
			}
		MissileLoop:
			MINZ FE 2
			{
				A_CheckIfTargetDead("See");

				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(1); }
				A_FaceTarget();
	
				A_StartSound("weapons/minigunfire", CHAN_WEAPON);
				A_MonsterCrisisCheck(); // Single Projectile/Tracer
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(2,4)*random(6,7), "BulletPuff", 0, CBAF_NORANDOM);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
				}
				user_shotsfired += 1;
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("MinigunCooldown", 1);
					return resolvestate("MissileEnd"); 
				}
				return resolvestate(null);
			}
			MINZ F 0
			{
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("MinigunCooldown", 1);
					return resolvestate("MissileEnd"); 
				}
				return resolvestate(null);
			}
			MINZ F 0 A_MonsterRefire(40,"See"); // A_CPosRefire
			loop;

		MissileEnd:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			MINZ F 0 A_FaceTarget();
			Goto See;

		Pain:
			MINZ G 3;
			MINZ G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			MINZ G 3;
			MINZ G 3 A_DVDSPain();
			MINZ GG 3;
			Goto See;
		Pain.Kick:
			MINZ G 3;
			MINZ G 3 A_DVDSPain();
			MINZ GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			MINZ H 6;
			MINZ I 6 A_Scream();
			MINZ J 6 A_Fall();
			MINZ KLM 6;
			MINZ N -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			MINZ O 4;
			MINZ P 4 A_XScream();
			MINZ Q 4 A_Fall();
			MINZ RSTUV 4;
			MINZ W -1;
			Stop;
		Raise:
			MINZ N 5;
			MINZ MLKJIH 5;
			Goto See;
	}
}

// BFG General
class BFGGuy : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/ChaingunGuy Type";
		Tag "BFG Commando";
		
		health 200;
		radius 20;
		height 56;
		Mass 100;
		speed 8;
		Painchance 125;
		Painchance "Fist", 188; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 188; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 167; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 167; // Zombies = +33% Pain Chance
		MONSTER;
		+FLOORCLIP;
		+AVOIDMELEE;
		missiletype "BFGBallMonster";
		seesound "chainguy/sight";
		painsound "chainguy/pain";
		deathsound "chainguy/death";
		activesound "chainguy/active";
		obituary "%o was vapourized by a zombie's BFG9000.";
		dropitem "DoomSpellMana", 32;
		dropitem "BFG9000";
		dropitem "BFG9000", 4, 10;
		dropitem "BFG9000", 4, 10;
		dropitem "CellPack", 2, 50;
		dropitem "CellPack", 2, 50;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	states
	{
		Spawn:
			BFGZ AB 10 A_Look();
			loop;
		See:
			BFGZ A 0;
			BFGZ AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0;
			TNT1 A 0 A_JumpIf(GetCVar("dvds_BFG2704") == 0,"MissileBFG9000");
			TNT1 A 0 A_Jump(256,"MissileBFG9000","MissileBFG2704");
			goto See;
		MissileBFG9000:
			BFGZ E 20
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(17); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(18); }
				else if (levelbehavior && user_monsterlevel > 20) { A_SetTics(19); }
				A_StartSound("weapons/bfgf");
			}
			BFGZ F 10 Bright
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
			}
			BFGZ F 10 Bright
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_MonsterCrisisCheck(); // Single Projectile
				A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis");
			}
			BFGZ E 20
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(17); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(18); }
				else if (levelbehavior && user_monsterlevel > 20) { A_SetTics(19); }
			}
			goto See;

		MissileBFG2704:
			BFGZ E 0 A_FaceTarget();
			BFGZ E 18
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 210) { A_SetTics(11); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(12); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(13); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 30) { A_SetTics(17); }
				A_FaceTarget();
				A_StartSound("weapons/bfgf");
			}
			BFGZ F 9 Bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(8); }
				A_FaceTarget();
			}
			BFGZ F 0  
			{
				user_shotsfired = 0;
			}
		MissileBFG2704Shoot:
			BFGZ F 1 Bright
			{
				A_FaceTarget();
				A_MonsterCrisisCheck(); // Single Projectile
				A_CrisisSpawnProjectile("PlasmaBall1Monster","PlasmaBall1Crisis",32,0,random(-10,10),CMF_OFFSETPITCH|CMF_BADPITCH,random(-10,10));
			}
			BFGZ F 1 Bright
			{
				A_FaceTarget();
				A_MonsterCrisisCheck(); // Single Projectile
				A_CrisisSpawnProjectile("PlasmaBall2Monster","PlasmaBall2Crisis",32,0,random(-10,10),CMF_OFFSETPITCH|CMF_BADPITCH,random(-10,10));
			}
			BFGZ F 0 
			{
				user_shotsfired += 1;
			}
			BFGZ F 0 A_JumpIf(user_shotsfired==20,"MissileBFG2704End");
			Loop;
		MissileBFG2704End:
			BFGZ E 18
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 210) { A_SetTics(11); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(12); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(13); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 30) { A_SetTics(17); }
			}
			goto See;

		Pain:
			BFGZ G 3;
			BFGZ G 3 A_DVDSPain();
			goto See;
		Pain.Fist:
			BFGZ G 3;
			BFGZ G 3 A_DVDSPain();
			BFGZ GG 3;
			goto See;
		Pain.Kick:
			BFGZ G 3;
			BFGZ G 3 A_DVDSPain();
			BFGZ GGGG 3;
			goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			BFGZ H 5;
			BFGZ I 5 A_Scream();
			BFGZ J 5 A_NoBlocking();
			BFGZ KLM 5;
			TNT1 A 0;
			BFGZ N -1;
			stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			BFGZ O 5;
			BFGZ P 5 A_XScream();
			BFGZ Q 5 A_NoBlocking();
			BFGZ RS 5;
			TNT1 A 0;
			BFGZ T -1;
			stop;
		Ice:
			BFGZ G 0 A_DVDSIceDeath(-2,0,1);
			BFGZ G 5 A_GenericFreezeDeath();
			BFGZ G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			BFGZ N 5;
			BFGZ MLKJIH 5;
			goto See;
	}
}

class DarkImp : AetheriusMonsterZSC
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/DoomImp Type"
		Tag "Dark Imp";
		Health 120;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		MissileType "DarkSeeker";
		MeleeDamage 3;
		Painchance 200;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
	
		DamageFactor 0.875;
		RadiusDamageFactor 0.875;
		DamageFactor "Explosive", 0.875;
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Fire", 0.5; // Imps = -50% Fire Damage
		Painchance "Fire", 100; // Imps = -50% Pain Chance
		DamageFactor "Holy", 1.5; // Imps = +50% Holy Damage
		Painchance "Holy", 255; // Imps = +50% Pain Chance
		Species "Imp";
		Monster;
		+FLOORCLIP;
		+DONTHARMSPECIES;
		SeeSound "darkimp/sight";
		PainSound "darkimp/pain";
		DeathSound "darkimp/death";
		ActiveSound "darkimp/active";
		MeleeSound "darkimp/melee";
		Obituary "%o was cursed by a dark imp.";
		HitObituary "%o was touched by a dark imp.";
			
		dropitem "DoomSpellMana", 24;
		dropitem "DoomSpellMana", 24;
		dropitem "Stimpack", 3;
		dropitem "Stimpack", 3;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}
	
	States
	{
		Spawn:
			DRKI AB 10 A_Look();
			loop;
		See:
			DRKI AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Melee:
		Missile:
			DRKI EF 8
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
			}
			DRKI G 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget();

				A_MonsterCrisisCheck(); // Combo Attack
				A_CrisisComboAttack("DarkSeeker", "DarkSeekerCrisis", 32, (3*random(1,8)), "imp/melee");
			}
			goto See;

		Pain.Holy:
			DRKI H 2;
			DRKI H 2 A_DVDSPain();
			DRKI H 2;
			DRKI H 2;
			Goto See;
		Pain:
			DRKI H 2;
			DRKI H 2 A_DVDSPain();
			Goto See;
		Pain.Fist:
			DRKI H 2;
			DRKI H 2 A_DVDSPain();
			DRKI HH 2;
			Goto See;
		Pain.Kick:
			DRKI H 2;
			DRKI H 2 A_DVDSPain();
			DRKI HHHH 2;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DRKI I 8;
			DRKI J 8 A_Scream();
			DRKI K 6;
			DRKI L 6 A_NoBlocking();
			DRKI M -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DRKI N 5;
			DRKI O 5 A_XScream();
			DRKI P 5;
			DRKI Q 5 A_NoBlocking();
			DRKI RST 5;
			DRKI U -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			DRKI H 5 A_GenericFreezeDeath();
			DRKI H 1 A_FreezeDeathChunks();
			wait;
		Raise:
			DRKI M 8;
			DRKI L 8;
			DRKI KJI 6;
			Goto See;
	}
}

class STDarkImp : AetheriusMonsterZSC
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/DoomImp Type"
		Tag "Dark Imp [Weak]";
		
		Health 110;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 9;
		MissileType "DarkFast";
		PainChance 200;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Explosive", 1;
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Fire", 0.5; // Imps = -50% Fire Damage
		Painchance "Fire", 100; // Imps = -50% Pain Chance
		DamageFactor "Holy", 1.5; // Imps = +50% Holy Damage
		Painchance "Holy", 255; // Imps = +50% Pain Chance
		MeleeDamage 3;
		Species "Imp";
		MONSTER;
		+DONTHARMSPECIES;
		+FLOORCLIP;
		SeeSound "darkimp2/sight";
		PainSound "darkimp2/pain";
		DeathSound "darkimp2/death";
		ActiveSound "darkimp2/active";
		MeleeSound "darkimp2/melee";
		Obituary "%o was cursed by a dark imp.";
		HitObituary "%o was touched by a dark imp.";
		
		dropitem "DoomSpellMana", 24;
		dropitem "DoomSpellMana", 24;
		dropitem "Stimpack", 3;
		dropitem "Stimpack", 3;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	States
	{
		Spawn:
			DRKS AB 10 A_Look();
			loop;
		See:
			DRKS AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;

		Melee:
		Missile:
			DRKS EF 8
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
			}
			DRKS G 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget();

				A_MonsterCrisisCheck(); // Combo Attack
				A_CrisisComboAttack("DarkFast", "DarkFastCrisis", 32, (3*random(1,8)), "imp/melee");
			}
			Goto See;

		Pain.Holy:
			DRKS H 2;
			DRKS H 2 A_DVDSPain();
			DRKS HH 2;
			Goto See;
		Pain:
			DRKS H 2;
			DRKS H 2 A_DVDSPain();
			Goto See;
		Pain.Fist:
			DRKS H 2;
			DRKS H 2 A_DVDSPain();
			DRKS HH 2;
			Goto See;
		Pain.Kick:
			DRKS H 2;
			DRKS H 2 A_DVDSPain();
			DRKS HHHH 2;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DRKS I 8;
			DRKS J 8 A_Scream();
			DRKS K 6;
			DRKS L 6 A_Fall();
			DRKS M -1;
			Stop;

		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DRKI N 5;
			DRKI O 5 A_XScream();
			DRKI P 5;
			DRKI Q 5 A_Fall();
			DRKI RST 5;
			DRKI U -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			DRKS H 5 A_GenericFreezeDeath();
			DRKS H 1 A_FreezeDeathChunks();
			wait;

		Raise:
			DRKS M 8;
			DRKS L 8;
			DRKS KJI 6;
			Goto See;
	}
}

class VoidDarkImp : AetheriusMonsterZSC
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/DoomImp Type"
		Tag "Dark Imp [Strong]";

		Health 130;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 7;
		MissileType "DarkNormal";
		MeleeDamage 3;

		PainChance 200;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy

		DamageFactor 0.825;
		RadiusDamageFactor 0.825;
		DamageFactor "Explosive", 0.825;
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Fire", 0.5; // Imps = -50% Fire Damage
		Painchance "Fire", 100; // Imps = -50% Pain Chance
		DamageFactor "Holy", 1.5; // Imps = +50% Holy Damage
		Painchance "Holy", 255; // Imps = +50% Pain Chance

		Species "Imp";
		MONSTER;
		+DONTHARMSPECIES;
		+FLOORCLIP;
		SeeSound "darkimp3/sight";
		PainSound "darkimp3/pain";
		DeathSound "darkimp3/death";
		ActiveSound "darkimp3/active";
		MeleeSound "darkimp3/melee";
		Obituary "%o was cursed by a dark imp.";
		HitObituary "%o was touched by a dark imp.";
		
		dropitem "DoomSpellMana", 24;
		dropitem "DoomSpellMana", 24;
		dropitem "Stimpack", 3;
		dropitem "Stimpack", 3;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	States
	{
		Spawn:
			DRKV AB 10 A_Look();
			loop;
		See:
			DRKV AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;

		Melee:
		Missile:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
		MissileStart:
			TNT1 A 0 A_Jump(256,"MissileNormal","MissileStrong");
		MissileNormal:
			DRKV EF 8 Bright
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
			}
			DRKV G 6 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget();

				A_MonsterCrisisCheck(); // Combo Attack
				A_CrisisComboAttack("DarkNormal", "DarkNormalCrisis", 32, (3*random(1,8)), "imp/melee");
			}
			TNT1 A 0 
			{
				user_shotsfired += 1;
			}
			TNT1 A 0 A_JumpIf(user_shotsfired==2,"See");
			Goto MissileStart;
		MissileStrong:
			DRKV IJ 8 Bright
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
			}
			DRKV K 6 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget();

				A_MonsterCrisisCheck(); // Combo Attack
				A_CrisisComboAttack("DarkStrong", "DarkStrongCrisis", 32, (random(4,5)*random(1,8)), "imp/melee");
			}
			TNT1 A 0 
			{
				user_shotsfired += 1;
			}
			TNT1 A 0 A_JumpIf(user_shotsfired==2,"See");
			Goto MissileStart;

		Pain.Holy:
			DRKV H 2;
			DRKV H 2 A_DVDSPain();
			DRKV HH 2;
			Goto See;
		Pain:
			DRKV H 2;
			DRKV H 2 A_DVDSPain();
			Goto See;
		Pain.Fist:
			DRKV H 2;
			DRKV H 2 A_DVDSPain();
			DRKV HH 2;
			Goto See;
		Pain.Kick:
			DRKV H 2;
			DRKV H 2 A_DVDSPain();
			DRKV HHHH 2;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DRKV L 8;
			DRKV M 8 A_Scream();
			DRKV N 5;
			DRKV O 5 A_Fall();
			DRKV P -1;
			Stop;

		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DRKI N 5;
			DRKI O 5 A_XScream();
			DRKI P 5;
			DRKI Q 5 A_Fall();
			DRKI RST 5;
			DRKI U -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			DRKV H 5 A_GenericFreezeDeath();
			DRKV H 1 A_FreezeDeathChunks();
			wait;
		Raise:
			DRKV P 8;
			DRKV O 8;
			DRKV NML 6;
			Goto See;
	}
}

class NetherDarkImp : AetheriusMonsterZSC
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/DoomImp Type"
		Tag "Nether Dark Imp";

		Health 300;
		Radius 22;
		Height 60;
		Speed 9;
		Mass 250;
		Scale 1.2;
		MeleeDamage 6;
		MissileType "InfernoBall";
		Missileheight 32;
		PainChance 100;
		Painchance "Fist", 150; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 250; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 150; // Fist attacks have a +50% chance of stunning an enemy

		DamageFactor 0.7;
		RadiusDamageFactor 0.7;
		DamageFactor "Explosive", 0.7;
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Fire", 0.5; // Imps = -50% Fire Damage
		Painchance "Fire", 50; // Imps = -50% Pain Chance
		DamageFactor "Holy", 1.5; // Imps = +50% Holy Damage
		Painchance "Holy", 150; // Imps = +50% Pain Chance

		Species "Imp";
		MONSTER;
		+DONTHARMSPECIES;
		+FLOORCLIP;
		SeeSound "darkimp4/sight";
		PainSound "darkimp4/pain";
		DeathSound "darkimp4/death";
		ActiveSound "darkimp4/active";
		MeleeSound "darkimp4/melee";
		Obituary "%o was cursed by a nether dark imp.";
		HitObituary "%o was touched by a nether dark imp.";

		dropitem "DoomSpellMana", 24;
		dropitem "DoomSpellMana", 24;
		dropitem "Stimpack", 3;
		dropitem "Stimpack", 3;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	States
	{
		Spawn:
			DRKF AB 10 A_Look();
			loop;
		See:
			DRKF AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;

		Melee:
		Missile:
			DRKF E 0 A_Jump (256, "Missile1", "Missile2");
			Goto See;
		Missile1:
			DRKF EF 8
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
			}
			DRKF G 6 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget();

				A_MonsterCrisisCheck(); // Combo Attack
				A_CrisisComboAttack("NetherLightning", "NetherLightningCrisis", 32, 6*random(1,8), "imp/melee");
			}
			Goto See;
		Missile2:
			DRKF IJ 8
			{
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
			}
			DRKF K 6 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget();

				A_MonsterCrisisCheck(); // Combo Attack
				A_CrisisComboAttack("InfernoBall", "InfernoBallCrisis", 32, 6*random(1,8), "imp/melee");
			}
			Goto See;

		Pain.Holy:
			DRKF H 2;
			DRKF H 2 A_DVDSPain();
			DRKF HH 2;
			Goto See;
		Pain:
			DRKF H 2;
			DRKF H 2 A_DVDSPain();
			Goto See;
		Pain.Fist:
			DRKF H 2;
			DRKF H 2 A_DVDSPain();
			DRKF HH 2;
			Goto See;
		Pain.Kick:
			DRKF H 2;
			DRKF H 2 A_DVDSPain();
			DRKF HHHH 2;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DRKF L 8;
			DRKF M 8 A_Scream();
			DRKF N 5;
			DRKF O 5 A_Fall();
			DRKF P -1;
			Stop;

		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DRKF Q 5;
			DRKF R 5 A_XScream();
			DRKF S 5;
			DRKF T 5 A_Fall();
			DRKF UVW 5;
			DRKF X -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			DRKF H 5 A_GenericFreezeDeath();
			DRKF H 1 A_FreezeDeathChunks();
			wait;
		Raise:
			DRKF P 8 ;
			DRKF O 8;
			DRKF NML 6;
			Goto See;
	}
}

class DSFatso : AetheriusMonsterZSC
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/Mancubus Type"
		Tag "Mancubus";

		Health 600;
		Radius 48;
		Height 64;
		Mass 1000;
		Speed 8;
		Painchance 80;
		Painchance "Fist", 120; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 200; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 120; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 0.45; // 3.6
		DamageFactor "Holy", 2; // Demons = +200% Holy Damage
		Painchance "Holy", 240; // Demons = +300% Pain Chance
		DamageFactor "Plasma", 1.0875;
		Painchance "Plasma", 87;
		DamageFactor "Thunder", 1.175;
		Painchance "Thunder", 94; // Demons = -17% Pain Chance
		DamageFactor "Electric", 1.175;
		Painchance "Electric", 94;
		DamageFactor "Lightning", 1.175;
		Painchance "Lightning", 94;

		Species "Mancubi";
		Monster;
		+DONTHARMSPECIES;
		+FLOORCLIP;
		+BOSSDEATH;
		SeeSound "fatso/sight";
		PainSound "fatso/pain";
		DeathSound "fatso/death";
		ActiveSound "fatso/active";
		Obituary "$OB_FATSO";

		dropitem "DoomSpellMana2", 20;
		dropitem "RocketLauncher", 2, 1;
		dropitem "RocketLauncher", 2, 1;
		dropitem "MegaSphere2", 2;
		dropitem "BlueArmor", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "SauronHelmet", 1;
	}
	
	states
	{
		Spawn:
			FATT A 0 NoDelay; 
			FATT AB 15 A_Look();
			goto Spawn+1;
		See:
			FATT A 0;
			FATT AABBCCDDEEFF 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;


		Missile:
			TNT1 A 0
			{
				user_attacktype = 1;
				if (random(1,256) <= 16) { user_attacktype = -1; }
				if (random(1,256) <= 16) { user_attacktype *= 2; }
			}
			FATT G 20 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(17); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(18); }
				else if (levelbehavior && user_monsterlevel > 20) { A_SetTics(19); }

				A_FatRaise();
			}
		MissileStart:
			FATT H 10 bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("FatShot","FatShotCrisis",32,0,0.0);
				A_CrisisSpawnProjectile("FatShot","FatShotCrisis",32,0,11.25*user_attacktype);
			}
			FATT IG 5 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_FaceTarget();
			}
			FATT H 10 bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("FatShot","FatShotCrisis",32,0,0.0);
				A_CrisisSpawnProjectile("FatShot","FatShotCrisis",32,0,-11.25*user_attacktype);
			}
			FATT IG 5 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_FaceTarget();
			}
			FATT H 10 bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("FatShot","FatShotCrisis",32,0,5.625*user_attacktype);
				A_CrisisSpawnProjectile("FatShot","FatShotCrisis",32,0,-5.625*user_attacktype);
			}
			FATT IG 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_FaceTarget();
			}
			FATT G 0
			{
				if (random(1,256) <= (8 + (user_monsterlevel/30))) { return resolvestate("MissileStart"); }
				return resolvestate(null);
			}
			goto See;

		Pain:
			FATT J 3;
			FATT J 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			FATT J 3;
			FATT J 3 A_DVDSPain();
			FATT JJ 3;
			Goto See;
		Pain.Kick:
			FATT J 3;
			FATT J 3 A_DVDSPain();
			FATT JJJJ 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			FATT K 6;
			FATT L 6 A_Scream();
			FATT M 6 A_NoBlocking();
			FATT NOPQRS 6;
			FATT T -1 A_DVDSBossDeath();
			stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			FATT J 5 A_GenericFreezeDeath();
			FATT J 1 A_FreezeDeathChunks();
			wait;
		Raise:
			FATT R 5;
			FATT QPONMLK 5;
			Goto See;
	}
}

class Hectebus : DSFatso
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/Mancubus Type"
		Tag "Hectebus";

		Health 1200;
		Radius 48;
		Height 64;
		Speed 9;
		Mass 1500;
		Painchance 40;
		Painchance "Fist", 60; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 100; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 60; // Fist attacks have a +50% chance of stunning an enemy

		DamageFactor 0.95;
		RadiusDamageFactor 0.95;
		DamageFactor "Explosive", 0.95;

		DamageFactor "Crush", 0.45; // 3.6
		DamageFactor "Holy", 2; // Demons = +200% Holy Damage
		Painchance "Holy", 60; // Demons = +300% Pain Chance
		DamageFactor "Plasma", 1.0875;
		Painchance "Plasma", 43;
		DamageFactor "Thunder", 1.175;
		Painchance "Thunder", 47; // Demons = -17% Pain Chance
		DamageFactor "Electric", 1.175;
		Painchance "Electric", 47;
		DamageFactor "Lightning", 1.175;
		Painchance "Lightning", 47;
		Species "Mancubi";
		+DONTHARMSPECIES;
		+AVOIDMELEE;
		SEESOUND "hect/see";
		DEATHSOUND "hect/die";
		Obituary "%o was cremated by a hectebus.";

		dropitem "RocketLauncher", 2, 1;
		dropitem "RocketLauncher", 2, 1;
		dropitem "RocketLauncher", 2, 1;
		dropitem "RocketLauncher", 2, 1;
		dropitem "BFG9000", 2, 40;
		dropitem "MegaSphere2", 2;
		dropitem "MegaSphere2", 2;
		dropitem "StoneSkin", 2;
		dropitem "StoneSkin", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "SauronHelmet", 1;
	}

	States
	{
		Spawn:
			HECT A 0 NoDelay;
			HECT AB 12 A_Look();
			goto Spawn+1;
		See:
			HECT A 0;
			HECT AABBCCDDEEFF 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0
			{
				user_attacktype = 1;
				if (random(1,256) <= 16) { user_attacktype = -1; }
				if (random(1,256) <= 16) { user_attacktype *= 2; }
				A_StartSound("fatso/raiseguns");
			}
			HECT G 20 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(17); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(18); }
				else if (levelbehavior && user_monsterlevel > 20) { A_SetTics(19); }

				A_FaceTarget();
			}
		MissileStart:
			HECT H 10 Bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,0*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,5.625*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,11.25*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,16.875*user_attacktype);
			}
			HECT IG 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_FaceTarget();
			}
			HECT H 10 Bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,-0*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,-5.625*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,-11.25*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,-16.875*user_attacktype);
			}
			HECT IG 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_FaceTarget();
			}
			HECT H 10 Bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,-11.25*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,-5.625*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,0*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,5.625*user_attacktype);
				A_CrisisSpawnProjectile("HectShot","HectShotCrisis",28,0,11.25*user_attacktype);
			}
			HECT IG 5 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_FaceTarget();
			}
			HECT G 0
			{
				if (random(1,256) <= (12 + (user_monsterlevel/24))) { return resolvestate("MissileStart"); }
				return resolvestate(null);
			}
			goto See;

		Pain:
			HECT J 3;
			HECT J 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			HECT J 3;
			HECT J 3 A_DVDSPain;
			HECT JJ 3;
			Goto See;
		Pain.Kick:
			HECT J 3;
			HECT J 3 A_DVDSPain();
			HECT JJJJ 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			HECT K 6;
			HECT L 6 A_Scream();
			HECT M 6 A_NoBlocking();
			HECT NOPQRS 6;
			HECT T -1 A_DVDSBossDeath();
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			HECT J 5 A_GenericFreezeDeath();
			HECT J 1 A_FreezeDeathChunks();
			wait;
		Raise:
			HECT R 5;
			HECT QPONMLK 5;
			Goto See;
	}
}

// Daedabus
class Daedabus : AetheriusMonsterZSC
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/Mancubus Type"
		Tag "Daedabus";

		Health 2100;
		Radius 48;
		Height 64;
		Mass 2000;
		Speed 10;
		Painchance 40;
		Painchance "Fist", 60; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 100; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 60; // Fist attacks have a +50% chance of stunning an enemy

		DamageFactor 0.90;
		RadiusDamageFactor 0.90;
		DamageFactor "Explosive", 0.90;

		DamageFactor "Crush", 0.45; // 3.6
		DamageFactor "Holy", 2; // Demons = +200% Holy Damage
		Painchance "Holy", 60; // Demons = +300% Pain Chance
		DamageFactor "Plasma", 1.0875;
		Painchance "Plasma", 43;
		DamageFactor "Thunder", 1.175;
		Painchance "Thunder", 47; // Demons = -17% Pain Chance
		DamageFactor "Electric", 1.175;
		Painchance "Electric", 47;
		DamageFactor "Lightning", 1.175;
		Painchance "Lightning", 47;

		BloodColor "73 00 00";
		Species "Mancubi";
		MONSTER;
		+DONTHARMSPECIES;
		+AVOIDMELEE;
		+FLOORCLIP;
		SeeSound "Daedabus/Sight";
		PainSound "Daedabus/Pain";
		DeathSound "Daedabus/Death";
		ActiveSound "Daedabus/Active";
		Obituary "%o was Torched by a Daedabus.";

		dropitem "RocketLauncher", 2, 1;
		dropitem "RocketLauncher", 2, 1;
		dropitem "RocketLauncher", 2, 1;
		dropitem "RocketLauncher", 2, 1;
		dropitem "RocketLauncher", 2, 1;
		dropitem "BFG9000", 2, 40;
		dropitem "MegaSphere2", 2;
		dropitem "MegaSphere2", 2;
		dropitem "MegaSphere2", 2;
		dropitem "DiamondSkin", 2;
		dropitem "DiamondSkin", 2;
		dropitem "DiamondSkin", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "SauronHelmet", 1;
	}

	States
	{
		ResetLevel:
			DAED A 1 A_Look();
			DAED A 1;
			DAED A 1 
			{
				user_ressurrectstr += random(10,20);
			}
			DAED A 1;
			goto Spawn;
		Spawn:
			DAED AB 15 A_Look();
			loop;
		See:
			DAED A 0;
			DAED AABBCCDDEEFF 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;
		Missile:
			TNT1 A 0
			{
				user_attacktype = 1;
				if (random(1,256) <= 16) { user_attacktype = -1; }
				if (random(1,256) <= 16) { user_attacktype *= 2; }
			}
			DAED G 0 A_StartSound("Daedabus/Attack");
			DAED G 18 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 210) { A_SetTics(11); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(12); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(13); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 30) { A_SetTics(17); }
				A_FaceTarget();
			}
		MissileStart:
			DAED H 9 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(8); }

				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,11.25*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,5.625*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,0*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,-5.625*user_attacktype);
			}
			DAED I 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget();
			}
			DAED G 4 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			DAED H 9 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(8); }

				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,5.625*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,0*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,-5.625*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,-11.25*user_attacktype);
			}
			DAED I 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget();
			}
			DAED G 4 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			DAED H 9 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(8); }

				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,16.875*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,11.25*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,5.625*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,0*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,-5.625*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,-11.25*user_attacktype);
				A_CrisisSpawnProjectile("DaedFire","DaedFireCrisis",28,0,-16.875*user_attacktype);
			}
			DAED I 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget();
			}
			DAED G 4 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			DAED G 0
			{
				if (random(1,256) <= (16 + (user_monsterlevel/18))) { return resolvestate("MissileStart"); }
				return resolvestate(null);
			}
			Goto See;
		
		Pain:
			DAED J 3;
			DAED J 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			DAED J 3;
			DAED J 3 A_DVDSPain();
			DAED JJ 3;
			Goto See;
		Pain.Kick:
			DAED J 3;
			DAED J 3 A_DVDSPain();
			DAED JJJJ 3;
			Goto See;
		
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DAED K 6;
			DAED L 6 A_Scream();
			DAED M 6 A_NoBlocking();
			DAED NOPQRS 6;
			DAED T -1 A_DVDSBossDeath();
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			DAED J 5 A_GenericFreezeDeath();
			DAED J 1 A_FreezeDeathChunks();
			wait;
		Raise:
			DAED R 5 ;
			DAED QPONMLK 5;
			Goto See;
		XDeath:
			goto Death;
	}
}

class DSArchvile : AetheriusMonsterZSC 
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/Archvile Type"
		Tag "Arch Vile";

		Health 700;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 15;
		Painchance 10;
		Painchance "Stomp", 100; // Archviles are hyper suspectible to Stomp attacks [10x pain chance]
		Painchance "Trample", 100; // Archviles are hyper suspectible to Stomp attacks [10x pain chance]
		Painchance "Magic", 4; // Archviles super resistant to magic attacks [0.4x pain chance]
		Painchance "Fist", 50; // Archviles are super suspectible to Punch attacks [10x pain chance]
		Painchance "Kick", 255; // Archviles are always flinched by the kick attack [50x pain chance]
		Painchance "Gauntlets", 50; // Archviles are super suspectible to Punch attacks [10x pain chance]
		Painchance "Chainsaw", 50; // Archviles are super suspectible to Chainsaw attacks [10x pain chance]
		Painchance "Melee", 50; // Archviles are super suspectible to Melee attacks [10x pain chance]
		PainChance "Fire", 1;
		PainChance "Ice", 35;
		DamageFactor "Crush", 0.4; // 3.2
		DamageFactor "Fire", 0.1;
		DamageFactor "Ice", 1.66;
		DamageFactor "Holy", 2; // Demons = +200% Holy Damage
		Painchance "Holy", 30; // Demons = +300% Pain Chance
		DamageFactor "Magic", 0.64;
		Damagefactor "Stomp", 2.5;
		Damagefactor "Trample", 2.5;
		DamageFactor "Fist", 2.5;
		DamageFactor "Kick", 2.5;
		DamageFactor "PoisonNeedle", 2.5;
		DamageFactor "Gauntlets", 2.5;
		DamageFactor "Sceptre", 2.5;
		DamageFactor "Chainsaw", 2.5;
		DamageFactor "Melee", 2.5;
		MaxTargetRange 896;
		Monster;
		+QUICKTORETALIATE;
		+FLOORCLIP;
		+NOTARGET;
		+AVOIDMELEE;
		SeeSound "vile/sight";
		PainSound "vile/pain";
		DeathSound "vile/death";
		ActiveSound "vile/active";
		MeleeSound "vile/stop";
		Obituary "$OB_VILE";

		dropitem "DoomSpellMana", 36;
		dropitem "DoomSpellMana2", 24;
		dropitem "RandomPowerupSpawner", 2;
		dropitem "HasteSphere", 2;
		dropitem "SoulSphere2", 2;
		dropitem "BlurSphere2", 2;
		dropitem "MegaSphere2", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "SauronHelmet", 1;
	}

	states
	{
		Spawn:
			VILE A 0 NoDelay;
			VILE AB 10 A_Look();
			goto Spawn+1;
		See:
			VILE A 0;
			VILE AABBCCDDEEFF 2
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
				A_DVDSChase(null,"Missile", CHF_RESURRECT);
			}
			loop;

		Missile:
			TNT1 A 0
			{
				temp1 = (16 * temp2) + ((user_monsterlevel * 0.293333333) * temp2);
				if (temp1 > 104) { temp1 = 104; }
				//A_LogInt(temp1);
				if (random(1,256) <= temp1) { return resolvestate("Missile2"); }
				temp2 = 1;
				return resolvestate(null);
			}
			VILE G 0 BRIGHT 
			{
				A_VileStart();
				A_MonsterCrisisCheck(); // VileAttack
				if (user_canusecrisisatk == 1) { A_PlayCrisisAtkSound(); }
			}
			VILE G 10 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_FaceTarget();
			}
			VILE H 8 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				if (user_canusecrisisatk == 1)
				{
					A_VileTarget("ArchvileFireCrisis");
				}
				else
				{
					A_VileTarget("ArchvileFireNew");
				}
			}
			VILE IJKLMN 8 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				A_FaceTarget();
			}
			VILE O 8 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				if (user_canusecrisisatk == 1)
				{
					A_VileAttack("vile/stop",(20 * CrisisMultiplier),(70 * CrisisMultiplier),(20 * CrisisMultiplier),8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
				else
				{
					A_VileAttack("vile/stop",20,70,20,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
			}
			VILE P 20 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(17); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(18); }
				else if (levelbehavior && user_monsterlevel > 20) { A_SetTics(19); }
			}
			Goto See;
		Missile2:
			VILE J 0 BRIGHT
			{
				A_StartSound("vile/firestrt");
			}
			VILE JKLMNO 4 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 300) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				A_FaceTarget();
			}
			VILE A 0
			{
				A_StartSound("archvile/firewall");
				A_CrisisSpawnProjectile("ArchvileFlame","ArchvileFlameCrisis",0,0,0);
			}
			VILF A 24 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(12); }
				else if (levelbehavior && user_monsterlevel > 165) { A_SetTics(13); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 135) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 105) { A_SetTics(17); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(18); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(19); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(20); }
				else if (levelbehavior && user_monsterlevel > 45) { A_SetTics(21); }
				else if (levelbehavior && user_monsterlevel > 30) { A_SetTics(22); }
				else if (levelbehavior && user_monsterlevel > 15) { A_SetTics(23); }
			}
			Goto See;

		Heal:
			VILE [ 10 Bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
			}
			VILE \ 10 Bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_VileHealProj();
			}
			VILE ] 10 Bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
			}
			goto See;

		Pain:
			VILE Q 5;
			VILE Q 5 A_DVDSPain();
			Goto See;
		Pain.Melee:
			VILE Q 5   
			{
				if (random(1,3) <= 1) { temp2 = random(2,3); }
			}
			VILE Q 5 A_DVDSPain();
			Goto See;
		Pain.Fist:
			VILE Q 5
			{
				if (random(1,3) <= 1) { temp2 = 2; }
			}
			VILE Q 5 A_DVDSPain();
			VILE QQ 5;
			Goto See;
		Pain.Kick:
			VILE Q 5
			{
				if (random(1,5) <= 2) { temp2 = 3; }
			}
			VILE Q 5 A_DVDSPain();
			VILE QQQQ 5;
			Goto See;
		Pain.Ice:
			VILE Q 5;
			VILE Q 5 A_DVDSPain();
			VILE Q 10;
			VILE Q 0 A_Jump(128, 4);
			VILE Q 5;
			VILE Q 0 A_Jump(128, 2);
			VILE Q 5;
			VILE Q 0;
			Goto See;
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			VILE Q 7;
			VILE R 7 A_Scream();
			VILE S 7 A_NoBlocking();
			VILE TUVWXY 7;
			VILE Z -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			VILE Q 5 A_GenericFreezeDeath();
			VILE Q 1 A_FreezeDeathChunks();
			wait;

		Raise:
			VILE Y 7;
			VILE XWVVUTSRQ 7;
			Goto See;
	}
}

class Diabloist : DSArchvile  
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/Archvile Type"
		Tag "Diabloist";

		Health 1400;
		Radius 20;
		Height 56;
		Mass 750;
		Speed 22.5;
		BloodColor "08 08 08";
		Painchance 10;
		Painchance "Stomp", 100; // Archviles are hyper suspectible to Stomp attacks [10x pain chance]
		Painchance "Trample", 100; // Archviles are hyper suspectible to Stomp attacks [10x pain chance]
		Painchance "Fist", 100; // Archvile are super suspectible to Punch attacks [10x pain chance]
		Painchance "Kick", 255; // Archviles are hyper suspectible to Kick attack [50x pain chance]
		Painchance "Gauntlets", 100; // Archvile are super suspectible to Punch attacks [10x pain chance]
		Painchance "Chainsaw", 100; // Archvile are super suspectible to Chainsaw attacks [10x pain chance]
		Painchance "Melee", 100; // Archvile are super suspectible to Melee attacks [10x pain chance]
		PainChance "Fire", 0;
		PainChance "Ice", 35;

		DamageFactor 0.875;
		RadiusDamageFactor 0.875;
		DamageFactor "Explosive", 0.875;

		Damagefactor "Stomp", 5;
		Damagefactor "Trample", 5;
		DamageFactor "Fist", 5;
		DamageFactor "Kick", 5;
		DamageFactor "Gauntlets", 5;
		DamageFactor "PoisonNeedle", 5;
		DamageFactor "Sceptre", 5;
		DamageFactor "Chainsaw", 5;
		DamageFactor "Melee", 5;
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Fire", 0.02;
		DamageFactor "Ice", 1.66;
		DamageFactor "Holy", 2; // Demons = +200% Holy Damage
		Painchance "Holy", 30; // Demons = +300% Pain Chance
		DamageFactor "Magic", 0.48;
		PainChance "Magic", 4;
		Species "Diabloist";
		MONSTER;
		+QUICKTORETALIATE;
		+FLOORCLIP;
		+NOTARGET;
		+NODROPOFF;
		+NORADIUSDMG;
		+MISSILEMORE;
		+DONTHARMSPECIES;
		+AVOIDMELEE;
		SeeSound "monster/diasit";
		PainSound "monster/diapai";
		DeathSound "monster/diadth";
		ActiveSound "monster/diaact";
		Obituary "%o got was set ablaze by a Diabloist.";
		dropitem "DoomSpellMana", 36;
		dropitem "DoomSpellMana", 36;
		dropitem "DoomSpellMana2", 24;
		dropitem "DoomSpellMana2", 24;
		dropitem "DoomSpellMana3", 12;
		dropitem "RandomPowerupSpawner", 2;
		dropitem "RandomPowerupSpawner", 2;
		dropitem "HasteSphere", 2;
		dropitem "HasteSphere", 2;
		dropitem "HasteSphere", 2;
		dropitem "HasteSphere", 2;
		dropitem "SoulSphere2", 2;
		dropitem "SoulSphere2", 2;
		dropitem "BlurSphere2", 2;
		dropitem "BlurSphere2", 2;
		dropitem "MegaSphere2", 2;
		dropitem "MegaSphere2", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "SauronHelmet", 1;
	}
	
	States 
	{
		Missile:
			TNT1 A 0;
			DIAB G 0 A_Jump(85, "GravityAttackCheck");
		// Archvile-Type Fire Spell
		Missile1:
			DIAB G 0 BRIGHT 
			{
				if (random(1,2) <= 1)
				{
					if (random(1,3) <= 1) { return resolvestate("Missile2"); }
					else if (random(1,2) <= 1) { return resolvestate("Missile3"); }
					else { return resolvestate("Missile4"); }
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			DIAB G 0 BRIGHT A_FaceTarget();
			DIAB GH 3 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_FaceTarget();
			}
			DIAB I 3 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_VileTarget("DFire");
			}
			DIAB HGHIHGHIHGHIGH 3 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_FaceTarget();
			}
			DIAB I 3 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_FaceTarget();
				A_MonsterCrisisCheck(); // VileAttack
				if (user_canusecrisisatk == 1)
				{
					A_PlayCrisisAtkSound();
					A_VileAttack("vile/stop",(40 * CrisisMultiplier),(140 * CrisisMultiplier),(140 * CrisisMultiplier),12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
				else
				{
					A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
			}
			DIAB G 0 BRIGHT A_MonsterRefire(8,"See");
			DIAB P 0 BRIGHT A_Jump(96,"Missile1");
			DIAB G 0 BRIGHT A_Jump(128,"Missile3");
			Goto See;

		// Rapid Fire Shots
		Missile2:
			DIAB NOPNOPNOPNOPNOP 5 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_FaceTarget();
				A_MonsterCrisisCheck(); // Single Projectile
				A_CrisisSpawnProjectile("DFlare","DFlareCrisis",40,0,random(-4,4));
			}
			DIAB G 0 BRIGHT A_MonsterRefire(8,"See");
			DIAB P 0 BRIGHT A_Jump(96,"Missile2");
			DIAB P 0 BRIGHT A_Jump(64,"Missile3");
			DIAB P 0 BRIGHT A_Jump(128,"Missile4");
			Goto See;

		// Firestorm-Equse Attack
		Missile3:
			DIAB GHIJKLMN 5 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_FaceTarget();
			}
			DIAB O 5 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_StartSound("weapons/firbfi");
				A_FaceTarget();
				A_MonsterCrisisCheck(); // Single Projectile
				A_CrisisSpawnProjectile("DMissile","DMissileCrisis",32,0,0);
			}
			DIAB P 5 Bright;
			DIAB G 0 Bright A_MonsterRefire(8,"See");
			DIAB P 0 Bright A_Jump(96,"Missile3");
			DIAB P 0 Bright A_Jump(128,"Missile4");
			Goto See;

		// Twin Flame Snakes
		Missile4:
			DIAB [\ 8 Bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				A_FaceTarget();
			}
			DIAB ] 8 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				A_FaceTarget();
				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("DTracer","DTracerCrisis",0,-40,0);
				A_CrisisSpawnProjectile("DTracer","DTracerCrisis",0,40,0);
			}
			DIAB G 0 BRIGHT A_MonsterRefire(8,"See");
			DIAB P 0 BRIGHT A_Jump(96,"Missile4");
			DIAB G 0 BRIGHT A_Jump(8,"Missile1");
			Goto See;

		GravityAttackCheck:
			DIAB G 0 Bright A_DiabloistGravityCheck();
		Missile5:
			DIAG A 0 Bright A_FaceTarget();
			DIAG A 3 Bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_DiabloistSpawnGravityNodes();
				A_FaceTarget();
			}
			DIAG BCBABCBA 3 Bright // 24/16/8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_DiabloistGravityPulse(3.0);
				A_FaceTarget();
			}
			DIAG BCBABCBA 3 Bright // 24/16/8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_DiabloistGravityPulse(5.25);
				A_FaceTarget();
			}
			DIAG BCBA 4 Bright // 16/12/8/4
			{
				if (levelbehavior && user_monsterlevel > 300) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(3); }

				A_DiabloistGravityPulse(9.75);
				A_FaceTarget();
			}
			DIAG BCBA 4 Bright // 16/12/8/4
			{
				if (levelbehavior && user_monsterlevel > 300) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(3); }

				A_DiabloistGravityPulse(12.00);
				A_FaceTarget();
			}
			DIAG DEF 4 Bright // 9/6/3
			{
				if (levelbehavior && user_monsterlevel > 300) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(3); }

				A_FaceTarget();
			}
			DIAG G 4 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 300) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(3); }

				A_DiabloistGravity(user_gravitytype);
			}
			DIAG FE 3 Bright // 9/6/3
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_FaceTarget();
			}
			DIAG A 0 BRIGHT A_Jump(1,"Missile");
			Goto See;

		Spawn:
			DIAB A 0 NoDelay;
			DIAB AB 10 A_Look();
			goto Spawn+1;
		See:
			DIAB A 0 
			{
				if (health <= user_HPBuffRange) 
				{
					if (health <= user_HPLowBuffRange) 
					{
						A_SetInventory("SpeedBonus18Percent",1);
						A_SetInventory("SpeedBonus12Percent",0);
					}
					else
					{
						A_SetInventory("SpeedBonus12Percent",1);
						A_SetInventory("SpeedBonus18Percent",0);
					}
				}
				else
				{
					A_SetInventory("SpeedBonus18Percent",0);
					A_SetInventory("SpeedBonus12Percent",0);
				}
			}
			DIAB AABBCCDDEEFF 2 
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
				if (random (1,256) <= (160+(user_monsterlevel/16))) { A_DVDSChase(null,"Missile", CHF_FASTCHASE | CHF_RESURRECT,1,3,1,1); } else { A_DVDSChase(null,"Missile", CHF_RESURRECT,1,3,1,1); } 
			}
			loop;

		Heal:
			DIAB [ 10 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_DiabHealProj(-24.0,-40.0);
			}
			DIAB \ 10 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_DiabHealProj(0.0,0.0);
			}
			DIAB ] 10 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_DiabHealProj(24.0,40.0);
			}
			Goto See;

		Pain: 
			DIAB Q 5;
			DIAB Q 5 A_DVDSPain();
			DIAB G 0 A_Jump(112, "GravityAttackCheck");
			DIAB G 0 A_Jump(120, "Missile1");
			Goto See;
		Pain.Fist:
			DIAB Q 5;
			DIAB Q 5 A_DVDSPain();
			DIAB QQ 5;
			DIAB G 0 A_Jump(112, "GravityAttackCheck");
			DIAB G 0 A_Jump(120, "Missile1");
			Goto See;
		Pain.Kick:
			DIAB Q 5;
			DIAB Q 5 A_DVDSPain();
			DIAB QQQQ 5;
			DIAB G 0 A_Jump(112, "GravityAttackCheck");
			DIAB G 0 A_Jump(120, "Missile1");
			Goto See;
		Pain.Ice:
			DIAB Q 5;
			DIAB Q 5 A_DVDSPain();
			DIAB Q 10;
			DIAB Q 0 A_Jump(128, 4);
			DIAB Q 5;
			DIAB Q 0 A_Jump(128, 2);
			DIAB Q 5;
			DIAB Q 0;
			Goto See;
		Pain.DoomSpell:
			TNT1 A 0 A_Jump(224, "GravityAttackCheck");
			DIAB G 0 A_Jump(240, "Missile1");
			Goto See;
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			DIAB Q 7;
			DIAB R 7 A_Scream();
			DIAB S 7 A_NoBlocking();
			DIAB TUVW 7;
			DIAB XY 5;
			DIAB Z -1;
			Stop;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			DIAB Q 5 A_GenericFreezeDeath();
			DIAB Q 1 A_FreezeDeathChunks();
			wait;
		Raise:
			DIAB Y 5;
			DIAB X 5;
			DIAB WVUTSRQ 7;
			goto See;
	}
}



// Hell Warrior
class HellWarrior : AetheriusMonsterZSC
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/Hell Nobles"
		Tag "Hell Warrior";

		Species "HellNoble";
		Health 400; 
		Speed 8;
		Radius 24;
		Height 64;
		Mass 1000;
		PainChance 50;
		Painchance "Fist", 75; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 125; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 75; // Fist attacks have a +50% chance of stunning an enemy
		Damagefactor "Crush", 0.5; // 4.0
		Meleedamage 8;
		SeeSound "hellwarrior/sight";
		PainSound "hellwarrior/pain";
		DeathSound "hellwarrior/death";
		ActiveSound "knight/active";
		MeleeSound "baron/melee";
		DamageFactor 0.67;
		RadiusDamageFactor 0.67;
		DamageFactor "Explosive", 0.67;
		DamageFactor "PoisonElemental", 1.5;
		DamageFactor "Holy", 2; // Demons = +200% Holy Damage
		Painchance "Holy", 150; // Demons = +300% Pain Chance
		ReactionTime 8;
		MONSTER;
		+BOSSDEATH;
		+FLOORCLIP;
		Missiletype "HellWarriorBall";
		Obituary "%o was tagged by the hell warrior's fireball.";
		HitObituary "%o was torn apart by a hell warrior.";
		dropitem "DoomSpellMana2", 24;
		dropitem "Backpack", 2;
		dropitem "Backpack", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "SauronHelmet", 1;
	}
	
	States 
	{
		Spawn: 
			HWAR A 0 NoDelay;
			HWAR AB 10 A_Look();
			loop;
		See:
			TNT1 A 0;
			HWAR AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_HellWarShieldOff();
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;
		Missile:
			TNT1 A 0;
			HWAR E 0 A_Jump(128, "Missile2");
			HWAR EF 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget();
			}
			HWAR G 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget();

				user_tempvar1 = 32;
				user_tempvar2 = 15;
				A_MonsterCrisisCheck(); // Multiple Projectiles + Combo Attack
				A_CrisisComboAttack("HellWarriorBall", "HellWarriorBallCrisis", user_tempvar1, 8, "baron/melee", "Melee", true);
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("HellWarriorBall","HellWarriorBallCrisis",user_tempvar1,0,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("HellWarriorBall","HellWarriorBallCrisis",user_tempvar1,0,(user_tempvar2*1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("HellWarriorBall","HellWarriorBallCrisis",user_tempvar1,0,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("HellWarriorBall","HellWarriorBallCrisis",user_tempvar1,0,(user_tempvar2*2));
					}
				}
			}
			Goto See;
		Missile2:
			HWAR H 0 A_Jump(128, "Missile3");
			HWAR H 6
			{
				A_HellWarShieldOn();

				if (levelbehavior && user_monsterlevel > 225) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(5); }
				A_FaceTarget();
			}
			HWAR I 4 BRIGHT
			{
				A_HellWarShieldOn();

				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }

				user_tempvar1 = 25;
				user_tempvar2 = 15;
				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("HellWarriorBall2", "HellWarriorBall2Crisis", user_tempvar1, 0, 0);
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*2));
					}
				}
			}
			HWAR H 6
			{
				A_HellWarShieldOn();

				if (levelbehavior && user_monsterlevel > 225) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(5); }
				A_FaceTarget();
			}
			HWAR A 0
			{
				A_HellWarShieldOff();
				A_FaceTarget();
			}
			Goto See;
		Missile3:
			HWAR H 6
			{
				A_HellWarShieldOn();

				if (levelbehavior && user_monsterlevel > 225) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(5); }
				A_FaceTarget();
			}
			HWAR I 4 BRIGHT
			{
				A_HellWarShieldOn();

				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }

				user_tempvar1 = 25;
				user_tempvar2 = 15;
				A_MonsterCrisisCheck(); // Multiple Projectiles
				A_CrisisSpawnProjectile("HellWarriorBall2", "HellWarriorBall2Crisis", user_tempvar1, 0, 0);
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*2));
					}
				}
			}
			HWAR H 16
			{
				A_HellWarShieldOn();

				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 157) { A_SetTics(9); }
				else if (levelbehavior && user_monsterlevel > 135) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 112) { A_SetTics(11); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(12); }
				else if (levelbehavior && user_monsterlevel > 67) { A_SetTics(13); }
				else if (levelbehavior && user_monsterlevel > 45) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 22) { A_SetTics(15); }
				A_SpidRefire();
			}
			HWAR I 4 BRIGHT
			{
				A_HellWarShieldOn();

				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }

				A_MonsterCrisisCheck(); // Multiple Projectiles + Combo Attack
				A_CrisisSpawnProjectile("HellWarriorBall2", "HellWarriorBall2Crisis", 25, 0, 0);
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("HellWarriorBall2","HellWarriorBall2Crisis",user_tempvar1,0,(user_tempvar2*2));
					}
				}
			}
			HWAR H 6
			{
				A_HellWarShieldOn();

				if (levelbehavior && user_monsterlevel > 225) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(5); }
				A_FaceTarget();
			}
			HWAR A 0
			{
				A_HellWarShieldOff();

				A_FaceTarget();
				if (random(1,6) == 1) { return resolvestate("Missile3"); }
				return resolvestate(null); 
			}
			Goto See;
		Melee: 
			TNT1 A 0;
			HWAR EF 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget();
			}
			HWAR G 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget();
				A_CrisisComboAttack("HellWarriorBall", "HellWarriorBallCrisis", user_tempvar1, 8, "baron/melee", "Melee", true);
			}
			Goto See;
		Pain:
			HWAR J 6 A_DVDSPain();
			HWAR J 0 { if (random(1,256) > 248) { return resolvestate("See"); } return resolvestate(null); }
			Goto PainShield;
		Pain.Fist:
			HWAR J 6 A_DVDSPain();
			HWAR JJ 6;
			HWAR J 0 { if (random(1,256) > 236) { return resolvestate("See"); } return resolvestate(null); }
			Goto PainShield;
		Pain.Kick:
			HWAR J 6 A_DVDSPain();
			HWAR JJJJ 6;
			HWAR J 0 { if (random(1,256) > 224) { return resolvestate("See"); } return resolvestate(null); }
			Goto PainShield;
		PainShield:
			HWAR H 0 A_Jump(16,"Missile2");
			HWAR H 0
			{
				A_HellWarShieldOn();
			}
			HWAR HHHHHHH 6
			{
				A_HellWarShieldOn();
	
				A_FaceTarget();
				if (levelbehavior && user_monsterlevel > 180) 
				{
					A_SetTics(9); 
					if (random(1,256) > 192) { return resolvestate("Missile2"); } return resolvestate(null);
				}
				else if (levelbehavior && user_monsterlevel > 120) 
				{
					A_SetTics(8); 
					if (random(1,256) > 224) { return resolvestate("Missile2"); } return resolvestate(null);
				}
				else if (levelbehavior && user_monsterlevel > 60) 
				{
					A_SetTics(7); 
					if (random(1,256) > 240) { return resolvestate("Missile2"); } return resolvestate(null);
				}
				else
				{
					if (random(1,256) > 248) { return resolvestate("Missile2"); } return resolvestate(null);
				}
			}
			HWAR H 0 
			{
				A_HellWarShieldOff();
			}
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			HWAR K 5 A_SpawnProjectile("EvilWarriorShield", 25, 0, 60);
			HWAR L 5 A_Scream();
			HWAR M 5;
			HWAR N 5 A_NoBlocking();
			HWAR OPQR 5;
			HWAR S 5;
			HWAR T -1 A_DVDSBossDeath();
			Stop; 
		Raise:
			HWAR Q 5;
			HWAR PONMLK 5;
			Goto See;
		Ice:
			#### # 0 A_DVDSIceDeath(-2,0,1);
			HWAR J 5 A_GenericFreezeDeath();
			HWAR J 1 A_FreezeDeathChunks();
			wait;
	}
}

class DSScriptedMarine : ScriptedMarine replaces ScriptedMarine
{
	default
	{
		Tag "UAC Marine Buddy";
		dropitem "DoomSpellMana", 24;
		dropitem "DoomSpellMana2", 24;
		dropitem "DoomSpellMana3", 24;
		dropitem "Chainsaw", 2;
		dropitem "DoubleBladedChainsaw", 2;
		dropitem "Pistol", 2;
		dropitem "Shotgun", 2;
		dropitem "SuperShotgun", 2;
		dropitem "Chaingun", 2;
		dropitem "Minigun", 2;
		dropitem "RocketLauncher", 2;
		dropitem "PlasmaRifle", 2;
		dropitem "Railgun2", 2;
		dropitem "Repeater2", 2;
		dropitem "KaraSawa2", 2;
		dropitem "BFG9000", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}
}

// Zombieman Class
//
//                           / > KaraSawaGuy
// Zombieman ---> PlasmaGuy -------------------> RocketLauncherGuy
//                           \ > RepeaterZombie
//

// Rifle Trooper
class DSZombieman : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/Zombieman Type";
		Tag "Zombieman";

		Health 20;
		Radius 20;
		Height 56;
		Speed 8;
		Mass 100;
		Painchance 200;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 255; // Zombies = +33% Pain Chance [maxed out in this case]
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 255; // Zombies = +33% Pain Chance [maxed out in this case]
		Monster;
		+FLOORCLIP;
		+DOHARMSPECIES;

		dropitem "DoomSpellMana", 16;
		dropitem "Clip";
		dropitem "Clip", 4;
		dropitem "Clip", 4;
		dropitem "ClipBox", 2, 50;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "Pistol2", 2;

		SeeSound "grunt/sight";
		AttackSound "grunt/attack";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		Obituary "%o was pecked to death by a zombieman.";
	}

	states
	{
		Spawn:
			POSS AB 10 A_Look();
			loop;
		See:
			POSS A 0
			{
				user_shotsfired = 0;
			}
			POSS AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			POSS E 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				if (random(1,8) == 1) 
				{
					user_shotsfiredmax = 2;
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/20); }
				}
				else 
				{
					user_shotsfiredmax = 1; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/40); }
				}

				A_FaceTarget();
				user_shotsfired = 0;
				user_shotaccuracy = 10.45; // 22.5;
				user_shotzaccuracy = 5.225; // 0.0;
				if (user_charmed) { user_shotaccuracy *= 0.667; user_shotzaccuracy *= 0.667; }
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); user_shotaccuracy = user_shotaccuracy * 6 / 9; user_shotzaccuracy = user_shotzaccuracy * 6 / 9; }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); user_shotaccuracy = user_shotaccuracy * 7 / 9; user_shotzaccuracy = user_shotzaccuracy * 7 / 9; }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); user_shotaccuracy = user_shotaccuracy * 8 / 9; user_shotzaccuracy = user_shotzaccuracy * 8 / 9; }
				user_shotaccuracy1 = user_shotaccuracy * -0.5;
				user_shotaccuracy2 = user_shotaccuracy * 0.5;
				user_shotzaccuracy1 = user_shotzaccuracy * -0.5;
				user_shotzaccuracy2 = user_shotzaccuracy * 0.5;
				//A_GetAccuracySpreads();
			}
		Missile1:
			POSS F 8 bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				A_StartSound("grunt/attack");
				A_FaceTarget();
				A_MonsterCrisisCheck(); // Tracer
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5) * 3, "BulletPuff", 0, CBAF_NORANDOM);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
				}
			}
			POSS E 8 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				user_shotsfired += 1;
				A_FaceTarget();
			}
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			TNT1 A 0 A_MonsterRefire(32,"See");
			TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax,"Decide1");
			loop;
		Decide1:
			TNT1 A 0 A_Jump(240,"See");
			TNT1 A 0 
			{
				if (random(1,8) == 1) 
				{
					user_shotsfiredmax = 2; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/20); }
				}
				else 
				{
					user_shotsfiredmax = 1;
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/40); }
				}
	
				user_shotsfired = 0;
				A_FaceTarget();
			}
			goto Missile1;

		Pain:
			POSS G 3;
			POSS G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			POSS G 3;
			POSS G 3 A_DVDSPain();
			POSS GG 3;
			Goto See;
		Pain.Kick:
			POSS G 3;
			POSS G 3 A_DVDSPain();
			POSS GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			POSS H 5;
			POSS I 5 A_Scream();
			POSS J 5 A_NoBlocking();
			POSS K 5
			{
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (!CountInv("Pistol2",AAPTR_PLAYER1)) { A_DropItem("Pistol2",1,32); }
				}
			}
			POSS L -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			POSS M 5;
			POSS N 5 A_XScream();
			POSS O 5 A_NoBlocking();
			POSS P 5
			{
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (!CountInv("Pistol2",AAPTR_PLAYER1)) { A_DropItem("Pistol2",1,32); }
				}
			}
			POSS QRST 5;
			POSS U -1;
			Stop;
		Ice:
			"####" # 0 
			{
				A_DVDSIceDeath(-2,0,1);
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (!CountInv("Pistol2",AAPTR_PLAYER1)) { A_DropItem("Pistol2",1,32); }
				}
			}
			POSS G 5 A_GenericFreezeDeath();
			POSS G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			POSS K 5;
			POSS JIH 5;
			goto See;
	}
}

// Plasma Specialist
class PlasmaGuy : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/Zombieman Type";
		Tag "Plasma Dude";

		dropitem "DoomSpellMana", 32;
		dropitem "DoomSpellMana", 8;
		DropItem "PlasmaRifle";
		DropItem "PlasmaRifle", 2;
		DropItem "PlasmaRifle", 2;
		DropItem "Cell", 4, 40;
		DropItem "Cell", 4, 40;
		DropItem "CellPack", 2, 100;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;

		Health 50;
		Radius 20;
		Height 56;
		Speed 8;
		Mass 100;
		MONSTER;
		+FLOORCLIP;
		SeeSound "grunt/sight";
		AttackSound "grunt/attack";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		Obituary "%o got burned by a plasma-rifle zombie.";
		MissileType "PlasmaBallMonster";

		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 166; // Zombies = +33% Pain Chance [maxed out in this case]
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 166; // Zombies = +33% Pain Chance

		Painchance 100;
		Painchance "Fist", 150; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 250; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 150; // Fist attacks have a +50% chance of stunning an enemy
		+AVOIDMELEE;
		+DOHARMSPECIES;
	}

	States
	{
		Spawn:
			ZMAY A 0 NoDelay;
			ZMAY AB 10 A_Look();
			goto Spawn+1;
		See:
			ZMAY A 0
			{
				user_shotsfired = 0;
			}
			ZMAY AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0;
			ZMAY E 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }

				user_shotsfiredmax = random(5,10);
				if (levelbehavior) { user_shotsfiredmax += random((user_monsterlevel/20),(user_monsterlevel/10)); }

				user_shotsfired = 0;
				user_attacktype = 0;
				if (levelbehavior)
				{
					if (user_monsterlevel > 180) { user_attacktype = randompick(0,0,0,1,1,1,1,1); }
					else if (user_monsterlevel > 135) { user_attacktype = randompick(0,0,0,0,1,1,1,1); }
					else if (user_monsterlevel > 90) { user_attacktype = randompick(0,0,0,0,0,1,1,1); }
					else if (user_monsterlevel > 45) { user_attacktype = randompick(0,0,0,0,0,0,1,1); }
					else { user_attacktype = randompick(0,0,0,0,0,0,0,1); }
				}
				A_FaceTarget();
			}
		Missile1:
			ZMAY F 3 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_MonsterCrisisCheck(); // Single Shot / Multiple Projectiles [Shotgun Style]
				if (user_attacktype == 0) 
				{ 
					A_CrisisSpawnProjectile("PlasmaBallMonster","PlasmaBallCrisis",32.0,0.0,0.0); 
					user_shotsfired += 1;
				}
				if (user_attacktype == 1) 
				{ 
					for (A_SetInventory("PlasmaBurstLevel",0); CountInv("PlasmaBurstLevel") < random(3,5); A_GiveInventory("PlasmaBurstLevel",1))
					{
						A_CrisisSpawnProjectile("PlasmaBallMonster","PlasmaBallCrisis",32.0,0.0,(0.5*random(-30,30)),CMF_OFFSETPITCH|CMF_BADPITCH,(0.5*random(-30,30))); 
					}
					user_shotsfired += 1;
				}

				A_FaceTarget();
			}
			TNT1 A 0 A_MonsterRefire(32,"See");
			TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax,"Decide1");
			loop;
		Decide1:
			TNT1 A 0 A_Jump(240,"See");
			TNT1 A 0 
			{
				user_shotsfiredmax = random(5,10);
				if (levelbehavior) { user_shotsfiredmax += random((user_monsterlevel/20),(user_monsterlevel/10)); }

				user_shotsfired = 0;
				A_FaceTarget();
			}
			goto Missile1;

		Pain:
			ZMAY G 3;
			ZMAY G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			ZMAY G 3;
			ZMAY G 3 A_DVDSPain();
			ZMAY GG 3;
			Goto See;
		Pain.Kick:
			ZMAY G 3;
			ZMAY G 3 A_DVDSPain();
			ZMAY GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			ZMAY H 5;
			ZMAY I 5 A_Scream();
			ZMAY J 5 A_Fall();
			ZMAY K 5;
			ZMAY L -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			ZMAY O 5;
			ZMAY P 5 A_XScream();
			ZMAY Q 5 A_Fall();
			ZMAY RSTU 5;
			ZMAY V -1;
			Stop;
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1);
			ZMAY G 5 A_GenericFreezeDeath();
			ZMAY G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			ZMAY K 5;
			ZMAY JIH 5;
			Goto See;
	}
}

// Rocket Commando
class RocketLauncherGuy : AetheriusMonsterZSC
{ 
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/Zombieman Type";
		Tag "Rocketeer Zombie";

		health 80;
		radius 20;
		height 56;
		Mass 100;
		speed 8;

		Painchance 170;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 255; // Fist attacks have a +50% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 226; // Zombies = +33% Pain Chance [maxed out in this case]
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 226; // Zombies = +33% Pain Chance
		MONSTER;
		+FLOORCLIP;
		+AVOIDMELEE;
		+DOHARMSPECIES;
		seesound "shotguy/sight";
		attacksound "shotguy/attack";
		painsound "shotguy/pain";
		deathsound "shotguy/death";
		activesound "shotguy/active";
		obituary "%o was 'sploded by a rocket-launcher guy.";

		dropitem "DoomSpellMana", 32;
		dropitem "DoomSpellMana", 8;
		dropitem "RocketLauncher";
		dropitem "RocketLauncher", 2;
		dropitem "RocketLauncher", 2;
		dropItem "RocketAmmo", 4, 1;
		dropItem "RocketAmmo", 4, 1;
		dropItem "RocketBox", 2, 5;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
	}

	States 
	{
		Spawn:
			MPO2 A 0 NoDelay;
			MPO2 AB 10 A_Look();
			goto Spawn+1;
		See:
			MPO2 A 0
			{
				user_shotsfired = 0;
			}
			MPO2 AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0;
			MPO2 E 10 
			{
				user_ammotype = random(1,2);
			
				user_shotsfired = 0;
				user_attacktype = 0;
				if (levelbehavior)
				{
					if (user_monsterlevel > 180) { user_attacktype = randompick(0,0,0,1,1,1,1,1); }
					else if (user_monsterlevel > 135) { user_attacktype = randompick(0,0,0,0,1,1,1,1); }
					else if (user_monsterlevel > 90) { user_attacktype = randompick(0,0,0,0,0,1,1,1); }
					else if (user_monsterlevel > 45) { user_attacktype = randompick(0,0,0,0,0,0,1,1); }
					else { user_attacktype = randompick(0,0,0,0,0,0,0,1); }
				}
				if (random(1,8) == 8) 
				{
					user_shotsfiredmax = 2; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/25); }
					if (user_attacktype == 1) { user_shotsfiredmax *= random(3,5); }
				}
				else 
				{
					user_shotsfiredmax = 1; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/50); }
					if (user_attacktype == 1) { user_shotsfiredmax *= random(3,5); }
				}

				if (user_attacktype == 1)
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(3); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }
					else { A_SetTics(3); }
				}
				else
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				}
				A_FaceTarget();
			}
		Missile1:
			MPO2 F 10 bright
			{
				if (user_attacktype == 1)
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(3); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }
					else { A_SetTics(3); }
				}
				else
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				}
	
				A_MonsterCrisisCheck(); // Single Projectile
				if (user_ammotype == 2) 
				{ 
					if (user_attacktype == 1) 
					{ 
						A_CrisisSpawnProjectile("STGrenadeMonster","STGrenadeCrisis",32.0,0.0,(0.5*random(-30,30)),CMF_OFFSETPITCH|CMF_BADPITCH,(0.5*random(-30,30))); 
					}
					else
					{
						A_CrisisSpawnProjectile("STGrenadeMonster","STGrenadeCrisis",32.0,0.0,0.0,CMF_OFFSETPITCH|CMF_BADPITCH,-9.4921875); 
					}
				}
				else 
				{ 
					if (user_attacktype == 1) 
					{ 
						A_CrisisSpawnProjectile("RocketMonster","RocketCrisis",32.0,0.0,(0.5*random(-15,15)),CMF_OFFSETPITCH|CMF_BADPITCH,(0.5*random(-15,15))); 
					}
					else
					{
						A_CrisisSpawnProjectile("RocketMonster","RocketCrisis"); 
					}
				}
	
				user_shotsfired += 1;
				A_FaceTarget();
			}
			MPO2 E 10 
			{
				if (user_attacktype == 1)
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(3); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }
					else { A_SetTics(3); }
				}
				else
				{
					if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
					else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
					else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
					else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				}
	
				A_FaceTarget();
			}
			TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax,"Decide1");
			loop;
		Decide1:
			TNT1 A 0 A_Jump(240,"See");
			TNT1 A 0 
			{
				if (random(1,8) == 8) 
				{
					user_shotsfiredmax = 2; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/25); }
				}
				else 
				{
					user_shotsfiredmax = 1; 
					if (levelbehavior) { user_shotsfiredmax += (user_monsterlevel/50); }
				}
				user_shotsfired = 0;
				A_FaceTarget();
			}
			goto Missile1;

		Pain:
			MPO2 G 3;
			MPO2 G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			MPO2 G 3;
			MPO2 G 3 A_DVDSPain();
			MPO2 GG 3;
			Goto See;
		Pain.Kick:
			MPO2 G 3;
			MPO2 G 3 A_DVDSPain();
			MPO2 GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			MPO2 H 5;
			MPO2 I 5 A_Scream();
			MPO2 J 5;
			MPO2 K 5 A_Fall();
			MPO2 L -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			MPO2 M 5;
			MPO2 N 5 A_XScream();
			MPO2 O 5;
			MPO2 P 5 A_Fall();
			MPO2 QRST 5;
			MPO2 U -1;
			Stop;
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1);
			MPO2 G 5 A_GenericFreezeDeath();
			MPO2 G 1 A_FreezeDeathChunks();
			wait;
		Raise: 
			MPO2 K 5;
			MPO2 JIH 5;
			Goto See;
	}
}

// Repeater Ranger
class RepeaterZombie : AetheriusMonsterZSC
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "DV-DS Monsters/Zombieman Type"

		dropitem "DoomSpellMana", 16;
		DropItem "RepeaterChecker", 256;
		DropItem "RepeaterChecker", 4;
		DropItem "RepeaterChecker", 4;
		DropItem "RepeaterChecker", 4;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;

		Health 100;
		Radius 20;
		Height 56;
		Speed 8;
		Mass 100;
		Monster;
		+AVOIDMELEE;
		+DOHARMSPECIES;
		+FLOORCLIP;
		SeeSound "Grunt/Sight";
		PainSound "Grunt/Pain";
		DeathSound "Grunt/Death";
		ActiveSound "Grunt/Active";
		Obituary "%o was vapourized by a Repeater Zombie";
		Decal "MummyScorch";
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 128; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 128; // Zombies = +33% Pain Chance
		PainChance 96;
		Painchance "Fist", 144; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 240; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 144; // Fist attacks have a +50% chance of stunning an enemy
		Tag "Repeater Guy";
	}
	
	States 
	{
		Spawn:
			RPZM A 0 NoDelay;
			RPZM A 0 A_JumpIfInventory("RepeaterZombieFiring", 1, "SpinDown");
			RPZM AAAAAAAAAABBBBBBBBBB 1 A_Look();
			goto Spawn+1;
		See:
			RPZM A 0;
			RPZM A 0 A_JumpIfInventory("RepeaterZombieFiring", 1, "SpinDown");
			RPZM AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			TNT1 A 0;
			TNT1 A 0 A_GiveInventory("RepeaterZombieFiring", 1);
			TNT1 A 0 A_StartSound("Weapons/RepeaterSpinUp",CHAN_7);
			RPZM EEFFEFEF 4 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				A_FaceTarget();
			}
		MissileLoop:
			RPZM G 2 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
	
				A_GiveInventory("RepeaterZombieHeat", 1);
				A_FaceTarget();
				A_StartSound("Weapons/RepeaterFire");
				A_MonsterCrisisCheck(); // Multiple Projectiles
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(20, 16, 2, random(1,3)*6, "RepeaterPuff", 0, 1);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieRepeaterTracer", "ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-8.0,8.0));
					A_CrisisSpawnProjectile("ZombieRepeaterTracer", "ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-8.0,8.0));
				}
			}
			RPZM G 0 A_JumpIfInventory("RepeaterZombieHeat", 100, "Overload");
			RPZM H 2 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				A_FaceTarget();
	
				A_StartSound("Weapons/RepeaterFire");
				A_MonsterCrisisCheck(); // Multiple Tracers
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(20, 16, 2, random(1,3)*6, "RepeaterPuff", 0, 1);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieRepeaterTracer", "ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-8.0,8.0));
					A_CrisisSpawnProjectile("ZombieRepeaterTracer", "ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-8.0,8.0));
				}
				A_GiveInventory("RepeaterZombieHeat", 1);
			}
			RPZM E 2 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				A_FaceTarget();
			}
			RPZM E 0 A_Jump(220, 2);
			RPZM E 0 A_SpidRefire();
			RPZM E 0 A_JumpIfInventory("RepeaterZombieHeat", 100, "Overload");
			loop;

		SpinDown:
			RPZM E 0 A_StartSound("Weapons/RepeaterSpinDown",CHAN_7);
			RPZM E 0 A_TakeInventory("RepeaterZombieFiring", 1);
			RPZM E 0 A_TakeInventory("RepeaterZombieHeat", 100);
			RPZM EFEFEEFF 4
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				A_FaceTarget();
			}
			Goto See;
		Overload:
			RPZM E 0 A_StartSound("Weapons/RepeaterSpinDown",CHAN_7);
			RPZM E 0 A_StartSound("RepeaterZombie/Steam",CHAN_WEAPON);
			RPZM E 0 A_TakeInventory("RepeaterZombieFiring", 1);
			RPZM E 0 A_TakeInventory("RepeaterZombieHeat", 100);
			RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEEFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEEFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEEFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128);
			Goto See;

		Pain:
			RPZM I 0
			{
				A_StopSound(CHAN_7);;
				if (CountInv("RepeaterZombieFiring") > 0) { A_StartSound("Weapons/RepeaterSpinDown",CHAN_7); }
				A_TakeInventory("RepeaterZombieFiring", 1);
				A_TakeInventory("RepeaterZombieHeat", 100);
			}
			RPZM I 3;
			RPZM I 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			RPZM I 0
			{
				A_StopSound(CHAN_7);;
				if (CountInv("RepeaterZombieFiring") > 0) { A_StartSound("Weapons/RepeaterSpinDown",CHAN_7); }
				A_TakeInventory("RepeaterZombieFiring", 1);
				A_TakeInventory("RepeaterZombieHeat", 100);
			}
			RPZM I 3;
			RPZM I 3 A_DVDSPain();
			RPZM II 3;
			Goto See;
		Pain.Kick:
			RPZM I 0
			{
				A_StopSound(CHAN_7);;
				if (CountInv("RepeaterZombieFiring") > 0) { A_StartSound("Weapons/RepeaterSpinDown",CHAN_7); }
				A_TakeInventory("RepeaterZombieFiring", 1);
				A_TakeInventory("RepeaterZombieHeat", 100);
			}
			RPZM I 3;
			RPZM I 3 A_DVDSPain();
			RPZM IIII 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			RPZM I 4 A_StopSound(CHAN_7);
			RPZM J 5;
			RPZM K 5 A_Scream();
			RPZM L 5 A_Fall();
			RPZM M 5;
			RPZM N -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			RPZM O 5 A_StopSound(CHAN_7);
			RPZM P 5 A_XScream();
			RPZM Q 5;
			RPZM R 5 A_Fall();
			RPZM STUV 5;
			RPZM W -1;
			Stop;
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1);
			RPZM I 5 A_GenericFreezeDeath();
			RPZM I 1 A_FreezeDeathChunks();
			wait;
		Raise: 
			RPZM N 5;
			RPZM MLKJI 5;
			Goto See;
	}
}

// Karasawa Specialist
class KarasawaGuy : AetheriusMonsterZSC
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "DV-DS Monsters/Zombieman Type";
		Tag "'Sawa Man";

		dropitem "DoomSpellMana", 16;
		dropItem "KarasawaChecker";
		dropitem "KarasawaChecker", 4;
		dropitem "KarasawaChecker", 4;
		dropitem "KarasawaChecker", 4;
		dropitem "BlurSphere2", 2;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 10, 20;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "CellPack", 2, 100;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;
		dropitem "MaxHealthBonus", 1;

		Health 150;
		Radius 20;
		Height 56;
		Speed 8;
		Mass 100;
		MONSTER;
		+FLOORCLIP;
		+AVOIDMELEE;
		SeeSound "grunt/sight";
		AttackSound "Weapons/KarasawaFire";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		Obituary "%o got ripped apart by a Karasawa zombie.";

		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Fire", 1.333; // Zombies = +33% Fire Damage
		Painchance "Fire", 93; // Zombies = +33% Pain Chance
		DamageFactor "Holy", 1.333; // Zombies = +33% Holy Damage
		Painchance "Holy", 93; // Zombies = +33% Pain Chance [maxed out in this case]

		PainChance 70;
		Painchance "Fist", 105; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 175; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Gauntlets", 105; // Fist attacks have a +50% chance of stunning an enemy
	}

	States
	{
		Spawn:
			KSWZ A 0 NoDelay;
			KSWZ AB 10 A_Look();
			goto Spawn+1;
		See:
			KSWZ A 0;
			KSWZ AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
				
				user_pulseinterval += 1;
				if (user_pulseinterval >= 4)
				{
					A_StartSound("Weapons/KarasawaIdle",0,1.0);
					user_pulseinterval = 0;
				}
			}
			Loop;

		Missile:
			TNT1 A 0;
			KSWZ E 0
			{
				A_FaceTarget();
				user_shotangle = 0;
				if (random(1,2) == 1)
				{
					user_shotangle = 0;
				}
				else
				{
					if (Distance3D(target) <= 512)
					{
						if (random(1,4) == 1)
						{
							user_shotangle = 0;
						}
						else
						{
							if (random(1,2) == 1) { user_shotangle = -8; } else { user_shotangle = 8; }
						}
					}
				}
			}
			KSWZ E 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
			}
			KSWZ F 10 Bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_StartSound("Weapons/KarasawaFire",CHAN_WEAPON);
				A_MonsterCrisisCheck(); // Single Projectile
				A_CrisisSpawnProjectile("KsawBolt", "KsawBoltCrisis", 32, 1, user_shotangle, 0);
			}
			KSWZ E 3 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
			}
			KSWZ E 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_StartSound("Weapons/KarasawaCharge");
			}
			KSWZ AABBCCDD 4
			{
				if (levelbehavior && user_monsterlevel > 120) { bAVOIDMELEE = true; A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSWander(0,1,3,1,1);
			}
			Goto See;

		Pain:
			KSWZ G 3;
			KSWZ G 3 A_DVDSPain();
			Goto See;
		Pain.Fist:
			KSWZ G 3;
			KSWZ G 3 A_DVDSPain();
			KSWZ GG 3;
			Goto See;
		Pain.Kick:
			KSWZ G 3;
			KSWZ G 3 A_DVDSPain();
			KSWZ GGGG 3;
			Goto See;

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			KSWZ H 5;
			KSWZ I 5 A_Scream;
			KSWZ J 5 A_Fall;
			KSWZ K 5;
			KSWZ L 5;
			KSWZ M 5;
			KSWZ N -1;
			Stop;
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1);
			KSWZ O 5;
			KSWZ P 5 A_XScream;
			KSWZ Q 5 A_Fall;
			KSWZ RSTUV 5;
			KSWZ W -1;
			Stop;
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1);
			KSWZ G 5 A_GenericFreezeDeath();
			KSWZ G 1 A_FreezeDeathChunks();
			wait;
		Raise:
			KSWZ N 5;
			KSWZ MLKJIH 5;
			Goto See;
	}
}
//*******************
//* Gibs [Overlord] *
//*******************
class OverFlesh1 : AetheriusCustomGib
{
	default
	{
		Speed 8;
		Mass 100;
		Radius 1;
		Height 1;
		PROJECTILE;
		+LOWGRAVITY;
		-NOGRAVITY;
	}
	
	States
	{
		Spawn:
			OVF1 ACEGIKM 5;
			loop;
		Death:
			OVF1 O 3;
			OVF1 Q 350;
			stop;
	}
}

class OverFlesh2 : OverFlesh1
{
	States
	{
		Spawn:
			OVF1 BDFHJLN 5;
			loop;
		Death:
			OVF1 P 3;
			OVF1 R 350;
			stop;
	}
}

class OverFlesh3 : OverFlesh1
{
	States
	{
		Spawn:
			OVF2 ACEG 5;
			loop;
		Death:
			OVF2 I 350;
			stop;
	}
}

class OverFlesh4 : OverFlesh1
{
	States
	{
		Spawn:
			OVF2 BDFH 5;
			loop;
		Death:
			OVF2 J 350;
			stop;
	}
}

class OverFlesh5 : OverFlesh1
{
	States
	{
		Spawn:
			OVF3 ACEGI 5;
			loop;
		Death:
			OVF3 K 350;
			stop;
	}
}

class OverFlesh6 : OverFlesh1
{
	States
	{
		Spawn:
			OVF3 BDFHJ 5;
			loop;
		Death:
			OVF3 L 350;
			stop;
	}
}

class OverBigArm1 : OverFlesh1
{
	States
	{
		Spawn:
			OVF4 ACEGI 5;
			loop;
		Death:
			OVF4 K 3;
			OVF4 M 350;
			stop;
	}
}

class OverBigArm2 : OverFlesh1
{
	States
	{
		Spawn:
			OVF4 BDFHJ 5;
			loop;
		Death:
			OVF4 L 3;
			OVF4 N 350;
			stop;
	}
}

class OverSmallArm1 : OverFlesh1
{
	States
	{
		Spawn:
			OVF5 ACEG 5;
			loop;
		Death:
			OVF5 I 350;
			stop;
	}
}

class OverSmallArm2 : OverFlesh1
{
	States
	{
		Spawn:
			OVF5 BDFH 5;
			loop;
		Death:
			OVF5 J 350;
			stop;
	}
}

class OverHorn1 : OverFlesh1
{
	States
	{
		Spawn:
			OVF6 ACEGI 5;
			loop;
		Death:
			OVF6 K 350;
			stop;
	}
}

class OverHorn2 : OverFlesh1
{
	States
	{
		Spawn:
			OVF6 BDFHJ 5;
			loop;
		Death:
			OVF6 L 350;
			stop; 
	}
}

//--------------------------------------------------------------
//Thanks to Combine Kegan for going through the trouble of defining these o.o
//These were taken from GMOTA v1.2's DECORATE code - Misfit

//BONE GIBS
//Ripped from Castlevania Bloodlines
class bonegib : AetheriusCustomGib
{
	default
	{
		+notimefreeze;
		+cannotpush;
		+movewithsector;
		+dontsplash;
		+noblockmap;
		+missile;
		+doombounce;
		+thruactors;
		+dontblast;
		-nogravity;
		+FORCEXYBILLBOARD;
		+LOOKALLAROUND;
		+bounceonactors;
		+randomize;
		+clientsideonly;
		Seesound "gibs/bones";
		Scale 1;
		Gravity 1.2 ;
		Bouncecount 3;
		Bouncefactor 0.45;
		Speed 5;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			BNGB ABCD 2;
			loop;
		Death:
			BNGB C 300;
			BNGB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
    }
}

class brownbonegib : bonegib
{
	default
	{
		scale 0.8;
	}
	
	states
	{
		Spawn:
			BBGB EFGH 2;
			loop;
		Death:
			BBGB G 150;
			BBGB GGGGGGGGGG 2 A_Fadeout(0.1);
			stop;
	}
}

class quickbonegib : bonegib
{
	default
	{
		translation "0:255=%[0,0,0]:[1,1,1]";
		scale 0.8;
	}
	states
	{
		Spawn:
			BNGB ABCD 2;
			loop;
		Death:
			BNGB C 150;
			BNGB CCCC 5 A_Fadeout(0.25);
			stop;
	}
}

class bonespray : AetheriusCustomGib
{
	states
	{
		spawn:
			TNT1 A 0 a_spawnitemex ("quickbonegib", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 a_spawnitemex ("quickbonegib", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 a_spawnitemex ("quickbonegib", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class brownbonespray : AetheriusCustomGib
{
	states
	{
		spawn:
			TNT1 A 0 a_spawnitemex ("brownbonegib", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 a_spawnitemex ("brownbonegib", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 a_spawnitemex ("brownbonegib", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class goldbonespray : AetheriusCustomGib
{
	states
	{
		spawn:
			TNT1 A 0 a_spawnitemex ("goldbones", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 a_spawnitemex ("goldbones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 a_spawnitemex ("goldbones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class minibonespray : AetheriusCustomGib
{
	states
	{
		spawn:
			TNT1 A 0 a_spawnitemex ("minibones", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 a_spawnitemex ("minibones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 a_spawnitemex ("minibones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class blackbonespray : AetheriusCustomGib
{
	default
	{
		+bright;
		scale 1.4;
	}
	
	states
	{
		spawn:
			TNT1 A 0 A_Spawnitemex("blackbones", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 A_Spawnitemex("blackbones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 A_Spawnitemex("blackbones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class blackbones : bonegib
{
	states
	{
		spawn:
			BBGB ABCD 2;
			loop;
		death:
			BBGB C 300;
			BBGB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
	}
}

class goldbones : bonegib
{
	default
	{
		scale 0.55;
	}
	states
	{
		spawn:
			GBGB ABCD 2;
			loop;
		death:
			GBGB C 300;
			GBGB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
	}
}

class goldhipbone : bonegib
{
	default
	{
		scale 0.55;
	}
	states
	{
		spawn:
			GHGB ABCD 2;
			loop;
		death:
			GHGB C 300;
			GHGB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
	}
}

class goldribcage : bonegib
{
	default
	{
		scale 0.55;
	}
	states
	{
		spawn:
			GRIB ABCD 2;
			loop;
		death:
			GRIB C 300;
			GRIB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
	}
}

class brownhipbone : bonegib
{
	states
	{
		spawn:
			BHGB EFGH 2;
			loop;
		death:
			BHGB E 300;
			BHGB EEEEEEEE 5 A_Fadeout(0.125);
			stop;
	}
}

class hipbonegib : bonegib
{
	states
	{
		spawn:
			BNGH ABCD 2;
			loop;
		death:
			BNGH A 300;
			BNGH AAAAAAAA 5 A_Fadeout(0.125);
			stop;
	}
}

class brownribbone : bonegib
{
	states
	{
		spawn:
			BRGB EFGH 2;
			loop;
		Death:
			BRGB E 300;
			BRGB EEEEEEEE 5 A_Fadeout(0.125);
			stop;
	}
}

class ribbonegib : bonegib
{
	states
	{
		Spawn:
			BNGR ABCD 2;
			loop;
		Death:
			BNGR A 300;
			BNGR AAAAAAAA 5 A_Fadeout(0.125);
			stop;
	}
}


//Mini bones
//used for mini boners
class minibones : bonegib
{
	default
	{
		Scale 0.55;
	}
}	

class minihipbone : bonegib
{
	default
	{
		Scale 0.55;
	}
	states
	{
		Spawn:
			BNGH ABCD 2;
			loop;
		Death:
			BNGH A 300;
			BNGH AAAAAAAA 5 A_Fadeout(0.125);
			stop;
	}
}

class miniribbone : bonegib
{
	default
	{
		Scale 0.55;
	}
	
	states
	{
		Spawn:
			BNGR ABCD 2;
			loop;
		Death:
			BNGR A 300;
			BNGR AAAAAAAA 5 A_Fadeout(0.125);
			stop;
	}
}
//**********************************
// Steam/Trails/etc for Projectiles*
//**********************************

// Fusion Arachnotron Trail
class FusionTrail : AetheriusBaseZSC
{
	default
	{
		Radius 4;
		Height 8;
		Speed 0;
		Damage 0;
		RenderStyle "Add";
		PROJECTILE;
	}
	
	states
	{
		Spawn:
			TNT0 A 2;
			FS03 FG 6 BRIGHT A_FadeOut();
			Stop;
	}
}

// Daedabus Trail
class DaedTrail : AetheriusBaseZSC
{
	default
	{
		Scale 0.65;
		RenderStyle "Add";
		Alpha 0.5;
		+NOGRAVITY;
		+NOBLOCKMAP;
		+NOINTERACTION;
	}
	
	States
	{
		Spawn:
			DAET ABCDE 2 Bright;
			Stop;
	}
}

// Diabloist Flare
class MFlareFX : AetheriusBaseZSC
{  
	default
	{
		Radius 0;
		Height 1;
		Speed 0;
		PROJECTILE;
		RenderStyle "Add";
		ALPHA 0.67;
	}
	
	States
	{
		Spawn:
			FDFX ABCDEF 4 Bright;
			Stop;
	}
}

// Diabloist Gravity Glitter
class DiabloistHPGlitter : TeleGlitterGenerator1
{
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx("TeleGlitter1", random[TeleGlitter](0,31)-16,random[TeleGlitter](0,31)-16,0, 0,0,0.25, SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx("TeleGlitter1", random[TeleGlitter](0,31)-16,random[TeleGlitter](0,31)-16,0, 0,0,0.25, SXF_NOCHECKPOSITION,0);
			Stop;
	}
}

class DiabloistManaGlitter : TeleGlitterGenerator2
{
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx("TeleGlitter2", random[TeleGlitter](0,31)-16,random[TeleGlitter](0,31)-16,0, 0,0,0.25, SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx("TeleGlitter2", random[TeleGlitter](0,31)-16,random[TeleGlitter](0,31)-16,0, 0,0,0.25, SXF_NOCHECKPOSITION,0);
			Stop;
	}
}

// Diabloist Missile Trail
class DMissileTrail : CFlameFloor { }

// Bruiser Demon Ball 1 Trail
class BruiserBallTrail : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		Speed 0;
		PROJECTILE;
		RenderStyle "Add";
		ALPHA 0.70;
		+NOCLIP;
	}
	
	States
	{
		Spawn:
			BRBA CDEFGHIJ 4 Bright;
			Stop;
	}
}

// Archon of Hell Soul [death animation]
class ArchonASoul : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		Speed 3;
		PROJECTILE;
		RenderStyle "Add";
		ALPHA 0.80;
	}
	States
	{
		Spawn:
			BFX1 ABCD 6 BRIGHT;
			Stop;
	}
}

// Archon Comet Trail
class ArchonCometTrail : AetheriusBaseZSC
{
	default
	{
		Radius 3;
		Height 3;
		scale 0.75;
		Speed 0;
		PROJECTILE;
		RenderStyle "Add";
		ALPHA 0.67;
	}
	
	States
	{
		Spawn:
			TNT1 A 3 Bright;
			ARCB DEFGHI 3 BRIGHT;
			Stop;
	}
}

// Pyro Demon Fire Tail
class FireTail : AetheriusBaseZSC
{
	default
	{
		PROJECTILE;
		RenderStyle "Add";
		+NOCLIP;
		ALPHA 0.4;
	}
	
	States
	{
		Spawn:
			FRTB ABCDEFGHI 1 Bright;
			Stop;
	}
}

// Pyro Demon Comet Death Glow
class CometDeathGlow : FireTail
{
	default
	{
		Scale 2.0;
		Alpha 0.6;
	}
	
	States
	{
		Spawn:
			FRTB ABCDEFGHI 3 Bright;
			Stop;
	}
}

// Pyro Demon Walking Fire
class WalkFire : AetheriusBaseZSC
{
	default
	{
		DamageType "Fire";
		+NOCLIP;
		+MISSILE;
		+DROPOFF;
		+RANDOMIZE;
		scale 1.5;
		Speed 1;
		RenderStyle "Add";
		ALPHA 0.67;
	}
	
	States
	{
		Spawn:
			TNT1 A 8;
			FRTF A 3 Bright;
			FRTF B 3 Bright;
			FRTF C 3 Bright;
			FRTF C 0
			{
				if (A_CheckRange(1024,"Null")) { } else 
				{
					if (random(1,8) <= 2)
					{
						if (GetCVar("dvds_gfxeffectlevel") == 0)
						{
							A_SpawnProjectile("WalkFire2", 0, 24, 0);
							A_SpawnProjectile("WalkFire2", 0, 0, 0);
							A_SpawnProjectile("WalkFire2", 0, -24, 0);
						}
						else
						if (GetCVar("dvds_gfxeffectlevel") == 1)
						{
							A_SpawnProjectile("WalkFire2", 0, 0, 0);
						}
					}
				}
			}
			FRTF DEFGHIJKLMNO 3 Bright;
			Stop;
	}
}
class WalkFire2 : WalkFire
{
	default
	{
		DamageType "Fire";
		+NOCLIP;
		+MISSILE;
		+DROPOFF;
		+RANDOMIZE;
		scale 1.5;
		Speed 1;
		RenderStyle "Add";
		ALPHA 0.67;
	}
	
	States
	{
		Spawn:
			TNT1 A 8
			{
				A_SetScale(frandom(1.25,1.5),frandom(1.25,1.5));
			}
			FRTF ABCDEFGHIJKLMNO 3 Bright;
			Stop;
	}
}

// CyBruiser Rocket Trail
class CyBruiserTrail : AetheriusBaseZSC
{
	default
	{
		Radius 3;
		Height 3;
		RenderStyle "Translucent";
		Alpha 0.67;
		Projectile;
	}
	
	States
	{
		Spawn:
			TNT1 A 3 Bright;
			PUFF ABCD 4 BRIGHT;
			Stop;
	}
}

// Hierophant
class CurseTrail : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		Projectile;
		+ForceXYBillBoard;
		RenderStyle "Add";
		Alpha 0.80;
	}
	
	States
	{
		Spawn:
			TNT1 A 3;
			CURS JLMNOPR 3 Bright;
			Stop;
	}
}

class HieroFX : AetheriusBaseZSC
{
	default
	{
		Radius 2;
		Height 2;
		+NoGravity;
		+NoBlockMap;
		RenderStyle "Translucent";
		Scale 1.0;
		Alpha 0.80;
	}
	
	States
	{
		Spawn:
			TNT1 A 3;
			HIER A 5 A_FadeOut(0.10);
			Goto Spawn+1;
	}
}

//**************
// Mana Glitter*
//**************
class ManaGlitter : AetheriusBaseTeleGlitter
{
	default
	{
		+NOINTERACTION;
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 6 A_SetTics(random(4,6));
		Travel:
			TGLT FGHIJ 2 Bright
			{
				A_FadeOut(0.075,FTF_REMOVE);
				A_SetScale(scale.x-0.075,scale.y-0.075);
			}
			stop;
	}
}

// Glitter Particles to emit from Flora's Armor
class ArmorGlitter : AetheriusBaseTeleGlitter // White Glitter
{
	default
	{
		+NOINTERACTION;
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 6 A_SetTics(random(4,6));
		Travel:
			TGLT PQRST 2 Bright
			{
				A_FadeOut(0.075,FTF_REMOVE);
				A_SetScale(scale.x-0.075,scale.y-0.075);
			}
			stop;
	}
}

class ArmorGlitter2 : AetheriusBaseTeleGlitter // Red Glitter [Cursed]
{
	default
	{
		+NOINTERACTION;
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 6 A_SetTics(random(4,6));
		Travel:
			TGLT ABCDE 2 Bright
			{
				A_FadeOut(0.075,FTF_REMOVE);
				A_SetScale(scale.x-0.075,scale.y-0.075);
			}
			stop;
	}
}

class ArmorGlitter3 : AetheriusBaseTeleGlitter // Pink Glitter [Max HP Bonus]
{
	default
	{
		+NOINTERACTION;
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 6 A_SetTics(random(4,6));
		Travel:
			TGLT FGHIJ 2 Bright
			{
				A_FadeOut(0.075,FTF_REMOVE);
				A_SetScale(scale.x-0.075,scale.y-0.075);
			}
			stop;
	}
}

// Dash Effects
class DashPuff : PhoenixPuff { default { +NOINTERACTION } }

// Tension Effects
class TensionParticle1 : CrossbowFX4Base
{
	default
	{
		VSpeed 3;
		Height 1;
		Radius 1;
		-SOLID;
		+NOINTERACTION;
		+NOBLOCKMAP;
		+NOGRAVITY;
		+NOTELESTOMP;
		RenderStyle "Add";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 0 A_JumpIf(TensionLevel == 0,"ScaleCheck0");
			TNT1 A 0 A_JumpIf(TensionLevel == 1,"ScaleCheck5");
			TNT1 A 0 A_JumpIf(TensionLevel == 2,"ScaleCheck20");
			TNT1 A 0 A_JumpIf(TensionLevel == 3,"ScaleCheck50");
			TNT1 A 0 A_JumpIf(TensionLevel == 4,"ScaleCheck100");
			TNT1 A 0 A_JumpIf(TensionLevel == 5,"ScaleCheck250");
			TNT1 A 0 A_JumpIf(TensionLevel == 6,"ScaleCheck500");
			TNT1 A 0 A_JumpIf(TensionLevel == 7,"ScaleCheck1000");
			goto ScaleCheck0;

		ScaleCheck0: // "0"
			TNT1 A 0 A_SetScale(frandom(0.21,0.32),frandom(0.21,0.32));
			goto Animate;

		ScaleCheck5: // "5"
			TNT1 A 0 A_SetScale(frandom(0.27,0.38),frandom(0.27,0.38));
			goto Animate;

		ScaleCheck20: // "20"
			TNT1 A 0 A_SetScale(frandom(0.33,0.45),frandom(0.33,0.45));
			goto Animate;

		ScaleCheck50: // "50"
			TNT1 A 0 A_SetScale(frandom(0.39,0.51),frandom(0.39,0.51));
			goto Animate;

		ScaleCheck100: // "100"
			TNT1 A 0 A_SetScale(frandom(0.46,0.58),frandom(0.46,0.58));
			goto Animate;

		ScaleCheck250: // "250"
			TNT1 A 0 A_SetScale(frandom(0.53,0.65),frandom(0.53,0.65));
			goto Animate;

		ScaleCheck500: // "500"
			TNT1 A 0 A_SetScale(frandom(0.60,0.73),frandom(0.60,0.73));
			goto Animate;

		ScaleCheck1000: // "1000"
			TNT1 A 0 A_SetScale(frandom(0.68,0.81),frandom(0.68,0.81));
			goto Animate;

		Animate:
			TNGT ABABCDCDCD 4 Bright A_FadeOut(0.10,FTF_REMOVE);
			Stop;
	}
}

class TensionParticle2 : CrossbowFX4Base
{
	default
	{
		VSpeed 3;
		Height 1;
		Radius 1;
		-SOLID;
		+NOINTERACTION;
		+NOBLOCKMAP;
		+NOGRAVITY;
		+NOTELESTOMP;
		RenderStyle "Add";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 0 A_JumpIf(TensionLevel == 0,"ScaleCheck0");
			TNT1 A 0 A_JumpIf(TensionLevel == 1,"ScaleCheck5");
			TNT1 A 0 A_JumpIf(TensionLevel == 2,"ScaleCheck20");
			TNT1 A 0 A_JumpIf(TensionLevel == 3,"ScaleCheck50");
			TNT1 A 0 A_JumpIf(TensionLevel == 4,"ScaleCheck100");
			TNT1 A 0 A_JumpIf(TensionLevel == 5,"ScaleCheck250");
			TNT1 A 0 A_JumpIf(TensionLevel == 6,"ScaleCheck500");
			TNT1 A 0 A_JumpIf(TensionLevel == 7,"ScaleCheck1000");
			goto ScaleCheck0;

		ScaleCheck0: // "0"
			TNT1 A 0 A_SetScale(frandom(0.21,0.32),frandom(0.21,0.32));
			goto Animate;

		ScaleCheck5: // "5"
			TNT1 A 0 A_SetScale(frandom(0.27,0.38),frandom(0.27,0.38));
			goto Animate;

		ScaleCheck20: // "20"
			TNT1 A 0 A_SetScale(frandom(0.33,0.45),frandom(0.33,0.45));
			goto Animate;

		ScaleCheck50: // "50"
			TNT1 A 0 A_SetScale(frandom(0.39,0.51),frandom(0.39,0.51));
			goto Animate;

		ScaleCheck100: // "100"
			TNT1 A 0 A_SetScale(frandom(0.46,0.58),frandom(0.46,0.58));
			goto Animate;

		ScaleCheck250: // "250"
			TNT1 A 0 A_SetScale(frandom(0.53,0.65),frandom(0.53,0.65));
			goto Animate;

		ScaleCheck500: // "500"
			TNT1 A 0 A_SetScale(frandom(0.60,0.73),frandom(0.60,0.73));
			goto Animate;

		ScaleCheck1000: // "1000"
			TNT1 A 0 A_SetScale(frandom(0.68,0.81),frandom(0.68,0.81));
			goto Animate;

		Animate:
			TNGT EFEFGHGH 4 Bright A_FadeOut(0.10,FTF_REMOVE);
			Stop;
	}
}

class TensionParticleGenerator : CrossbowFX4Base
{
	int user_particlechance;
	default
	{
		-SOLID;
		+NOBLOCKMAP;
		+NOINTERACTION;
		+NOGRAVITY;
		+NOTELESTOMP;
		+MISSILE;
		Speed 1;
		Height 1;
		Radius 1;
	}
	
	States
	{
		Spawn:
			TNT1 A 0 Bright NoDelay;
			TNT1 A 0 Bright 
			{
				if (TensionLevel == 0) { user_particlechance = 224; } // 224
				if (TensionLevel == 1) { user_particlechance = 220; } // 220
				if (TensionLevel == 2) { user_particlechance = 215; } // 215
				if (TensionLevel == 3) { user_particlechance = 209; } // 209
				if (TensionLevel == 4) { user_particlechance = 195; } // 195
				if (TensionLevel == 5) { user_particlechance = 187; } // 187
				if (TensionLevel == 6) { user_particlechance = 176; } // 176
				if (TensionLevel == 7) { user_particlechance = 156; } // 156
				user_particlechance *= 0.8;
				A_SpawnItemEx("TensionParticle1",random(-13,13),random(-13,13),random(1,9),frandom(-1.4,1.4),frandom(-1.4,1.4),frandom(1.6,2.8),0,SXF_NOCHECKPOSITION,user_particlechance);
				A_SpawnItemEx("TensionParticle1",random(-13,13),random(-13,13),random(1,9),frandom(-1.4,1.4),frandom(-1.4,1.4),frandom(1.6,2.8),0,SXF_NOCHECKPOSITION,user_particlechance);
			}
			TNT1 A 1 Bright { if (random(1,36384) == 1) { A_AlertMonsters(); } } // 1 out of 36834 chance of a particle spawner alerting monsters
		Death:
			TNT1 A 0;
			stop;
	}
}

// Cyber Stomps
class ExplosionSmoke : AetheriusBaseZSC
{
	default
	{
		+NOBLOCKMAP;
		+NOTELEPORT;
		+DONTSPLASH;
		+MISSILE;
		+FORCEXYBILLBOARD;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
		+NOGRAVITY;
		+DOOMBOUNCE;
		+THRUACTORS;
		Health 99999;
		BounceFactor 0.5;
		Radius 0;
		Height 0;
		Alpha 0.1;
		RenderStyle "Translucent";
		Scale 1.1;
		Speed 1;
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(waterlevel > 1, "Stap");
			SMK3 BBB 2 A_FadeIn(0.1);
			SMK3 B 20;
			TNT1 A 0 A_JumpIf(waterlevel > 1, "Stap");
			SMK3 CDEFGHIJKLM 3;
			Goto Death;
		Death:
			TNT1 A 0;
			Stop;
		Stap:
			TNT1 A 0;
			Stop;
	}
}

class BigSmokes : ExplosionSmoke
{
	default
	{
		Speed 1;
		Alpha 0.1;
		Scale 1.5;
	}
	
	States
	{
		Spawn:
			SMOK A 0;
			Goto Death;
		Death:
			SMK3 B 100;
			SMK3 CDEFGHIJKLM 1;
			Stop;
	}
}


class FootStep : AetheriusProjectileZSC
{
	default
	{
		Radius 10;
		Height 10;
		Speed 7;
		Projectile;
		-NOGRAVITY;
		+MISSILE;
		+NOTELEPORT;
		+CLIENTSIDEONLY;
		+MOVEWITHSECTOR;
		+NOEXTREMEDEATH;
		DamageType "Trample";
		Damage 0;
		+NODAMAGETHRUST;
		+BLOODLESSIMPACT;
		+THRUACTORS;
		gravity 40;
		mass 1000;
		Obituary "%o was trampled by %k.";
	}
	
	States
	{
		Spawn:
			TNT1 A 2;
			TNT1 A 1; //A_Explode(10,4,0);
			stop;
		Death:
			TNT1 A 1;
			TNT1 A 1; //A_Explode(10,4,0);
			Stop;
		Crash:
			TNT1 A 1;
			TNT1 A 1; //A_Explode(10,4,0);
			stop;
	}
}

class Footstep5 : FootStep
{
	default
	{
		Damage 0;
		-CLIENTSIDEONLY;
		Obituary "%o was stomped on by the Cyberdemon.";
	}
}

class Footstep6 : FootStep
{
	default
	{
		DamageFunction (random (2, 3));
		-CLIENTSIDEONLY;
		-DONTSPLASH;
		-EXPLODEONWATER;
		mass 500;
		Obituary "%o was stomped on by the Cyberdemon.";
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 1; //A_Explode(10,4,0);
			TNT1 A 3;
			Goto Death;
		Death:
			TNT1 A 1;
			TNT1 A 1; //A_Explode(10,4,0);
			TNT1 A 6;
			Stop;
		Crash:
			TNT1 A 1;
			TNT1 A 1; //A_Explode(10,4,0);
			TNT1 A 6;
			stop;
	}
}

class WallChunk : AetheriusBaseZSC
{
	default
	{
		Scale 0.16;
		+noteleport;
		+missile;
		+bounceonactors;
		+doombounce;
		+forcexybillboard;
		+CLIENTSIDEONLY;
		Speed 6;
		Gravity 0.7;
		bouncefactor 0.2;
		height 1;
		radius 1;
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
		See:
			TNT1 A 0
			{
				user_random1 = random(1,4);
				if (user_random1 == 1) { return resolvestate("See1"); }
				if (user_random1 == 2) { return resolvestate("See2"); }
				if (user_random1 == 3) { return resolvestate("See3"); }
				if (user_random1 == 4) { return resolvestate("See4"); }
				return resolvestate(null);
			}
		See1:
			DUST A 1;
			loop;
		See2:
			DUST B 1;
			loop;
		See3:
			DUST C 1;
			loop;
		See4:
			DUST D 1;
			loop;
		Death:
			TNT1 A 0 
			{
				bBOUNCEONACTORS = false;
				bMISSILE = false;
			}
			TNT1 A 0
			{
				if (user_random1 == 1) { return resolvestate("Death1"); }
				if (user_random1 == 2) { return resolvestate("Death2"); }
				if (user_random1 == 3) { return resolvestate("Death3"); }
				if (user_random1 == 4) { return resolvestate("Death4"); }
				return resolvestate(null);
			}
		Death1:
			DUST A 100;
			Stop;
		Death2:
			DUST B 100;
			Stop;
		Death3:
			DUST C 100;
			Stop;
		Death4:
			DUST D 100;
			Stop;
	}
}
class TinyWallChunk : WallChunk
{
	default
	{
		Scale 0.12;
	}
}
class BigWallChunk : WallChunk
{
	default
	{
		Scale 0.3;
	}
}
class HugeWallChunk : WallChunk
{
	default
	{
		Scale 0.4;
	}
}

class DirtChunk1 : WallChunk
{
	default
	{
		Scale 0.6;
		Speed 16;
		BounceFactor 0.5;
		Translation "128:151=74:79", "96:111=71:79";
	}
}

class DirtChunk2 : WallChunk
{
	default
	{
		Scale 0.4;
		Speed 12;
		BounceFactor 0.3;
		Translation "128:151=74:79", "96:111=71:79";
	}
}

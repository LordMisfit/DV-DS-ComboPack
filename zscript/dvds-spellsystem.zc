//*********
//* Bases *
//*********

// Raging Spirits
class RagingSpiritBase : HolySpiritBase
{
	default
	{
		Tag "Minor Raging Spirit";
		DamageType "Magic";
		DamageType "Holy";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+THRUSPECIES;
		+MTHRUSPECIES;
		+DONTREFLECT;
		species "Players";
		MeleeDamage 2; // ((2 + random(0,2)) * random(1,8) * random(2,3)) // 4 to 96 damage per hit
		Health 2000;
		Mass 2000;
		
		//CLEARFLAGS;
		+SPECTRAL;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SEEKERMISSILE;
		+FOILINVUL;
		+SKYEXPLODE;
		+NOEXPLODEFLOOR;
		+CANBLAST;
		+EXTREMEDEATH;
		+NOBLOCKMONST;
		+FRIENDLY;
		-SOLID;
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 0 A_JumpIfInventory("SpreaderAura2",1,"Spreader2", AAPTR_PLAYER1);
			TNT1 A 0 A_JumpIfInventory("SpreaderAura1",1,"Spreader1", AAPTR_PLAYER1);
		Normal:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader1:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader2:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Death:
			goto Spawn+1;
	}
}

class RagingSpirit2Base : HolySpiritBase
{
	default
	{
		Tag "Raging Spirit";
		DamageType "Magic";
		DamageType "Holy";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+THRUSPECIES;
		+MTHRUSPECIES;
		+DONTREFLECT;
		species "Players";
		MeleeDamage 2; // ((2 + random(0,2)) * random(1,8) * random(2,3)) // 4 to 96 damage per hit
		Health 2000;
		
		//CLEARFLAGS;
		+SPECTRAL;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SEEKERMISSILE;
		+FOILINVUL;
		+SKYEXPLODE;
		+NOEXPLODEFLOOR;
		+CANBLAST;
		+EXTREMEDEATH;
		+NOBLOCKMONST;
		+FRIENDLY;
		-SOLID;
		Mass 2000;
	}

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("SpreaderAura2",1,"Spreader2", AAPTR_PLAYER1);
			TNT1 A 0 A_JumpIfInventory("SpreaderAura1",1,"Spreader1", AAPTR_PLAYER1);
		Normal:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader1:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader2:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Death:
			goto Spawn+1;
	}
}

class ExplodingGlyphBase : AetheriusProjectileZSC
{
	default
	{
		Tag "Exploding Glyph";
		DamageType "Magic";
		+FLOORCLIP;
		+THRUSPECIES;
		+MTHRUSPECIES;
		species "Players";
		MONSTER;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FRIENDLY;
		-SHOOTABLE;
		-SOLID;
		+SPECTRAL;
		+DONTREFLECT;
		Radius 1;
		Height 1;
		Speed 0;
		Scale 0.2;
		ExplosionDamage 100;
		ExplosionRadius 64;
	}

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("SpreaderAura2",1,"Spreader2", AAPTR_PLAYER1);
			TNT1 A 0 A_JumpIfInventory("SpreaderAura1",1,"Spreader1", AAPTR_PLAYER1);
		Normal:
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader1:
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader2:
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle+2.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle+2.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle-2.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle-2.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Death:
			goto Spawn+1;
	}
}

class FreezingGlyphBase : ExplodingGlyphBase
{
	default
	{
		Tag "Freezing Glyph";
		DamageType "Magic";
		DamageType "Ice";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+THRUSPECIES;
		+MTHRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
	}

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("SpreaderAura2",1,"Spreader2", AAPTR_PLAYER1);
			TNT1 A 0 A_JumpIfInventory("SpreaderAura1",1,"Spreader1", AAPTR_PLAYER1);
		Normal:
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader1:
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader2:
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Death:
			goto Spawn+1;
	}
}

//*************
//* Non Bases *
//*************
//* Magic Missiles
//*****************
// Minor Magic Missile
class MinorMagicMissile : AetheriusDoomSpellZSC // : SerpentFX
{
	default
	{
		Tag "Minor Magic Missile";
		Speed 16;
		Radius 2;
		Height 2;
		DamageFunction (4 + random(-1,1)); // 3-5
		Projectile;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		RenderStyle "Add";

		DamageType "Magic";
		+FLOORCLIP;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+HITTRACER;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		seesound "mmissilelaunch";
		deathsound "mmissileimpact";

		+BOUNCEONWALLS;
		+BOUNCEONFLOORS;
		+BOUNCEONCEILINGS;
		+BOUNCEONACTORS;
		+NOBOUNCESOUND;
		+EXPLODEONWATER;
		+DONTBOUNCEONSHOOTABLES;
		+SKYEXPLODE;
		+CANBOUNCEWATER;
		BounceType "Hexen";
		BounceFactor 1.25;
		WallBounceFactor 1.25;
		BounceCount 256;

		Scale 0.2;
		Alpha 0.67;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.22);
			UMM1 AAABBB 1 Bright A_SpawnProjectile("MMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			goto Spawn+1;

		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.1); // Bright A_StopSound(CHAN_BODY) 
			UMM1 D 4 Bright A_Explode((2 + random(-1,1)),8,0,0,2);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MinorMagicMissileSeek : MinorMagicMissile
{
	default
	{
		+SEEKERMISSILE;
		+USEBOUNCESTATE;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.22);
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("MMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,4); }
														 else { A_MMSeek(4); }
			}
			goto Spawn+1;

		Bounce:
			UMM1 A 0 Bright { A_MMSeekerClearBounce(6,1); }
			goto Spawn+1;
	}
}

class MMMParticle : MinorMagicMissile
{
	default
	{
		Tag "Minor Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+DONTHARMSPECIES;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		Speed 1.6;
		Radius 1;
		Height 1;
		seesound "null";
		deathsound "null";

		DamageFunction (finaldamagedealt); // Runs the script to check
		Scale 0.1;
	}

	States
	{
		Spawn:
			UMM1 A 0 { A_GetMiscDMG(1); }
			UMM1 A 3 { user_Fuse += 1; }
			UMM1 A 0 { A_GetMiscDMG(1); A_FadeOut(0.333); }
			UMM1 A 0 Bright A_JumpIf(user_Fuse==3,"FusedOut");
			UMM1 B 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(1); A_FadeOut(0.333); }
			UMM1 B 0 Bright A_JumpIf(user_Fuse==3,"FusedOut");
			Goto Spawn+1;
		FusedOut:
			UMM1 A 0 A_Fadeout(0);
			Stop;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.05); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode((random(0,1)),6,0,0,3);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

// [Normal] Magic Missile Particle
class NMMParticle : MinorMagicMissile
{
	default
	{
		Tag "Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+DONTHARMSPECIES;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		Speed 2.16;
		Radius 2;
		Height 2;
		seesound "null";
		deathsound "null";

		DamageFunction (finaldamagedealt); // 6-10 (4)
		Scale 0.2;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 { A_GetMiscDMG(2); }
			UMM1 A 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(2); A_FadeOut(0.1667); }
			UMM1 A 0 Bright A_JumpIf(user_Fuse==6,"FusedOut");
			UMM1 B 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(2); A_FadeOut(0.1667); }
			UMM1 B 0 Bright A_JumpIf(user_Fuse==6,"FusedOut");
			Goto Spawn+1 ;
		FusedOut:
			UMM1 A 0 A_Fadeout(0);
			Stop;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.1); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode((3 + random(-1,1)),6,0,0,3);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MagicMissile : MinorMagicMissile
{
	default
	{
		Tag "Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		seesound "nmissilelaunch";
		deathsound "nmissileimpact";

		Radius 4;
		Height 4;
		DamageFunction (64 + random(-16,16)); // 48-80 (32)
		Scale 0.4;
		Alpha 0.78;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.44);
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("NMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("NMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}
			Goto Spawn+1;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.2); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode((48 + random(-12,12)),32,0,0,16);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MagicMissileSeek : MagicMissile
{
	default
	{
		Tag "Magic Missile";
		+SEEKERMISSILE;
		+USEBOUNCESTATE;
	}

	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.44);
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("NMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("NMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,3); }
														 else { A_MMSeek(3); }
			}
			Goto Spawn+1;

		Bounce:
			UMM1 A 0 Bright { A_MMSeekerClearBounce(6,1); }
			goto Spawn+1;
	}
}

// Major Magic Missile
class BMMParticle : MinorMagicMissile
{
	default
	{
		Tag "Major Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+DONTHARMSPECIES;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		Speed 3.6;
		Radius 3;
		Height 3;
		seesound "null";
		deathsound "null";

		DamageFunction (finaldamagedealt); // 18-30 (12)
		Scale 0.3;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 { A_GetMiscDMG(3); }
			UMM1 A 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(3); A_FadeOut(0.125); }
			UMM1 A 0 Bright A_JumpIf(user_Fuse==8,"FusedOut");
			UMM1 B 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(3); A_FadeOut(0.125); }
			UMM1 B 0 Bright A_JumpIf(user_Fuse==8,"FusedOut");
			Goto Spawn+1 ;
		FusedOut:
			UMM1 A 0 A_Fadeout(0);
			Stop;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.15); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode((9 + random(-2,3)),16,0,0,8);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MajorMagicMissile : MinorMagicMissile
{
	default
	{
		Tag "Major Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		seesound "bmissilelaunch";
		deathsound "bmissileimpact";

		Radius 6;
		Height 6;
		DamageFunction (256 + random(-64,64)); // 192-320 (128)
		Scale 0.60;
		Alpha 0.89;
	}

	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.66);
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}
			Goto Spawn+1;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.3); // Bright A_StopSound(CHAN_BODY) 
			UMM1 D 4 Bright A_Explode((192 + random(-48,48)),60,0,0,30);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MajorMagicMissileSeek : MajorMagicMissile
{
	default
	{
		Tag "Major Magic Missile";
		+SEEKERMISSILE;
		+USEBOUNCESTATE;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay;
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,2); }
														 else { A_MMSeek(2); }
			}
			Goto Spawn+1;

		Bounce:
			UMM1 A 0 Bright { A_MMSeekerClearBounce(6,1); }
			goto Spawn+1;
	}
}

// Ultra Magic Missile
class UMMParticle : MinorMagicMissile
{
	default
	{
		Tag "Ultra Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+DONTHARMSPECIES;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		Speed 6;
		Radius 4;
		Height 4;
		seesound "null";
		deathsound "null";

		DamageFunction (finaldamagedealt); // 54-90 (36)
		Scale 0.4;
	}

	States
	{
		Spawn:
			UMM1 A 0 { A_GetMiscDMG(4); }
			UMM1 A 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(4); A_FadeOut(0.0833); }
			UMM1 A 0 Bright A_JumpIf(user_Fuse==12,"FusedOut");
			UMM1 B 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(4); A_FadeOut(0.0833); }
			UMM1 B 0 Bright A_JumpIf(user_Fuse==12,"FusedOut");
			Goto Spawn+1;
		FusedOut:
			UMM1 A 0 A_Fadeout(0);
			Stop;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.20); // Bright A_StopSound(CHAN_BODY) ;
			UMM1 D 4 Bright A_Explode((27 + random(-4,5)),40,0,0,20);
			UMM1 EFGH 4 Bright ;
			Stop;
	}
}

class UltraMagicMissile : MinorMagicMissile
{
	default
	{
		Tag "Ultra Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";

		Radius 8;
		Height 8;
		+BOUNCEONWALLS;
		+BOUNCEONFLOORS;
		+BOUNCEONCEILINGS;
		+NOBOUNCESOUND;
		-EXPLODEONWATER;
		-SKYEXPLODE;
		BounceFactor 1.25;
		WallBounceFactor 1.25;
		BounceCount 256;
		seesound "umissilelaunch";
		deathsound "umissileimpact";
		Scale 0.8;
		Alpha 1;

		DamageFunction ((1024 + user_BaseDamage) + random((-256 - user_DamageError),(256 + user_DamageError))); // 1536-2560 (1024)
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay 
			{
				A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.935);
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 AAA 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}

			UMM1 B 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 BBB 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}

			UMM1 A 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 AAA 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}

			UMM1 B 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 BBB 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}
			Goto Spawn+1;
		Death:
			UMM1 C 0 Bright A_ScaleVelocity(0) ;
			UMM1 C 0 Bright A_StartSound("umissileimpact",2);
			UMM1 C 4 Bright A_SetScale(0.4); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode(((768 + user_BaseExplodeDamage) + random((-192 - user_ExplodeDamageError),(192 + user_ExplodeDamageError))),192,0,0,96);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class UltraMagicMissileSeek : UltraMagicMissile
{
	default
	{
		Tag "Ultra Magic Missile";
		+SEEKERMISSILE;
		+USEBOUNCESTATE;
	}

	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay 
			{
				A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.935);
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 AAA 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,1); }
														 else { A_MMSeek(1); }
			}

			UMM1 B 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 BBB 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,1); }
														 else { A_MMSeek(1); }
			}

			UMM1 A 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 AAA 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,1); }
														 else { A_MMSeek(1); }
			}

			UMM1 B 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 BBB 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,1); }
														 else { A_MMSeek(1); }
			}
			Goto Spawn+1;

		Bounce:
			UMM1 A 0 Bright { A_MMSeekerClearBounce(6,1); }
			goto Spawn+1;
	}
}


//*********
//* Bases *
//*********

// Raging Spirits
class RagingSpiritBase : HolySpiritBase
{
	default
	{
		Tag "Minor Raging Spirit";
		DamageType "Magic";
		DamageType "Holy";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+THRUSPECIES;
		+MTHRUSPECIES;
		+DONTREFLECT;
		species "Players";
		MeleeDamage 2; // ((2 + random(0,2)) * random(1,8) * random(2,3)) // 4 to 96 damage per hit
		Health 2000;
		Mass 2000;
		
		//CLEARFLAGS;
		+SPECTRAL;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SEEKERMISSILE;
		+FOILINVUL;
		+SKYEXPLODE;
		+NOEXPLODEFLOOR;
		+CANBLAST;
		+EXTREMEDEATH;
		+NOBLOCKMONST;
		+FRIENDLY;
		-SOLID;
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 0 A_JumpIfInventory("SpreaderAura2",1,"Spreader2", AAPTR_PLAYER1);
			TNT1 A 0 A_JumpIfInventory("SpreaderAura1",1,"Spreader1", AAPTR_PLAYER1);
		Normal:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader1:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader2:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Death:
			goto Spawn+1;
	}
}

class RagingSpirit2Base : HolySpiritBase
{
	default
	{
		Tag "Raging Spirit";
		DamageType "Magic";
		DamageType "Holy";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+THRUSPECIES;
		+MTHRUSPECIES;
		+DONTREFLECT;
		species "Players";
		MeleeDamage 2; // ((2 + random(0,2)) * random(1,8) * random(2,3)) // 4 to 96 damage per hit
		Health 2000;
		
		//CLEARFLAGS;
		+SPECTRAL;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SEEKERMISSILE;
		+FOILINVUL;
		+SKYEXPLODE;
		+NOEXPLODEFLOOR;
		+CANBLAST;
		+EXTREMEDEATH;
		+NOBLOCKMONST;
		+FRIENDLY;
		-SOLID;
		Mass 2000;
	}

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("SpreaderAura2",1,"Spreader2", AAPTR_PLAYER1);
			TNT1 A 0 A_JumpIfInventory("SpreaderAura1",1,"Spreader1", AAPTR_PLAYER1);
		Normal:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader1:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader2:
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("RagingSpirit2",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Death:
			goto Spawn+1;
	}
}

class ExplodingGlyphBase : AetheriusProjectileZSC
{
	default
	{
		Tag "Exploding Glyph";
		DamageType "Magic";
		+FLOORCLIP;
		+THRUSPECIES;
		+MTHRUSPECIES;
		species "Players";
		MONSTER;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FRIENDLY;
		-SHOOTABLE;
		-SOLID;
		+SPECTRAL;
		+DONTREFLECT;
		Radius 1;
		Height 1;
		Speed 0;
		Scale 0.2;
		ExplosionDamage 100;
		ExplosionRadius 64;
	}

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("SpreaderAura2",1,"Spreader2", AAPTR_PLAYER1);
			TNT1 A 0 A_JumpIfInventory("SpreaderAura1",1,"Spreader1", AAPTR_PLAYER1);
		Normal:
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader1:
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader2:
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle+2.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle+2.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle-2.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle-2.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("ExplodingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*5,0,sin(user_basespellangle)*5,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Death:
			goto Spawn+1;
	}
}

class FreezingGlyphBase : ExplodingGlyphBase
{
	default
	{
		Tag "Freezing Glyph";
		DamageType "Magic";
		DamageType "Ice";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+THRUSPECIES;
		+MTHRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
	}

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("SpreaderAura2",1,"Spreader2", AAPTR_PLAYER1);
			TNT1 A 0 A_JumpIfInventory("SpreaderAura1",1,"Spreader1", AAPTR_PLAYER1);
		Normal:
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader1:
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Spreader2:
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,-15,      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle+7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,0,        SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,7.5,  SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle-7.5)*15,-7.5, SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			TNT1 A 0 A_SpawnItemEx("FreezingGlyph",0+(cos(-pitch)*0),0,0+(sin(-pitch)*0), cos(-pitch)*15,0,sin(user_basespellangle)*15,15,       SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS);
			Stop;
		Death:
			goto Spawn+1;
	}
}

//*************
//* Non Bases *
//*************
//* Magic Missiles
//*****************
// Minor Magic Missile
class MinorMagicMissile : AetheriusDoomSpellZSC // : SerpentFX
{
	default
	{
		Tag "Minor Magic Missile";
		Speed 16;
		Radius 2;
		Height 2;
		DamageFunction (4 + random(-1,1)); // 3-5
		Projectile;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		RenderStyle "Add";

		DamageType "Magic";
		+FLOORCLIP;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+HITTRACER;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		seesound "mmissilelaunch";
		deathsound "mmissileimpact";

		+BOUNCEONWALLS;
		+BOUNCEONFLOORS;
		+BOUNCEONCEILINGS;
		+BOUNCEONACTORS;
		+NOBOUNCESOUND;
		+EXPLODEONWATER;
		+DONTBOUNCEONSHOOTABLES;
		+SKYEXPLODE;
		+CANBOUNCEWATER;
		BounceType "Hexen";
		BounceFactor 1.25;
		WallBounceFactor 1.25;
		BounceCount 256;

		Scale 0.2;
		Alpha 0.67;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.22);
			UMM1 AAABBB 1 Bright A_SpawnProjectile("MMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			goto Spawn+1;

		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.1); // Bright A_StopSound(CHAN_BODY) 
			UMM1 D 4 Bright A_Explode((2 + random(-1,1)),8,0,0,2);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MinorMagicMissileSeek : MinorMagicMissile
{
	default
	{
		+SEEKERMISSILE;
		+USEBOUNCESTATE;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.22);
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("MMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,4); }
														 else { A_MMSeek(4); }
			}
			goto Spawn+1;

		Bounce:
			UMM1 A 0 Bright { A_MMSeekerClearBounce(6,1); }
			goto Spawn+1;
	}
}

class MMMParticle : MinorMagicMissile
{
	default
	{
		Tag "Minor Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+DONTHARMSPECIES;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		Speed 1.6;
		Radius 1;
		Height 1;
		seesound "null";
		deathsound "null";

		DamageFunction (finaldamagedealt); // Runs the script to check
		Scale 0.1;
	}

	States
	{
		Spawn:
			UMM1 A 0 { A_GetMiscDMG(1); }
			UMM1 A 3 { user_Fuse += 1; }
			UMM1 A 0 { A_GetMiscDMG(1); A_FadeOut(0.333); }
			UMM1 A 0 Bright A_JumpIf(user_Fuse==3,"FusedOut");
			UMM1 B 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(1); A_FadeOut(0.333); }
			UMM1 B 0 Bright A_JumpIf(user_Fuse==3,"FusedOut");
			Goto Spawn+1;
		FusedOut:
			UMM1 A 0 A_Fadeout(0);
			Stop;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.05); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode((random(0,1)),6,0,0,3);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

// [Normal] Magic Missile Particle
class NMMParticle : MinorMagicMissile
{
	default
	{
		Tag "Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+DONTHARMSPECIES;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		Speed 2.16;
		Radius 2;
		Height 2;
		seesound "null";
		deathsound "null";

		DamageFunction (finaldamagedealt); // 6-10 (4)
		Scale 0.2;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 { A_GetMiscDMG(2); }
			UMM1 A 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(2); A_FadeOut(0.1667); }
			UMM1 A 0 Bright A_JumpIf(user_Fuse==6,"FusedOut");
			UMM1 B 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(2); A_FadeOut(0.1667); }
			UMM1 B 0 Bright A_JumpIf(user_Fuse==6,"FusedOut");
			Goto Spawn+1 ;
		FusedOut:
			UMM1 A 0 A_Fadeout(0);
			Stop;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.1); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode((3 + random(-1,1)),6,0,0,3);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MagicMissile : MinorMagicMissile
{
	default
	{
		Tag "Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		seesound "nmissilelaunch";
		deathsound "nmissileimpact";

		Radius 4;
		Height 4;
		DamageFunction (64 + random(-16,16)); // 48-80 (32)
		Scale 0.4;
		Alpha 0.78;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.44);
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("NMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("NMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}
			Goto Spawn+1;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.2); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode((48 + random(-12,12)),32,0,0,16);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MagicMissileSeek : MagicMissile
{
	default
	{
		Tag "Magic Missile";
		+SEEKERMISSILE;
		+USEBOUNCESTATE;
	}

	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.44);
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("NMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("NMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,3); }
														 else { A_MMSeek(3); }
			}
			Goto Spawn+1;

		Bounce:
			UMM1 A 0 Bright { A_MMSeekerClearBounce(6,1); }
			goto Spawn+1;
	}
}

// Major Magic Missile
class BMMParticle : MinorMagicMissile
{
	default
	{
		Tag "Major Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+DONTHARMSPECIES;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		Speed 3.6;
		Radius 3;
		Height 3;
		seesound "null";
		deathsound "null";

		DamageFunction (finaldamagedealt); // 18-30 (12)
		Scale 0.3;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 { A_GetMiscDMG(3); }
			UMM1 A 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(3); A_FadeOut(0.125); }
			UMM1 A 0 Bright A_JumpIf(user_Fuse==8,"FusedOut");
			UMM1 B 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(3); A_FadeOut(0.125); }
			UMM1 B 0 Bright A_JumpIf(user_Fuse==8,"FusedOut");
			Goto Spawn+1 ;
		FusedOut:
			UMM1 A 0 A_Fadeout(0);
			Stop;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.15); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode((9 + random(-2,3)),16,0,0,8);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MajorMagicMissile : MinorMagicMissile
{
	default
	{
		Tag "Major Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		seesound "bmissilelaunch";
		deathsound "bmissileimpact";

		Radius 6;
		Height 6;
		DamageFunction (256 + random(-64,64)); // 192-320 (128)
		Scale 0.60;
		Alpha 0.89;
	}

	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.66);
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}
			Goto Spawn+1;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.3); // Bright A_StopSound(CHAN_BODY) 
			UMM1 D 4 Bright A_Explode((192 + random(-48,48)),60,0,0,30);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class MajorMagicMissileSeek : MajorMagicMissile
{
	default
	{
		Tag "Major Magic Missile";
		+SEEKERMISSILE;
		+USEBOUNCESTATE;
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay;
			UMM1 AAABBB 1 Bright
			{
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("BMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,2); }
														 else { A_MMSeek(2); }
			}
			Goto Spawn+1;

		Bounce:
			UMM1 A 0 Bright { A_MMSeekerClearBounce(6,1); }
			goto Spawn+1;
	}
}

// Ultra Magic Missile
class UMMParticle : MinorMagicMissile
{
	default
	{
		Tag "Ultra Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+DONTHARMSPECIES;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		Speed 6;
		Radius 4;
		Height 4;
		seesound "null";
		deathsound "null";

		DamageFunction (finaldamagedealt); // 54-90 (36)
		Scale 0.4;
	}

	States
	{
		Spawn:
			UMM1 A 0 { A_GetMiscDMG(4); }
			UMM1 A 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(4); A_FadeOut(0.0833); }
			UMM1 A 0 Bright A_JumpIf(user_Fuse==12,"FusedOut");
			UMM1 B 3 { user_Fuse += 1; }
			UMM1 B 0 { A_GetMiscDMG(4); A_FadeOut(0.0833); }
			UMM1 B 0 Bright A_JumpIf(user_Fuse==12,"FusedOut");
			Goto Spawn+1;
		FusedOut:
			UMM1 A 0 A_Fadeout(0);
			Stop;
		Death: 
			UMM1 C 0 Bright A_ScaleVelocity(0);
			UMM1 C 4 Bright A_SetScale(0.20); // Bright A_StopSound(CHAN_BODY) ;
			UMM1 D 4 Bright A_Explode((27 + random(-4,5)),40,0,0,20);
			UMM1 EFGH 4 Bright ;
			Stop;
	}
}

class UltraMagicMissile : MinorMagicMissile
{
	default
	{
		Tag "Ultra Magic Missile";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";

		Radius 8;
		Height 8;
		+BOUNCEONWALLS;
		+BOUNCEONFLOORS;
		+BOUNCEONCEILINGS;
		+NOBOUNCESOUND;
		-EXPLODEONWATER;
		-SKYEXPLODE;
		BounceFactor 1.25;
		WallBounceFactor 1.25;
		BounceCount 256;
		seesound "umissilelaunch";
		deathsound "umissileimpact";
		Scale 0.8;
		Alpha 1;

		DamageFunction ((1024 + user_BaseDamage) + random((-256 - user_DamageError),(256 + user_DamageError))); // 1536-2560 (1024)
	}
	
	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay 
			{
				A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.935);
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 AAA 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}

			UMM1 B 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 BBB 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}

			UMM1 A 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 AAA 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}

			UMM1 B 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 BBB 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
			}
			Goto Spawn+1;
		Death:
			UMM1 C 0 Bright A_ScaleVelocity(0) ;
			UMM1 C 0 Bright A_StartSound("umissileimpact",2);
			UMM1 C 4 Bright A_SetScale(0.4); // Bright A_StopSound(CHAN_BODY);
			UMM1 D 4 Bright A_Explode(((768 + user_BaseExplodeDamage) + random((-192 - user_ExplodeDamageError),(192 + user_ExplodeDamageError))),192,0,0,96);
			UMM1 EFGH 4 Bright;
			Stop;
	}
}

class UltraMagicMissileSeek : UltraMagicMissile
{
	default
	{
		Tag "Ultra Magic Missile";
		+SEEKERMISSILE;
		+USEBOUNCESTATE;
	}

	States
	{
		Spawn:
			UMM1 A 0 Bright NoDelay 
			{
				A_StartSound("mmissilebuzz",3,CHANF_DEFAULT,0.935);
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 AAA 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,1); }
														 else { A_MMSeek(1); }
			}

			UMM1 B 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 BBB 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,1); }
														 else { A_MMSeek(1); }
			}

			UMM1 A 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 AAA 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,1); }
														 else { A_MMSeek(1); }
			}

			UMM1 B 0 Bright 
			{
				user_BaseDamage += 4;
				user_BaseExplodeDamage += 2;
				user_DamageError += 2;
				user_ExplodeDamageError += 1;
			}
			UMM1 BBB 1 Bright
			{
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				A_SpawnProjectile("UMMParticle",0,0,frandom(0,360),6,frandom(0,360));
				if (user_noseektimer > 0) { A_MMCheckNoSeekTimer(16,1); }
														 else { A_MMSeek(1); }
			}
			Goto Spawn+1;

		Bounce:
			UMM1 A 0 Bright { A_MMSeekerClearBounce(6,1); }
			goto Spawn+1;
	}
}
//* Raging Spirits
//*****************
class RagingSpiritTail : AetheriusBaseZSC
{
	default
	{
		RenderStyle "Translucent";
		Alpha 0.4;
		Scale 0.667;
		+NOINTERACTION;
	}
	
	States
	{
		Spawn:
			SPIR A 1 Bright NoDelay 
			{
				A_SetScale(scale.x-0.0334,scale.y-0.0334);
				A_FadeOut(0.02);
			}
			loop;
	}
}

class RagingSpiritTail2 : AetheriusBaseZSC
{
	default
	{
		RenderStyle "Translucent";
		Alpha 0.4;
		Scale 1.125;
		+NOINTERACTION;
	}
	
	States
	{
		Spawn:
			SPIR A 1 Bright NoDelay 
			{
				A_SetScale(scale.x-0.05625,scale.y-0.05625);
				A_FadeOut(0.02);
			}
			loop;
	}
}

class RagingSpirit : HolySpiritBase
{
	default
	{
		Tag "Minor Raging Spirit";
		DamageType "Magic";
		DamageType "Holy";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		species "Players";
		DamageFunction (finaldamagedealt * 1);
		Health 210;
		Radius 5; // half the original radius
		Height 3; // half the original height
		Scale 0.667;
		//CLEARFLAGS 
		+MISSILE;
		+STEPMISSILE;
		+RIPPER;
		+BLOODLESSIMPACT;
		+SEEKERMISSILE;
		+FOILINVUL;
		+SKYEXPLODE;
		+NOEXPLODEFLOOR;
		+CANBLAST;
		-EXTREMEDEATH;
		-NOEXTREMEDEATH;
		+NODAMAGETHRUST;
		+DONTREFLECT;
		+NOBLOCKMONST;
		+FRIENDLY;
		+BOUNCEONWALLS;
		+BOUNCEONFLOORS;
		+BOUNCEONCEILINGS;
		+BOUNCEONACTORS;
		+NOBOUNCESOUND;
		+CANBOUNCEWATER;
		+FORCERADIUSDMG;
		+DONTREFLECT;
		BounceType "Hexen";
		BounceFactor 1.0625;
		WallBounceFactor 1.0625;
		BounceCount 1024;
	}

	States
	{
		Spawn:
			SPIR A 0 Bright NoDelay 
			{
				A_GetRagingSpiritDMG(0);
				user_fuse = ((5 * random(8,10)) / 2) + (PlayerSOR / 4) + (PlayerTHE / 8);
				A_ScaleVelocity(1.5);
			}
		Active:
			SPIR AAAABBBB 1 
			{
				A_GetRagingSpiritDMG(0);
				A_Weave(random(2,4), random(2,4), frandom(3.2,4.8), frandom(3.2,4.8));
				user_seek++;
				if (user_seek >= user_seekmax1) 
				{ 
					A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64); 
					//A_LogInt(user_seek);
					//A_LogInt(user_seekmax1);
					user_seek = 0; 
					user_seekmax1 = random(3,4);
				}
			}
			SPIR B 0 
			{
				A_SpawnItemEx("RagingSpiritTail");
				A_GetRagingSpiritDMG(0);
				if (random(1,256) >= 236) { A_StartSound("SpiritActive",CHAN_VOICE); }
				if (random(1,256) <= 255) { user_fuse -= 1; }
				if (user_fuse <= 0) { return resolvestate("Death"); }
				return resolvestate(null);
			}
			loop;
		Death:
			SPIR D 0 A_ScaleVelocity(0);
			SPIR D 4;
			SPIR E 4 A_Scream();
			SPIR FGHI 4;
			Stop;
	}
}

class RagingSpirit2 : RagingSpirit
{
	default
	{
		Tag "Raging Spirit";
		Scale 1.125;
		BounceFactor 1.125;
		WallBounceFactor 1.125;
		BounceCount 1024;
	}
	
	States
	{
		Spawn:
			SPIR A 0 Bright NoDelay 
			{
				A_GetRagingSpiritDMG(1);
				user_fuse = ((5 * random(8,10)) / 2) + (PlayerSOR / 4) + (PlayerTHE / 8);
				A_ScaleVelocity(1.5);
			}
		Active:
			SPIR AAAABBBB 1 
			{
				A_GetRagingSpiritDMG(1);
				A_Weave(random(2,4), random(2,4), frandom(2.8,5.2), frandom(2.8,5.2));
				user_seek++;
				if (user_seek >= user_seekmax1) 
				{
					A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64); 
					//A_LogInt(user_seek);
					//A_LogInt(user_seekmax1);
					user_seek = 0; 
					user_seekmax1 = random(2,3); 
				}
			}
			SPIR B 0 
			{
				A_SpawnItemEx("RagingSpiritTail2");
				A_GetRagingSpiritDMG(1);
				if (random(1,256) >= 236) { A_StartSound("SpiritActive",CHAN_VOICE); }
				if (random(1,256) <= 255) { user_fuse -= 1; }
				if (user_fuse <= 0) { return resolvestate("Death"); }
				return resolvestate(null);
			}
			loop;
	}
}

//* Fireballs
//************
class MinorFireBall : AetheriusDoomSpellZSC
{
	default
	{
		Tag "Minor Fireball";
		DamageType "Magic";
		DamageType "Fire";
		Radius 2;
		Height 2;
		Speed 10;
		FastSpeed 10;
		Scale 0.75;
		RenderStyle "Add";
		Alpha 1;
		Projectile;
		+RANDOMIZE;
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+FORCERADIUSDMG;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		DamageFunction (48 + random(-12,12)); // 36-60 (24)
		Seesound "mfireballlaunch";
		DeathSound "firballimpact";
	}

	States
	{
		Spawn: 
			BRB2 A 0 Bright NoDelay A_ScaleVelocity(1.4);
			BRB2 A 3 Bright;
			BRB2 B 3 Bright;
			Goto Spawn+1;
		Death:
			BRB2 C 0 Bright A_SetScale(1.125);
			BRB2 C 3 Bright A_Explode((24 + random(-9,9)),28,0,0,14);
			BRB2 D 3 Bright;
			BRB2 E 3 Bright;
			BRB2 F 3 Bright;
			BRB2 G 3 Bright;
			BRB2 H 3 Bright;
			BRB2 I 3 Bright;
			Stop;
	}
}

class MinorFireBallSeek : MinorFireBall
{
	default
	{
		Tag "Minor Fireball";
		+SEEKERMISSILE;
	}
	
	States
	{
		Spawn: 
			BRB2 A 0 Bright NoDelay A_ScaleVelocity(1.4);
			BRB2 AAABBB 1 Bright
			{
				user_seektimer++;
				if (user_seektimer >= 2)
				{
					user_seektimer = 0;
					A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64);
				}
			}
			Goto Spawn+1;
	}
}

class NormalFireBall : MinorFireBall
{
	default
	{
		Tag "Fireball";
		DamageType "Magic";
		DamageType "Fire";
		Radius 4;
		Height 4;
		Speed 10;
		FastSpeed 10;
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+FORCERADIUSDMG;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		DamageFunction (192 + random(-48,48)); // 144-240 (96)
		Scale 1.125;
		Seesound "nfireballlaunch";
	}
	
	States
	{
		Spawn: 
			BRB2 A 0 Bright NoDelay A_ScaleVelocity(1.9);
			BRB2 AB 3 Bright ;
			Goto Spawn+1;
		Death: 
			BRB2 C 0 Bright A_SetScale(1.6875);
			BRB2 C 3 Bright A_Explode((96 + random(-36,36)),56,0,0,28);
			BRB2 DEFGHI 3 Bright;
			Stop;
	}
}

class NormalFireBallSeek : NormalFireBall
{
	default
	{
		Tag "Fireball";
		+SEEKERMISSILE;
	}
	
	States
	{
		Spawn: 
			BRB2 A 0 Bright NoDelay A_ScaleVelocity(1.9);
			BRB2 AAABBB 1 Bright
			{
				user_seektimer++;
				if (user_seektimer >= 2)
				{
					user_seektimer = 0;
					A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64);
				}
			}
			Goto Spawn+1;
	}
}

class MajorFireBall : MinorFireBall
{
	default
	{
		Tag "Major Fireball";
		DamageType "Magic";
		DamageType "Fire";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+FORCERADIUSDMG;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		Radius 7;
		Height 7;
		DamageFunction (768 + random(-192,192)); // 576-960 (384)
		Scale 1.50;
		Speed 10;
		Seesound "bfireballlaunch";
	}

	States
	{
		Spawn: 
			BRB2 A 0 Bright NoDelay A_ScaleVelocity(2.5);
			BRB2 AB 3 Bright; 
			Goto Spawn+1;
		Death: 
			BRB2 C 0 Bright;
			BRB2 C 3 Bright A_Explode((384 + random(-144,144)),112,0,0,56);
			BRB2 DEFGHI 3 Bright;
			Stop;
	}
}

class MajorFireBallSeek : MajorFireBall
{
	default
	{
		Tag "Major Fireball";
		+SEEKERMISSILE;
	}

	States
	{
		Spawn: 
			BRB2 A 0 Bright NoDelay A_ScaleVelocity(2.5);
			BRB2 AAABBB 1 Bright
			{
				user_seektimer++;
				if (user_seektimer >= 2)
				{
					user_seektimer = 0;
					A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64);
				}
			}
			Goto Spawn+1;
	}
}

//* Ice Shards
//*************
class MinorHexenIceShard : AetheriusIceShard
{
	default
	{
		Tag "Minor Ice Shard";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+FORCERADIUSDMG;
		+SPECTRAL;
		+DONTREFLECT;
		DamageType "Ice";
		species "Players";
		Radius 2;
		Height 2;
		DamageFunction (20+random(-10,10));
		Seesound "miceshardlaunch";
	}

	States
	{
		Spawn:
			ISHD A 0 NoDelay A_ScaleVelocity(1.3);
			ISHD ABC 3 Bright;
			goto Spawn+1;
		Death:
			SHEX A 5 Bright A_Explode((5+random(-2,2)),8,0,0,4);
			SHEX BCDE 5 Bright;
			Stop;
	}
}

class MinorHexenIceShardSeek : MinorHexenIceShard
{
	default
	{
		Tag "Minor Ice Blast";
		+SEEKERMISSILE;
	}
	
	States
	{
		Spawn:
			ISHD A 0 NoDelay A_ScaleVelocity(1.3);
			ISHD AAABBBCCC 1 Bright
			{
				user_seektimer++;
				if (user_seektimer >= 2)
				{
					user_seektimer = 0;
					A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64);
				}
			}
			goto Spawn+1;
	}
}

class HexenIceShard : AetheriusIceShard
{
	default
	{
		Tag "Ice Shard";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+FORCERADIUSDMG;
		+SPECTRAL;
		+DONTREFLECT;
		DamageType "Ice";
		species "Players";
		Radius 3;
		Height 3;
		DamageFunction (40+random(-20,20));
		Seesound "niceshardlaunch";
	}

	States
	{
		Spawn:
			ISHD A 0 NoDelay A_ScaleVelocity(1.6);
			ISHD ABC 3 Bright;
			goto Spawn+1;
		Death:
			SHEX A 5 Bright A_Explode((10+random(-5,5)),12,0,0,6);
			SHEX BCDE 5 Bright;
			Stop;
	}
}

class HexenIceShardSeek : HexenIceShard
{
	default
	{
		Tag "Ice Shard";
		+SEEKERMISSILE;
	}

	States
	{
		Spawn:
			ISHD A 0 NoDelay A_ScaleVelocity(1.6);
			ISHD AAABBBCCC 1 Bright
			{
				user_seektimer++;
				if (user_seektimer >= 2)
				{
					user_seektimer = 0;
					A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64);
				}
			}
			goto Spawn+1;
	}
}

class MajorHexenIceShard : AetheriusIceShard
{
	default
	{
		Tag "Major Ice Shard";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+FORCERADIUSDMG;
		+SPECTRAL;
		+DONTREFLECT;
		DamageType "Ice";
		species "Players";
		Radius 4;
		Height 4;
		DamageFunction (80+random(-40,40));
		Seesound "biceshardlaunch";
	}

	States
	{
		Spawn:
			ISHD A 0 NoDelay A_ScaleVelocity(2);
			ISHD ABC 3 Bright;
			goto Spawn+1;
		Death:
			SHEX A 5 Bright A_Explode((20+random(-10,10)),16,0,0,8);
			SHEX BCDE 5 Bright;
			Stop;
	}
}

class MajorHexenIceShardSeek : MajorHexenIceShard
{
	default
	{
		Tag "Major Ice Shard";
		+SEEKERMISSILE;
	}

	States
	{
		Spawn:
			ISHD A 0 NoDelay A_ScaleVelocity(2);
			ISHD AAABBBCCC 1 Bright
			{
				user_seektimer++;
				if (user_seektimer >= 2)
				{
					user_seektimer = 0;
					A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64);
				}
			}
			goto Spawn+1;
	}
}

class ChillTouch : AetheriusIceShard
{
	default
	{
		Tag "Chill Touch";
		DamageType "Magic";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+FORCERADIUSDMG;
		+SPECTRAL;
		species "Players";
		DamageType "Ice";
		RenderStyle "Add";
		DamageFunction (192+random(-128,128));
		Radius 2;
		Height 2;
		Seesound "chilltouch";
	}
	
	States
	{
		Spawn:
			SHEX AA 1;
			Goto Death;
		Death:
			SHEX A 1 A_Explode(64+random(-32,32),64,0,0,64);
			SHEX BCDE 1;
			Stop;
	}
}

//* Glyphs
//*********
class ExplodingGlyph : AetheriusDoomSpellZSC
{
	default
	{
		Tag "Exploding Glyph";
		DamageType "Magic";
		+MTHRUSPECIES;
		+THRUSPECIES;
		species "Players";
		Gravity 0.5;
		MONSTER;
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+FRIENDLY;
		-SHOOTABLE;
		-SOLID;
		+SPECTRAL;
		+DONTREFLECT;
		Radius 1;
		Height 1;
		Speed 0;
		Scale 0.2;
		ExplosionDamage 100;
		ExplosionRadius 96;
		meleerange 96;
	}

	States
	{
		Spawn:
			BPOD A 0 NoDelay;
			BPOD A 35;
		Idle:
			BPOD A 1 A_Look();
			Loop;
		See:
			BPOD A 1 A_Chase();
			Goto Spawn;
		Melee:
		Death:
      TNT1 A 0 
			{
				A_ScaleVelocity(0.0);
				ThrustThingZ(0,30,0,0);
			}
			BPOD A 16
			{
				A_SetTics(random(2,6)*2);
			}
			BPOD C 5;
			BPOD D 5 A_StartSound("bmissileimpact");
			BPOD E 5 A_Explode(100,96,0,0,48);
			BPOD F 10;
			Stop;
	}
}

class FreezingGlyph : ExplodingGlyph
{
	default
	{
		Tag "Freezing Glyph";
		DamageType "Magic";
		species "Players";
		DamageType "Ice";
	}

	States
	{
		Spawn:
			FPOD A 35;
		Idle:
			FPOD A 1 A_Look();
			Loop;
		See:
			FPOD A 1 A_Chase();
			Goto Spawn;
		Melee:
		Death:
      TNT1 A 0 
			{
				A_ScaleVelocity(0.0);
				ThrustThingZ(0,30,0,0);
			}
			FPOD A 16
			{
				A_SetTics(random(2,6)*2);
			}
			FPOD C 5;
			FPOD D 5 A_StartSound("MageShardsExplode");
			FPOD E 5 A_Explode(100,96,0,0,48);
			FPOD F 10;
			Stop;
	}
}

//* Lightning
//************
class HexenLightningF : AetheriusLightningBottom
{
	default
	{
		Tag "Lightning Bolt (Floor)";
		DamageType "Magic";
		DamageType "Thunder";
		species "Players";
		DamageFunction (72+random(-42,42));
		Seesound "lightningspelluse";
		Mass 27;
		Stamina 1;
		Accuracy 1;
		Radius 2;
		Height 8;
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		-NOGRAVITY;
		+FORCERADIUSDMG;
		+FLOORHUGGER;
		+SPECTRAL;
		+DONTREFLECT;
	}

	States
	{
		Spawn:
			MLFX E 0 Bright NoDelay A_Explode(48+random(-31,31),96,0,0,31);
			MLFX E 2 Bright A_LightningZap("HexenLightningZap",8);
			MLFX F 0 Bright A_Explode(48+random(-31,31),96,0,0,31);
			MLFX F 2 Bright A_LightningClip();
			MLFX G 0 Bright A_Explode(48+random(-31,31),96,0,0,31);
			MLFX G 2 Bright A_LightningClip();
			MLFX H 0 Bright A_Explode(48+random(-31,31),96,0,0,31);
			MLFX H 2 Bright A_LightningClip();
			Loop;

		Death:
			MLF2 F 2 Bright A_LightningRemove();
			MLF2 GHIJKLM 3 Bright;
			ACLO E 20;
			MLF2 NO 3 Bright;
			MLF2 P 4 Bright;
			MLF2 QP 3 Bright;
			MLF2 Q 4 Bright A_LastZap("HexenLightningZap");
			MLF2 POP 3 Bright;
			MLF2 P 1 Bright A_HideThing();
			ACLO E 1050;
			Stop;
	}
}

class HexenLightningC : AetheriusLightningTop
{
	default
	{
		Tag "Lightning Bolt (Ceiling)";
		Health 216;
		DamageType "Magic";
		DamageType "Thunder";
		species "Players";
		DamageFunction (72+random(-42,42));
		Mass 27;
		Stamina 1;
		Accuracy 1;
		Radius 2;
		Height 8;
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		+FORCERADIUSDMG;
		+CEILINGHUGGER;
		+DONTREFLECT;
	}
	
	States
	{
		Spawn:
			MLFX A 0 Bright NoDelay A_Explode(48+random(-31,31),96,0,0,31);
			MLFX A 2 Bright A_LightningZap("HexenLightningZap",8);
			MLFX B 0 Bright A_Explode(48+random(-31,31),96,0,0,31);
			MLFX B 2 Bright A_LightningClip();
			MLFX C 0 Bright A_Explode(48+random(-31,31),96,0,0,31);
			MLFX C 2 Bright A_LightningClip();
			MLFX D 0 Bright A_Explode(48+random(-31,31),96,0,0,31);
			MLFX D 2 Bright A_LightningClip();
			Loop;

		Death:
			MLF2 A 2 Bright A_LightningRemove();
			MLF2 BCDEKLM 3 Bright;
			ACLO E 35;
			MLF2 NO 3 Bright;
			MLF2 P 4 Bright;
			MLF2 QP 3 Bright;
			MLF2 Q 4 Bright;
			MLF2 P 3 Bright;
			MLF2 O 3 Bright;
			MLF2 P 3 Bright;
			MLF2 P 1 Bright A_HideThing();
			ACLO E 1050;
			Stop;
	}
}

class HexenLightningZap : AetheriusLightningZap
{
	default
	{
		Tag "Lightning Bolt (pos.zap)";
		Radius 15;
		Height 35;
		DamageFunction (18+random(-10,10));
		DamageType "Magic";
		DamageType "Thunder";
		Projectile;
		-ACTIVATEIMPACT;
		-ACTIVATEPCROSS;
		RenderStyle "Add";
		Obituary "$OB_MPMWEAPLIGHTNING";
	}

	States
	{
		Spawn:
			MLFX IJKLM 2 Bright A_ZapMimic();
			Loop;
		Death:
			MLFX NOPQRSTU 2 Bright;
			Stop;
	}
}

class MajorHexenLightningF : AetheriusLightningBottom
{
	default
	{
		Tag "Major Lightning Bolt";
		DamageType "Magic";
		DamageType "Thunder";
		species "Players";
		DamageFunction (180+random(-108,108));
		Seesound "lightningspelluse";
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		-NOGRAVITY;
		+FORCERADIUSDMG;
		+FLOORHUGGER;
		Radius 2;
		Height 8;
		Mass 72;
		Stamina 1;
		Accuracy 1;
	}

	States
	{
		Spawn:
			MLFX E 0 Bright NoDelay A_Explode(120+random(-72,72),128,0,0,41);
			MLFX E 2 Bright A_LightningZap("MajorHexenLightningZap",6);
			MLFX F 0 Bright A_Explode(120+random(-72,72),128,0,0,41);
			MLFX F 2 Bright A_LightningClip();
			MLFX G 0 Bright A_Explode(120+random(-72,72),128,0,0,41);
			MLFX G 2 Bright A_LightningClip();
			MLFX G 0 Bright A_Explode(120+random(-72,72),128,0,0,41);
			MLFX H 2 Bright A_LightningClip();
			Loop;

		Death:
			MLF2 F 2 Bright A_LightningRemove();
			MLF2 GHIJKLM 3 Bright;
			ACLO E 20;
			MLF2 NO 3 Bright;
			MLF2 P 4 Bright;
			MLF2 QP 3 Bright;
			MLF2 Q 4 Bright A_LastZap("MajorHexenLightningZap");
			MLF2 POP 3 Bright;
			MLF2 P 1 Bright A_HideThing();
			ACLO E 1050;
			Stop;
	}
}

class MajorHexenLightningC : AetheriusLightningTop
{
	default
	{
		Tag "Major Lightning Bolt";
		Health 288;
		DamageType "Magic";
		DamageType "Thunder";
		species "Players";
		DamageFunction (180+random(-108,108));
		+FLOORCLIP;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+SPECTRAL;
		+DONTREFLECT;
		+FORCERADIUSDMG;
		+CEILINGHUGGER;
		Radius 2;
		Height 8;
		Mass 72;
		Stamina 1;
		Accuracy 1;
	}

	States
	{
		Spawn:
			MLFX A 0 Bright NoDelay A_Explode(120+random(-72,72),128,0,0,41);
			MLFX A 2 Bright A_LightningZap("MajorHexenLightningZap",6);
			MLFX B 0 Bright A_Explode(120+random(-72,72),128,0,0,41);
			MLFX B 2 Bright A_LightningClip();
			MLFX D 0 Bright A_Explode(120+random(-72,72),128,0,0,41);
			MLFX C 2 Bright A_LightningClip();
			MLFX D 0 Bright A_Explode(120+random(-72,72),128,0,0,41);
			MLFX D 2 Bright A_LightningClip();
			Loop;

		Death:
			MLF2 A 2 Bright A_LightningRemove();
			MLF2 BCDEKLM 3 Bright;
			ACLO E 35;
			MLF2 NO 3 Bright;
			MLF2 P 4 Bright;
			MLF2 QP 3 Bright;
			MLF2 Q 4 Bright;
			MLF2 P 3 Bright;
			MLF2 O 3 Bright;
			MLF2 P 3 Bright;
			MLF2 P 1 Bright A_HideThing();
			ACLO E 1050;
			Stop;
	}
}

class MajorHexenLightningZap : AetheriusLightningZap
{
	default
	{
		Tag "Major Lightning Bolt";
		Radius 15;
		Height 35;
		DamageFunction (45+random(-27,27));
		Projectile;
		-ACTIVATEIMPACT;
		-ACTIVATEPCROSS;
		RenderStyle "Add";
		Obituary "$OB_MPMWEAPLIGHTNING";
	}

	States
	{
		Spawn:
			MLFX IJKLM 2 Bright A_ZapMimic();
			Loop;
		Death:
			MLFX NOPQRSTU 2 Bright;
			Stop;
	}
}

//* Acid Rain
//************
class AcidRainPillar : AetheriusDoomSpellZSC
{
	default
	{
		Tag "Acid Rain";
		DamageType "Magic";
		species "Players";
		Radius 5;
		Height 5;
		Speed 12;
		DamageFunction (32+random(-18,18));
		Mass 5;
		Projectile;
		+FLOORCLIP;
		-ACTIVATEPCROSS;
		-ACTIVATEIMPACT;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+FORCERADIUSDMG;
		+SPECTRAL;
		+DONTREFLECT;
		+NODAMAGETHRUST;
		ProjectileKickback 0;
		RenderStyle "Add";
		SeeSound "misc/rain";
		ActiveSound "misc/rain";
	}
	
	States
	{
		Spawn:
			FX22 A 0 Bright Nodelay { A_StartSound("misc/rain"); }
		Idle:
			FX22 A -1 Bright;
			Stop;
		Death:
			FX22 B 0 Bright A_JumpIf(pos.z > floorz,"NotFloor");
			FX22 B 4 Bright A_Jump(144,2);
			FX22 C 4 Bright A_Explode(16+random(-9,9),32,0);
			FX22 D 4 Bright;
			FX22 E 4 Bright;
			FX22 F 4 Bright;
			Stop;
		NotFloor:
			FX22 G 4 Bright A_Explode(16+random(-9,9),32,0);
			FX22 H 4 Bright;
			FX22 I 4 Bright;
			Stop;
	}
}

class SuperiorAcidRainPillar : AcidRainPillar
{
	default
	{
		Tag "Superior Acid Rain";
		Speed 20;
		DamageFunction (128+random(-72,72));
	}

	States
	{
		Spawn:
			FX22 A 0 Bright Nodelay { A_StartSound("misc/rain"); }
		Idle:
			FX22 A -1 Bright;
			Stop;
		Death:
			FX22 B 0 Bright A_JumpIf(pos.z > floorz,"NotFloor");
			FX22 B 4 Bright A_Jump(144,2);
			FX22 C 4 Bright A_Explode(64+random(-36,36),32,0);
			FX22 D 4 Bright;
			FX22 E 4 Bright;
			FX22 F 4 Bright;
			Stop;
		NotFloor:
			FX22 G 4 Bright A_Explode(64+random(-36,36),32,0);
			FX22 H 4 Bright;
			FX22 I 4 Bright;
			Stop;
	}
}

class AcidRain : HornRodFX2Base
{
	default
	{
		Tag "Acid Rain";
		DamageType "Magic";
		MaxTargetRange 16;
		+FLOORCLIP;
		+SEEKERMISSILE;
		+NODAMAGETHRUST;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+FORCERADIUSDMG;
		+SPECTRAL;
		+DONTREFLECT;
		species "Players";
		DamageFunction (64+random(-36,36));
		Speed 22;
		Radius 2;
		Height 8;
	}
	
	States
	{
		Spawn:
			FX00 C 0 Bright NoDelay A_ScaleVelocity(1.25);
			FX00 CDEF 3 Bright A_SeekerMissile(10,30,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,96,32);
			goto Spawn+1;
		Death:
			FX00 H 5 Bright; // A_AddPlayerRain();
			FX00 I 5 Bright A_Explode(32+random(-18,18),64,0);
			FX00 J 4 Bright;
			FX00 KLM 3 Bright;
			FX00 G 1 A_HideInCeiling();
			FX00 G 1 A_SkullRodStorm("AcidRainPillar", 128,128, 240,240,90,90, 33,33,10,10, 3,3,2,2, 1,1,1,1);
			Wait;
	}
}

class SuperiorAcidRain : AcidRain
{
	default
	{
		Tag "Superior Acid Rain";
		DamageFunction (256+random(-144,144));
		Speed 34;
	}
	States
	{
		Spawn:
			FX00 C 0 Bright NoDelay A_ScaleVelocity(1.5);
			FX00 CDEF 3 Bright A_SeekerMissile(20,60,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,128,48);
			goto Spawn+1;
		Death:
			FX00 H 5 Bright; // A_AddPlayerRain();
			FX00 I 5 Bright A_Explode(128+random(-72,72),128,0);
			FX00 J 4 Bright;
			FX00 KLM 3 Bright;
			FX00 G 1 A_HideInCeiling();
			FX00 G 1 A_SkullRodStorm("SuperiorAcidRainPillar", 128,128, 256,256,128,128, 64,64,16,16, 8,8,4,4, 2,2,1,1);
			Wait;
	}
}

//* Poison Cloud
//***************
class MinorPoisonCloud : AetheriusDoomSpellZSC
{
	int user_spawncloudheight;
	default
	{
		Tag "Minor Poison Cloud";
		Mass 0x7FFFFFFD;
		+FLOORCLIP;
		+NOBLOCKMAP;
		+NOGRAVITY;
		+DROPOFF;
		+NODAMAGETHRUST;
		+DONTSPLASH;
		+FOILINVUL;
		+CANBLAST;
		+BLOODLESSIMPACT;
		+BLOCKEDBYSOLIDACTORS;
		+SPECTRAL;
		+DONTREFLECT;
		RenderStyle "Translucent";
		Alpha 0.6;
		DeathSound "PoisonShroomDeath";
		//DamageType PoisonCloud;
		speed 21;
		reactiontime 11;
		DamageType "Magic";
		DamageType "PoisonElemental";
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+PIERCEARMOR;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+NODAMAGETHRUST;
		+RIPPER;
		+BLOODLESSIMPACT;
		+FLOATBOB;
		+PAINLESS;
		species "Players";
		PROJECTILE;
		Radius 2;
		Height 8;
		RenderStyle "Add";
		Alpha 0.667;
	}
	
	States
	{
		Spawn:
			PSBG D 1;
			PSBG D 1 A_Scream();
			PSBG D 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG D 1
			{
				A_Countdown();
			}

			PSBG E 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG E 1
			{
				A_Countdown();
			}
			PSBG E 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG E 1
			{
				A_Countdown();
			}
			PSBG E 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG E 1;
			PSBG E 1
			{
				A_Countdown();
			}

			PSBG F 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG F 1
			{
				A_Countdown();
			}
			PSBG F 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG F 1
			{
				A_Countdown();
			}
			PSBG F 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG F 1
			{
				A_Countdown();
			}

			PSBG G 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG G 1
			{
				A_Countdown();
			}
			PSBG G 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG G 1
			{
				A_Countdown();
			}
			PSBG G 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG G 1
			{
				A_Countdown();
			}

			PSBG H 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG H 1
			{
				A_Countdown();
			}
			PSBG H 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG H 1
			{
				A_Countdown();
			}
			PSBG H 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG H 1
			{
				A_Countdown();
			}

			PSBG I 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG I 1
			{
				A_Countdown();
			}
			PSBG I 1
			{
				A_GetPoisonCloudDMG(0);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG I 1
			{
				A_Countdown();
			}

			PSBG I 2; // A_PoisonBagCheck();
			PSBG I 1; // A_PoisonBagCheck();
			Goto Spawn+3;
		Death:
			PSBG H 0 A_JumpIf(pos.z < floorz+16,"DisperseGround");
			PSBG H 0 A_JumpIf(pos.z > ceilingz-16,"DisperseCeiling");
			goto DisperseNormal;
		DisperseNormal:
			PSBG H 0 { user_spawncloudheight = 0; }
			goto DisperseRest;
		DisperseGround:
			PSBG H 0 { user_spawncloudheight = 16; }
			goto DisperseRest;
		DisperseCeiling:
			PSBG H 0 { user_spawncloudheight = -16; }
			goto DisperseRest;
		DisperseRest:
			PSBG H 0
			{
				A_SpawnItemEx("HexenPoisonCloud1",0,0,user_spawncloudheight);
				A_Destroy();
			}
			Stop;
	}
}

class NormalPoisonCloud : MinorPoisonCloud
{
	default
	{
		Tag "Poison Cloud";
	}
	
	States
	{
		Spawn:
			PSBG D 1;
			PSBG D 1 A_Scream();
			PSBG D 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG D 1 A_Countdown();

			PSBG E 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG E 1 A_Countdown();
			PSBG E 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG E 1 A_Countdown();
			PSBG E 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG E 1 A_Countdown();

			PSBG F 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG F 1 A_Countdown();
			PSBG F 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG F 1 A_Countdown();
			PSBG F 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG F 1 A_Countdown();

			PSBG G 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG G 1 A_Countdown();
			PSBG G 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG G 1 A_Countdown();
			PSBG G 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG G 1 A_Countdown();

			PSBG H 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG H 1 A_Countdown();
			PSBG H 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG H 1 A_Countdown();
			PSBG H 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG H 1 A_Countdown();

			PSBG I 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG I 1 A_Countdown();
			PSBG I 1 
			{
				A_GetPoisonCloudDMG(1);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG I 1 A_Countdown();

			PSBG I 2; //A_PoisonBagCheck();
			PSBG I 1; //A_PoisonBagCheck();
			Goto Spawn+3;
		Death:
			PSBG H 0 A_JumpIf(pos.z < floorz+16,"DisperseGround");
			PSBG H 0 A_JumpIf(pos.z > ceilingz-16,"DisperseCeiling");
			goto DisperseNormal;
		DisperseNormal:
			PSBG H 0 { user_spawncloudheight = 0; }
			goto DisperseRest;
		DisperseGround:
			PSBG H 0 { user_spawncloudheight = 16; }
			goto DisperseRest;
		DisperseCeiling:
			PSBG H 0 { user_spawncloudheight = -16; }
			goto DisperseRest;
		DisperseRest:
			PSBG H 0
			{
				A_SpawnItemEx("HexenPoisonCloud2Source",0,0,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud2Outer",-32,0,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud2Outer",0,-32,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud2Outer",32,0,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud2Outer",0,32,user_spawncloudheight);
				A_Destroy();
			}
			Stop;
	}
}

class MajorPoisonCloud : MinorPoisonCloud
{
	default
	{
		Tag "Major Poison Cloud";
	}
	
	States
	{
		Spawn:
			PSBG D 1;
			PSBG D 1 A_StartSound("PoisonShroomDeath");

			PSBG D 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG D 1 A_Countdown();

			PSBG E 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG E 1 A_Countdown();
			PSBG E 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG E 1 A_Countdown();
			PSBG E 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG E 1 A_Countdown();

			PSBG F 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG F 1 A_Countdown();
			PSBG F 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG F 1 A_Countdown();
			PSBG F 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG F 1 A_Countdown();

			PSBG G 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG G 1 A_Countdown();
			PSBG G 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG G 1 A_Countdown();
			PSBG G 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG G 1 A_Countdown();

			PSBG H 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG H 1 A_Countdown();
			PSBG H 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG H 1 A_Countdown();
			PSBG H 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG H 1 A_Countdown();

			PSBG I 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG I 1 A_Countdown();
			PSBG I 1 
			{
				A_GetPoisonCloudDMG(2);
				A_Explode((finaldamagedealt),40,0,0,10); // A_PoisonBagDamage
				A_Countdown();
			}
			PSBG I 1 A_Countdown();

			PSBG I 2; //A_PoisonBagCheck();
			PSBG I 1; //A_PoisonBagCheck();
			Goto Spawn+3;
		Death:
			PSBG H 0 A_JumpIf(pos.z < floorz+16,"DisperseGround");
			PSBG H 0 A_JumpIf(pos.z > ceilingz-16,"DisperseCeiling");
			goto DisperseNormal;
		DisperseNormal:
			PSBG H 0 { user_spawncloudheight = 0; }
			goto DisperseRest;
		DisperseGround:
			PSBG H 0 { user_spawncloudheight = 16; }
			goto DisperseRest;
		DisperseCeiling:
			PSBG H 0 { user_spawncloudheight = -16; }
			goto DisperseRest;
		DisperseRest:
			PSBG H 0
			{
				A_SpawnItemEx("HexenPoisonCloud3Source",0,0,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",-32,0,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",0,-32,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",32,0,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",0,32,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",-64,0,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",-32,-32,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",0,-64,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",32,-32,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",64,0,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",32,32,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",0,64,user_spawncloudheight);
				A_SpawnItemEx("HexenPoisonCloud3Outer",-32,32,user_spawncloudheight);
			}
			Stop;
	}
}

// Poison Cloud Draw in Particle
class PoisonCloudParticle : AetheriusBaseZSC
{
	default
	{
		Speed 0;
		Height 1;
		Radius 1;
		Damage 0;
		RenderStyle "Add";
		Alpha 0.3;
		Scale 1.5;
		+NOTIMEFREEZE;
		+NOINTERACTION;
		+FORCEXYBILLBOARD;
		+CLIENTSIDEONLY;
	}
	
	States
	{
		Spawn:
			TGLT U 0 BRIGHT NoDelay
			{
				A_SetScale(frandom(0.6,0.9));
			}
		Idle:
			TNGT MMNN 1 BRIGHT // TGLT VWXW 1 BRIGHT
			{
				If (Alpha >= 0.6) { return resolvestate("Death"); } else { A_FadeIn(0.06); }
				return resolvestate(null); 
			}
			Loop;
		Death:
			TNGT OOPP 1 BRIGHT // TGLT VWXW 1 BRIGHT
			{
				A_FadeOut(0.06);
			}
			Loop;
	}
}

class PoisonCloudParticle2 : PoisonCloudParticle
{
	default
	{
		Alpha 0.4;
	}
	
	States
	{
		Spawn:
			TGLT U 0 BRIGHT NoDelay
			{
				A_SetScale(frandom(0.75,1.175));
			}
		Idle:
			TNGT MMNN 1 BRIGHT // TGLT VWXW 1 BRIGHT
			{
				If (Alpha >= 0.8) { return resolvestate("Death"); } else { A_FadeIn(0.08); }
				return resolvestate(null);  
			}
			Loop;
		Death:
			TNGT OOPP 1 BRIGHT // TGLT VWXW 1 BRIGHT
			{
				A_FadeOut(0.08);
			}
			Loop;
	}
}

class PoisonCloudParticle3 : PoisonCloudParticle
{
	default
	{
		Alpha 0.5;
	}
	
	States
	{
		Spawn:
			TGLT U 0 BRIGHT NoDelay
			{
				A_SetScale(frandom(0.9,1.35));
			}
		Idle:
			TNGT MMNN 1 BRIGHT // TGLT VWXW 1 BRIGHT
			{
				If (Alpha >= 1.0) { return resolvestate("Death"); } else { A_FadeIn(0.1); }
				return resolvestate(null);  
			}
			Loop;
		Death:
			TNGT OOPP 1 BRIGHT // TGLT VWXW 1 BRIGHT
			{
				A_FadeOut(0.1);
			}
			Loop;
	}
}

class HexenPoisonCloud1 : AetheriusDoomSpellZSC // First and Only Cloud for the Dropped Minor Poison Cloud Spell
{
	int user_spawncloudheight;
	double user_distance;
	int user_duration;
	int user_hisssoundtimer;
	default
	{
		Tag "Minor Poison Cloud";
		Mass 0x7FFFFFFD;
		RenderStyle "Translucent";
		// DamageType PoisonCloud;
		reactiontime 11;
		DamageType "Magic";
		DamageType "PoisonElemental";
		species "Players";
		PROJECTILE;
		Radius 2;
		Height 8;
		RenderStyle "Add";
		Alpha 0.667;
		HitObituary "%o choked on a poisonous gas cloud.";
		Obituary "%o choked on a poisonous gas cloud.";
		+FLOORCLIP;
		+NOBLOCKMAP;
		+NOGRAVITY;
		+DROPOFF;
		+NODAMAGETHRUST;
		+PIERCEARMOR;
		+DONTSPLASH;
		+FOILINVUL;
		+CANBLAST;
		+BLOODLESSIMPACT;
		+BLOCKEDBYSOLIDACTORS;
		+ACTIVATEIMPACT;
		+ACTIVATEPCROSS;
		+FORCERADIUSDMG;
		+MTHRUSPECIES;
		+THRUSPECIES;
		+NODAMAGETHRUST;
		+RIPPER;
		+BLOODLESSIMPACT;
		+FLOATBOB;
		+PAINLESS;
		+SPECTRAL;
		+DONTREFLECT;
	}
	
	States
	{
		Spawn:
			PSBG D 1;
			PSBG D 1 A_StartSound("PoisonShroomDeath");

			PSBG DEEEFFFGGGHHHII 2
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(4,7))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss1", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.9,1.1), frandom(0.00,0.15));
				}
				A_RadiusThrust(A_GetPSNCloudVortexSTR(0),A_GetPSNCloudVortexDIST(0),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(0,1));
				A_RadiusThrust(A_GetPSNCloudVortexSTR(0,1),A_GetPSNCloudVortexDIST(0,0,0,1),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(0,1,0,1));
				A_Explode(A_GetPoisonCloudDMG(3),A_GetPSNCloudDmgRad(0,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(0,1));

				user_distance = A_GetPSNCloudVortexDIST(0,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );
			}
			PSBG I 2 
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(4,7))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss1", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.9,1.1), frandom(0.00,0.15));
				}
				A_RadiusThrust(A_GetPSNCloudVortexSTR(0),A_GetPSNCloudVortexDIST(0),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(0,1));
				A_RadiusThrust(A_GetPSNCloudVortexSTR(0,1),A_GetPSNCloudVortexDIST(0,0,0,1),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(0,1,0,1));
				A_Explode(A_GetPoisonCloudDMG(3),A_GetPSNCloudDmgRad(0,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(0,1));

				user_distance = A_GetPSNCloudVortexDIST(0,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );
				A_Countdown();
			}
			PSBG I 1 A_Countdown();
			Goto Spawn+4;
		Death:
			PSBG HG 7;
			PSBG FD 6;
			Stop;
	}
}

class HexenPoisonCloud2Source : HexenPoisonCloud1 // Center Cloud for the Dropped (Normal) Poison Cloud Spell [the one with a vortex]
{
	default
	{
		Tag "Poison Cloud";
	}
	States
	{
		Spawn:
			PSBG D 1;
			PSBG D 1 A_StartSound("PoisonShroomDeath");

			PSBG DEEEFFFGGGHHHII 2
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(4,7))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss2", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.85,1.15), frandom(0.00,0.15));
				}
				A_RadiusThrust(A_GetPSNCloudVortexSTR(1),A_GetPSNCloudVortexDIST(1),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(1,1));
				A_RadiusThrust(A_GetPSNCloudVortexSTR(1,1),A_GetPSNCloudVortexDIST(1,0,0,1),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(1,1,0,1));
				A_Explode(A_GetPoisonCloudDMG(4),A_GetPSNCloudDmgRad(1,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(1,1));

				user_distance = A_GetPSNCloudVortexDIST(1,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle2", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );

				user_distance = A_GetPSNCloudVortexDIST(1,0,1);
				user_distance = VortDistance;
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle2", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );
			}
			PSBG I 2 
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(4,7))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss2", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.85,1.15), frandom(0.00,0.15));
				}
				A_RadiusThrust(A_GetPSNCloudVortexSTR(1),A_GetPSNCloudVortexDIST(1),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(1,1));
				A_RadiusThrust(A_GetPSNCloudVortexSTR(1,1),A_GetPSNCloudVortexDIST(1,0,0,1),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(1,1,0,1));
				A_Explode(A_GetPoisonCloudDMG(4),A_GetPSNCloudDmgRad(1,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(1,1));

				user_distance = A_GetPSNCloudVortexDIST(1,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle2", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );

				user_distance = A_GetPSNCloudVortexDIST(1,0,1);
				user_distance = VortDistance;
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle2", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );
				A_Countdown();
			}
			PSBG I 1 A_Countdown();
			Goto Spawn+4;
		Death:
			PSBG HG 7;
			PSBG FD 6;
			Stop;
	}
}

class HexenPoisonCloud2Outer : HexenPoisonCloud1 // Outer Clouds for the Dropped (Normal) Poison Cloud Spell [does not have a vortex/pull]
{
	default
	{
		Tag "Poison Cloud";
	}
	
	States
	{
		Spawn:
			PSBG D 1;
			PSBG D 1 A_StartSound("PoisonShroomDeath");

			PSBG DEEEFFFGGGHHHII 2 
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(5,8))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss1", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.9,1.1), frandom(0.15,0.30));
				}
				A_Explode(A_GetPoisonCloudDMG(4),A_GetPSNCloudDmgRad(1,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(1,1));
			}
			PSBG I 2 
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(5,8))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss1", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.9,1.1), frandom(0.15,0.30));
				}
				A_Explode(A_GetPoisonCloudDMG(4),A_GetPSNCloudDmgRad(1,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(1,1));
				A_Countdown();
			}
			PSBG I 1 A_Countdown();
			Goto Spawn+4;
		Death:
			PSBG HG 7;
			PSBG FD 6;
			Stop;
	}
}

class HexenPoisonCloud3Source : HexenPoisonCloud2Source
{
	default
	{
		Tag "Major Poison Cloud";
	}
	
	States
	{
		Spawn:
			PSBG D 1;
			PSBG D 1 A_StartSound("PoisonShroomDeath");

			PSBG DEEEFFFGGGHHHII 2
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(4,7))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss3", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.825,1.175), frandom(0.00,0.15));
				}
				A_RadiusThrust(A_GetPSNCloudVortexSTR(2),A_GetPSNCloudVortexDIST(2),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(2,1));
				A_RadiusThrust(A_GetPSNCloudVortexSTR(2,1),A_GetPSNCloudVortexDIST(2,0,0,1),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(2,1,0,1));
				A_Explode(A_GetPoisonCloudDMG(5),A_GetPSNCloudDmgRad(2,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(2,1));

				user_distance = A_GetPSNCloudVortexDIST(2,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle3", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );

				user_distance = A_GetPSNCloudVortexDIST(2,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle3", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );

				user_distance = A_GetPSNCloudVortexDIST(2,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle3", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );

				user_distance = A_GetPSNCloudVortexDIST(2,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle3", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );
			}
			PSBG I 2 
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(4,7))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss3", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.825,1.175), frandom(0.00,0.15));
				}
				A_RadiusThrust(A_GetPSNCloudVortexSTR(2),A_GetPSNCloudVortexDIST(2),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(2,1));
				A_RadiusThrust(A_GetPSNCloudVortexSTR(2,1),A_GetPSNCloudVortexDIST(2,0,0,1),RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,A_GetPSNCloudVortexDIST(2,1,0,1));
				A_Explode(A_GetPoisonCloudDMG(5),A_GetPSNCloudDmgRad(2,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(2,1));

				user_distance = A_GetPSNCloudVortexDIST(2,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle3", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );

				user_distance = A_GetPSNCloudVortexDIST(2,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle3", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );

				user_distance = A_GetPSNCloudVortexDIST(2,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle3", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );

				user_distance = A_GetPSNCloudVortexDIST(2,0,1);
				user_duration = 15; // 24
				A_SetPitch(frandom(-90,90));
				A_SpawnItemEx("PoisonCloudParticle3", -user_distance * cos( pitch ), 0, -user_distance * sin( pitch ), ( user_distance / user_duration ) * cos( pitch ), 0, ( user_distance / user_duration ) * sin ( pitch ), frandom( 0, 360 ) );
				A_Countdown();
			}
			PSBG I 1 A_Countdown();
			Goto Spawn+4;
		Death:
			PSBG HG 7;
			PSBG FD 6;
			Stop;
	}
}

class HexenPoisonCloud3Outer : HexenPoisonCloud2Outer
{
	default
	{
		Tag "Major Poison Cloud";
	}
	
	States
	{
		Spawn:
			PSBG D 1;
			PSBG D 1 A_StartSound("PoisonShroomDeath");

			PSBG DEEEFFFGGGHHHII 2
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(5,8))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss2", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.85,1.15), frandom(0.075,0.225));
				}
				A_Explode(A_GetPoisonCloudDMG(5),A_GetPSNCloudDmgRad(2,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(2,1));
			}
			PSBG I 2 
			{
				user_hisssoundtimer += 1;
				if (user_hisssoundtimer >= random(5,8))
				{
					user_hisssoundtimer = 0;
					A_StartSound("PoisonCloudHiss2", 21, CHANF_DEFAULT, frandom(0.90,1.1), ATTN_NORM, frandom(0.85,1.15), frandom(0.075,0.225));
				}
				A_Explode(A_GetPoisonCloudDMG(5),A_GetPSNCloudDmgRad(2,0),XF_HURTSOURCE,0,A_GetPSNCloudDmgRad(2,1));
				A_Countdown();
			}
			PSBG I 1 A_Countdown();
			Goto Spawn+4;
		Death:
			PSBG HG 7;
			PSBG FD 6;
			Stop;
	}
}
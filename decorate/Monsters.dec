//********************
//**Revised Monsters**
//********************
// Suicide Bomber
actor SuicideBomber : AetheriusMonsterZSC 26528
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Others"
	Tag "Suicide Bomber"
	
	health 80
	radius 20
	height 56
	Mass 100
	speed 16
	PainChance 20 
	Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 1.0 // 8.0

	MONSTER
	+FLOORCLIP
	+JUMPDOWN
	+NOFEAR
	-NOTARGET
	-NOTARGETSWITCH
	-NEVERTARGET
	-NOINFIGHTING
	seesound "suicide/sit"
	attacksound "shotguy/death"
	painsound "shotguy/pain"
	deathsound "shotguy/death"
	obituary "%o was exploded by a crazy suicide bomber."
	DamageType "Explosive"

	dropitem DoomSpellMana 32
	dropitem DoomSpellMana 8
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	states
	{
		Spawn:
			BMBE A 0 NoDelay 
			BMBE AB 10 A_Look
			goto Spawn+1
		See:
			BMBE A 0
			BMBE AAABBBCCCDDD 2
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(1); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			BMBE A 0 A_StartSound("suicide/scream")
			loop

		Melee:
			TNT1 A 0 A_Die
			Goto Death

		Pain:
			BMBE A 3
			BMBE A 3 A_DVDSPain
			goto See
		Pain.Fist:
			BMBE A 3
			BMBE A 3 A_DVDSPain
			BMBE AA 3
			goto See
		Pain.Kick:
			BMBE A 3
			BMBE A 3 A_DVDSPain
			BMBE AAAA 3
			goto See

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			BMBE M 5 bright 
			{
				if (user_monsterlevel > 540)
				{
					if (random(1,2) <= 1) 
					{
						if (random(1,4) <= 1) { A_SpawnProjectile("SuicideBombUltra",0,0,0,0); }
						else { A_SpawnProjectile("SuicideBombStrong",0,0,0,0); }
					}
					else 
					{ 
						if (random(1,4) <= 3) { A_SpawnProjectile("SuicideBombStrong",0,0,0,0); }
						else { A_SpawnProjectile("SuicideBombStrong",0,0,0,0); }
					}
				}
				else
				if (user_monsterlevel > 135)
				{
					if (random(1,4) <= 3) { A_SpawnProjectile("SuicideBombStrong",0,0,0,0); }
					else { A_SpawnProjectile("SuicideBombStrong",0,0,0,0); }
				}
				else
				{
					if (random(1,16) <= 1) { A_SpawnProjectile("SuicideBombStrong",0,0,0,0); }
					else { A_SpawnProjectile("SuicideBombStrong",0,0,0,0); }
				}
			}
			BMBE N 5 bright A_XScream
			BMBE O 5 A_NoBlocking
			BMBE PQRST 5
			TNT1 A 0 
			BMBE U -1
			stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			BMBE D 5 A_GenericFreezeDeath
			BMBE D 1 A_FreezeDeathChunks
			wait
		Raise:
			BMBE T 5 
			BMBE SRQPONM 5
			Goto See
	}
}

actor DSDoomImp : AetheriusMonsterZSC 26515
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/DoomImp Type"
	Tag "Imp"

	Health 60
	Radius 20
	Height 56
	Mass 100
	Speed 8
	Painchance 200
	Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.8 // 6.4
	DamageFactor "Fire", 0.5 // Imps = -50% Fire Damage
	Painchance "Fire", 100 // Imps = -50% Pain Chance
	DamageFactor "Holy", 1.5 // Imps = +50% Holy Damage
	Painchance "Holy", 255 // Imps = +50% Pain Chance

	Species "Imp"
	Monster
	+FLOORCLIP
	+DONTHARMSPECIES
	SeeSound "imp/sight"
	PainSound "imp/pain"
	DeathSound "imp/death"
	ActiveSound "imp/active"
	HitObituary "$OB_IMPHIT"
	Obituary "$OB_IMP"

	dropitem DoomSpellMana 16
	dropitem Stimpack 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	states
	{
		Spawn:
			TROO A 0 NoDelay 
			TROO AB 10 A_Look
			goto Spawn+1
		See:
			TROO A 0
			TROO AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop

		Melee:
		Missile:
			TNT1 A 0
			{
				if (levelbehavior && user_monsterlevel > 60) { return state("Missile2"); }
				return state("Missile1");
			}
		Missile1:
			TROO EF 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;
			}
		goto MissileEnd
		Missile2:
			IMP3 AB 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;
			}
		goto MissileEnd
		MissileEnd:
			TROO G 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;

				A_MonsterCrisisCheck; // Combo Attack
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisComboAttack("BelphegorBall", "BelphegorBallCrisis", 32, (12.5*random(1,8)), "imp/melee"); }
				else if (levelbehavior && user_monsterlevel > 120) { A_CrisisComboAttack("BaronOfHellBall", "BaronOfHellBallCrisis", 32, (random(10,15)*random(1,8)), "imp/melee"); }
				else if (levelbehavior && user_monsterlevel > 60) { A_CrisisComboAttack("HellKnightBall", "HellKnightBallCrisis", 32, (random(5,10)*random(1,8)), "imp/melee"); }
				else { A_CrisisComboAttack("DoomImpBall", "DoomImpBallCrisis", 32, (3*random(1,8)), "imp/melee"); }       
			}
			goto See

		Pain:
			TROO H 2
			TROO H 2 A_DVDSPain
			Goto See
		Pain.Fist:
			TROO H 2
			TROO H 2 A_DVDSPain
			TROO HH 2
			Goto See
		Pain.Kick:
			TROO H 2
			TROO H 2 A_DVDSPain
			TROO HHHH 2
			Goto See

		Pain.Holy:
			TROO H 2
			TROO H 2 A_DVDSPain
			TROO H 2
			TROO H 2
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			TROO I 8
			TROO J 8 A_Scream
			TROO K 6
			TROO L 6 A_NoBlocking
			TNT1 A 0 
			TROO M -1
			stop
		XDeath:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			TROO N 5
			TROO O 5 A_XScream
			TROO P 5
			TROO Q 5 A_NoBlocking
			TROO RST 5
			TNT1 A 0 
			TROO U -1
			stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			TROO H 5 A_GenericFreezeDeath
			TROO H 1 A_FreezeDeathChunks
			wait
		Raise:
			TROO M 8 
			TROO L 8
			TROO KJI 6
			goto See
	}
}
actor DSLostSoul : AetheriusMonsterZSC
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Others"
	Tag "Lost Soul"

	Health 100
	Radius 16
	Height 56
	Mass 50
	Speed 8
	damage 3
	meleerange 80
	ReactionTime 8
	Painchance 255
	Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.9 // 7.2
	DamageFactor "Ice", 1.5 // Lost Souls = +50% Ice Damage
	Painchance "Ice", 255
	DamageFactor "Fire", 0.2 // Lost Souls = -80% Fire Damage
	Painchance "Fire", 51 // Lost Souls = -80% Pain Chance
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance
	Monster
	+FLOAT
	+NOGRAVITY
	+MISSILEMORE
	+DONTFALL
	+NOICEDEATH
	AttackSound "skull/melee"
	PainSound "skull/pain"
	DeathSound "skull/death"
	ActiveSound "skull/active"
	RenderStyle "SoulTrans"
	Obituary "$OB_SKULL" // "%o was spooked by a lost soul."

	dropitem DoomSpellMana 16
	dropitem SoulSphere2 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem RockBombShard 2
	dropitem RockBombShard 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	states
	{
		Spawn:
			SKUL A 0 NoDelay 
			SKUL A 0 A_UnSetDmgWeaknesses
			SKUL AB 10 BRIGHT A_Look
			goto Spawn+1
		See:
			SKUL A 0
			{
				A_UnSetDmgWeaknesses;
				if (health <= user_HPLowRange)
				{
					bNOFEAR = true;
					bCANTSEEK = true;
					bNOINFIGHTING = true;
					bTHRUSPECIES = true;
					bDONTHARMSPECIES = true;
					bNORADIUSDMG = true;
					if (health <= user_HPCritRange)
					{
						bVISIBILITYPULSE = true;
						bDONTRIP = true;
						bDONTSQUASH = true;
						bDONTMORPH = true;
						bDONTBLAST = true;
					}
					else
					{
						bVISIBILITYPULSE = false;
						bDONTRIP = false;
						bDONTSQUASH = false;
						bDONTMORPH = false;
						bDONTBLAST = false;
					}
				}
				else
				{
					bNOFEAR = false;
					bCANTSEEK = false;
					bNOINFIGHTING = false;
					bTHRUSPECIES = false;
					bDONTHARMSPECIES = false;
					bNORADIUSDMG = false;
				}
			}
			SKUL AB 6 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 45) { A_SetTics(5); }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(4); }

				A_FastChaseCalc(3,24);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			loop

		Missile:
			TNT1 A 0
			{
				user_painfastchase = 0;
			}
			SKUL C 10 BRIGHT
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(9); }
			}
			SKUL D 4 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
	
				A_LostSoulChargeWeakness;
				A_MonsterCrisisCheck; // SkullAttack
				if (user_canusecrisisatk == 1)
				{
					A_PlayCrisisAtkSound;
					A_SkullAttack(25);
				}
				else
				{
					A_SkullAttack(20);
				}
			}
			SKUL CCDD 2 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 180) { A_FaceTarget; }
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
	
				A_MonsterCrisisCheck; // Adds a Single Melee Attack to the SkullAttack
				if (user_canusecrisisatk == 1) { A_CustomMeleeAttack(random(1,8)*3,"none","none","Melee",true); }
			}
			Goto Missile+3

		Pain:
			SKUL E 0 Bright
			{
				A_UnSetDmgWeaknesses;
			}
			SKUL E 3 Bright
			SKUL E 3 Bright
			{
				A_DVDSPain;
				user_painfastchase = 2 * random(1,8);
			}
			Goto See
		Pain.Fist:
			SKUL E 0 Bright
			{
				A_UnSetDmgWeaknesses;
			}
			SKUL E 3 Bright
			SKUL E 3 Bright
			{
				A_DVDSPain;
				user_painfastchase = 2 * random(1,8);
			}
			SKUL EE 3 Bright
			Goto See
		Pain.Kick:
			SKUL E 0 Bright
			{
				A_UnSetDmgWeaknesses;
			}
			SKUL E 3 Bright
			SKUL E 3 Bright
			{
				A_DVDSPain;
				user_painfastchase = 3 * random(1,8);
			}
			SKUL EEEE 3 Bright
			Goto See

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SKUL F 0 Bright A_UnSetDmgWeaknesses
			SKUL F 6 BRIGHT
			SKUL G 6 BRIGHT A_Scream
			SKUL H 6 BRIGHT
			SKUL I 6 BRIGHT A_NoBlocking
			SKUL J 6
			SKUL K 6
			TNT1 A 0 
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			SKUL Z 5 A_GenericFreezeDeath
			SKUL Z 1 A_FreezeDeathChunks
			wait
	}
}

actor DSLostSoul2 : DSLostSoul 22433
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Others"
	Tag "Annoying Lost Soul"

	health 125
	damage 4
	speed 10
	meleerange 80
	Mass 75
	ReactionTime 4
	Painchance 160
	Painchance "Fist", 240 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 240 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor 0.75
	DamageFactor "Crush", 0.9 // 7.2
	DamageFactor "Ice", 1.5 // Lost Souls = +50% Ice Damage
	Painchance "Ice", 255
	DamageFactor "Fire", 0.2 // Lost Souls = -80% Fire Damage
	Painchance "Fire", 38 // Lost Souls = -80% Pain Chance
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance
	AttackSound "skull/melee2"
	PainSound "skull/pain"
	DeathSound "skull/death"
	ActiveSound "skull/active"
	RenderStyle "SoulTrans"
	Obituary "%o was spooked by an annoying lost soul."
	+MISSILEEVENMORE
	-MISSILEMORE
	dropitem DoomSpellMana 16
	dropitem DoomSpellMana 4
	dropitem SoulSphere2 4
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem RockBombShard 2
	dropitem RockBombShard 2
	dropitem RockBombShard 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	states
	{
		Spawn:
			SKUL A 0 NoDelay 
			SKUL A 0 A_UnSetDmgWeaknesses
			SKUL AB 10 BRIGHT A_Look
			goto Spawn+1
		See:
			SKUL A 0
			{
				A_UnSetDmgWeaknesses;
				if (health <= user_HPLowRange)
				{
					bNOFEAR = true;
					bCANTSEEK = true;
					bNOINFIGHTING = true;
					bTHRUSPECIES = true;
					bDONTHARMSPECIES = true;
					bNORADIUSDMG = true;
					if (health <= user_HPCritRange)
					{
						bVISIBILITYPULSE = true;
						bDONTRIP = true;
						bDONTSQUASH = true;
						bDONTMORPH = true;
						bDONTBLAST = true;
					}
					else
					{
						bVISIBILITYPULSE = false;
						bDONTRIP = false;
						bDONTSQUASH = false;
						bDONTMORPH = false;
						bDONTBLAST = false;
					}
				}
				else
				{
					bNOFEAR = false;
					bCANTSEEK = false;
					bNOINFIGHTING = false;
					bTHRUSPECIES = false;
					bDONTHARMSPECIES = false;
					bNORADIUSDMG = false;
				}
			}
			SKUL AABB 3 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(3,24);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			loop

		Missile:
			TNT1 A 0
			{
				user_painfastchase = 0;
			}
			SKUL C 8 BRIGHT
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
			}
			SKUL D 4 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }

				A_LostSoulChargeWeakness;
				A_MonsterCrisisCheck; // SkullAttack
				if (user_canusecrisisatk == 1)
				{
					A_PlayCrisisAtkSound;
					A_SkullAttack(36);
				}
				else
				{
					A_SkullAttack(30);
				}
			}
			SKUL CCDD 2 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 180) { A_FaceTarget; }
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
	
				A_MonsterCrisisCheck; // Adds a Single Melee Attack to the SkullAttack
				if (user_canusecrisisatk == 1) { A_CustomMeleeAttack(random(1,8)*4,"none","none","Melee",true); }
			}
			Goto Missile+3

		Pain:
			SKUL E 0 Bright
			{
				A_UnSetDmgWeaknesses;
			}
			SKUL E 3 Bright
			SKUL E 3 Bright
			{
				A_DVDSPain;
				user_painfastchase = 3 * random(1,8);
			}
			Goto See
		Pain.Fist:
			SKUL E 0 Bright
			{
				A_UnSetDmgWeaknesses;
			}
			SKUL E 3 Bright
			SKUL E 3 Bright
			{
				A_DVDSPain;
				user_painfastchase = 3 * random(1,8);
			}
			SKUL EE 3 Bright
			Goto See
		Pain.Kick:
			SKUL E 0 Bright
			{
				A_UnSetDmgWeaknesses;
			}
			SKUL E 3 Bright
			SKUL E 3 Bright
			{
				A_DVDSPain;
				user_painfastchase = 4 * random(1,8);
			}
			SKUL EEEE 3 Bright
			Goto See

		Death:
			TNT1 A 0 
			{
				A_Explode(64,64,0,0,(random(1,4)*8));
				A_DVDSNormalDeath(-2,0,1);
			}
			SKUL F 0 Bright A_UnSetDmgWeaknesses
			SKUL F 6 BRIGHT 
			SKUL G 6 BRIGHT A_Scream
			SKUL H 6 BRIGHT
			SKUL I 6 BRIGHT A_NoBlocking
			SKUL J 6
			SKUL K 6
			TNT1 A 0 
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			SKUL Z 5 A_GenericFreezeDeath
			SKUL Z 1 A_FreezeDeathChunks
			wait
	}
}

Actor ForgottenOne : AetheriusMonsterZSC 22547
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Others"
	Tag "Forgotten One"

	Obituary "A Forgotten One rammed %o off into the distance :V"
	Health 40
	Radius 14
	Height 30
	meleerange 80
	Mass 25
	Speed 8
	PainChance 115
	PainChance "Melee", 230
	PainChance "Fist", 230
	PainChance "Kick", 230
	PainChance "Gauntlets", 230
	PainChance "Chainsaw", 230
	PainChance "Sceptre", 230

	DamageFactor 0.25
	DamageFactor "Crush", 0.9 // 7.2
	DamageFactor "Ice", 1.5 // Lost Souls = +50% Ice Damage
	Painchance "Ice", 172
	DamageFactor "Fire", 0.2 // Lost Souls = -80% Fire Damage
	Painchance "Fire", 22 // Lost Souls = -80% Pain Chance
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 230 // Demons = +300% Pain Chance

	Damagefactor "Stomp", 0.667
	Damagefactor "Trample", 0.667
	DamageFactor "Melee", 0.667
	DamageFactor "Fist", 0.667
	DamageFactor "Kick", 0.667
	DamageFactor "Gauntlets", 0.667
	DamageFactor "Chainsaw", 0.667
	DamageFactor "Sceptre", 0.667
	Scale 0.7
	PainSound "Forgotten/Pain"
	DeathSound "Forgotten/Death"
	ActiveSound "Forgotten/Active"
	Damage 3
	Monster
	+FLOORCLIP
	+FLOAT
	+NOGRAVITY
	+NOICEDEATH
	+DONTFALL
	+FLOATBOB
	+NOBLOOD
	+NOTARGET
	+NOTARGETSWITCH
	+NOINFIGHTING
	States
	{
		Spawn:
			FRGO A 0 Bright NoDelay 
			{
				A_UnSetDmgWeaknesses;
				bFLOATBOB = true;
			}
			FRGO AAAAAABBBBBB 1 Bright A_Look
			Loop
		See:
			FRGO A 0 Bright
			{
				bFLOATBOB = true;
				A_UnSetDmgWeaknesses;
				if (health <= user_HPLowRange)
				{
					bNOFEAR = true;
					bCANTSEEK = true;
					bNOINFIGHTING = true;
					bTHRUSPECIES = true;
					bDONTHARMSPECIES = true;
					bNORADIUSDMG = true;
					if (health <= user_HPCritRange)
					{
						bVISIBILITYPULSE = true;
						bDONTRIP = true;
						bDONTSQUASH = true;
						bDONTMORPH = true;
						bDONTBLAST = true;
					}
					else
					{
						bVISIBILITYPULSE = false;
						bDONTRIP = false;
						bDONTSQUASH = false;
						bDONTMORPH = false;
						bDONTBLAST = false;
					}
				}
				else
				{
					bNOFEAR = false;
					bCANTSEEK = false;
					bNOINFIGHTING = false;
					bTHRUSPECIES = false;
					bDONTHARMSPECIES = false;
					bNORADIUSDMG = false;
				}
			}
			FRGO AABB 3 Bright 
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(6,12);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			Loop
		Missile:
			FRGO C 0
			{
				bFLOATBOB = false;
				user_painfastchase = 0;
			}
			FRGO CCDDC 2 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				A_FaceTarget;
			}
			FRGO D 2 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				A_StartSound("Forgotten/Attack");
				A_LostSoulChargeWeakness;

				A_MonsterCrisisCheck; // SkullAttack
				if (user_canusecrisisatk == 1)
				{
					A_PlayCrisisAtkSound;
					A_SkullAttack(24);
				}
				else
				{
					A_SkullAttack(20);
					A_SkullAttack;
				}
			}
			FRGO C 2 Bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				A_MonsterCrisisCheck; // Adds a Single Melee Attack to the SkullAttack
				if (user_canusecrisisatk == 1) { A_CustomMeleeAttack(random(1,8)*3,"none","none","Melee",true); }
			}
			FRGO C 0 Bright A_JumpIfTargetInLOS(4, (75+(user_monsterlevel/5)))
			FRGO C 0 A_Jump(24, "StopCharge")
			FRGO DC 2 Bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				A_MonsterCrisisCheck; // Adds a Single Melee Attack to the SkullAttack
				if (user_canusecrisisatk == 1) { A_CustomMeleeAttack(random(1,8)*3,"none","none","Melee",true); }
			}
			Goto Missile+9
			FRGO C 0 Bright
			Goto Missile+6
		StopCharge:
			FRGO C 0 A_Stop
			Goto See
		Pain:
			FRGO E 0 Bright
			{
				A_UnSetDmgWeaknesses;
				bFLOATBOB = true;
			}
			FRGO E 3 Bright
			FRGO E 3 Bright
			{
				A_DVDSPain;
				user_painfastchase = 6 * random(1,8);
			}
			Goto See
		Pain.Fist:
			FRGO E 0 Bright
			{
				A_UnSetDmgWeaknesses;
				bFLOATBOB = true;
			}
			FRGO E 3 Bright
			FRGO E 3 Bright
			{
				A_DVDSPain;
				user_painfastchase = 6 * random(1,8);
			}
			FRGO EE 3 Bright
			Goto See
		Pain.Kick:
			FRGO E 0 Bright
			{
				A_UnSetDmgWeaknesses;
				bFLOATBOB = true;
			}
			FRGO E 3 Bright
			FRGO E 3 Bright
			{
				A_DVDSPain;
				user_painfastchase = 8 * random(1,8);
			}
			FRGO EEEE 3 Bright
			Goto See
		Death:
			TNT1 A 0 
			{
				A_Explode(32,32,0,0,(random(1,4)*4));
				A_DVDSNormalDeath(-2,0,1);
			}
			FRGO E 0 Bright 
			FRGO E 0 
			{
				A_UnSetDmgWeaknesses;
				bFLOATBOB = false;
			}
			FRGO E 0 A_Stop
			FRGO E 4 Bright 
			FRGO F 4 Bright
			FRGO G 6 Bright A_Scream
			FRGO H 6 Bright
			FRGO I 6 Bright A_NoBlocking
			FRGO J 6 Bright
			Stop
	}
}

actor DSDemon : AetheriusMonsterZSC 26518
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/PinkyDemon Type"
	Tag "Pinky Demon"

	Health 150
	Speed 10
	Radius 30
	Height 56
	Mass 400
	Painchance 180
	Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.7 // 5.6
	DamageFactor "Fire", 0.9 // Pinkies = -10% Fire Damage
	Painchance "Fire", 162 // Pinkies = -10% Pain Chance
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance
	Monster
	Species "Pinky"
	+FLOORCLIP
	+DONTHURTSPECIES
	SeeSound "demon/sight"
	AttackSound "demon/melee"
	PainSound "demon/pain"
	DeathSound "demon/death"
	ActiveSound "demon/active"
	Obituary "%o was chomped up by a demon."
	dropitem DoomSpellMana 16
	dropitem Medikit 2
	dropitem GuardSphere 2
	dropitem GuardSphere 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	states
	{
		Spawn:
			SARG A 0 NoDelay 
			SARG AB 10 A_Look
			goto Spawn+1
		See:
			SARG A 0
			SARG AABBCCDD 2
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }

				if (levelbehavior && user_monsterlevel > 480) 
				{ 
					if (random(1,1) <= 1) { A_DVDSChase("Melee","Missile",0,1,3,1,1); } else { A_DVDSChase("Melee","",0,1,3,1,1); }
				} 
				else
				if (levelbehavior && user_monsterlevel > 360) 
				{ 
					if (random(1,2) <= 1) { A_DVDSChase("Melee","Missile",0,1,3,1,1); } else { A_DVDSChase("Melee","",0,1,3,1,1); }
				} 
				else
				if (levelbehavior && user_monsterlevel > 240) 
				{ 
					if (random(1,3) <= 1) { A_DVDSChase("Melee","Missile",0,1,3,1,1); } else { A_DVDSChase("Melee","",0,1,3,1,1); }
				} 
				else
				if (levelbehavior && user_monsterlevel > 120) 
				{ 
					if (random(1,4) <= 1) { A_DVDSChase("Melee","Missile",0,1,3,1,1); } else { A_DVDSChase("Melee","",0,1,3,1,1); }
				} 
				else { A_DVDSChase("Melee","",0); }
			}
			loop

		Missile:
			SARG AEF 4
			{
				if (GetDistance(true) <= 264)
				{ 
					if (levelbehavior && user_monsterlevel > 240) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
					A_FaceTarget; 
				} 
				else 
				{ 
					return state("See"); 
				}
				return state("");
			}
		MissileLoop:
			SARG F 3 // 4
			{
				if (GetDistance(true) <= 264)
				{
					if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
					A_FaceTarget;
					A_MonsterCrisisCheck; // Single Projectile
					A_CrisisSpawnProjectile("DemonFire","DemonFireCrisis");
				}
				else
				{
					return state("See");
				}
				return state("");
			}
			SARG F 0 A_JumpIfHealthLower(1,"See",AAPTR_TARGET)
			loop

		Melee:
			TNT1 A 0
			SARG EF 8
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(7); }
			}
			SARG G 8
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(7); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack(random(1,10)*4,"none","none","Melee",true); // A_SargAttack
			}
			goto See

		Pain:
			SARG H 2 Fast
			SARG H 2 Fast A_DVDSPain
			Goto See
		Pain.Fist:
			SARG H 2 Fast
			SARG H 2 Fast A_DVDSPain
			SARG HH 2 Fast
			Goto See
		Pain.Kick:
			SARG H 2 Fast
			SARG H 2 Fast A_DVDSPain
			SARG HHHH 2 Fast
			Goto See

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SARG I 8
			SARG J 8 A_Scream
			SARG K 4
			SARG L 4 A_NoBlocking
			SARG M 4
			TNT1 A 0 
			SARG N -1
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			SARG H 5 A_GenericFreezeDeath
			SARG H 1 A_FreezeDeathChunks
			wait
		Raise: 
			SARG N 5 
			SARG MLKJI 5
			Goto See 
	}
}

actor DSSpectre : DSDemon 26519
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/PinkyDemon Type"
	Tag "Pinky Spectre"

	+SHADOW
	RenderStyle "OptFuzzy"
	Alpha 0.5
	SeeSound "spectre/sight"
	AttackSound "spectre/melee"
	PainSound "spectre/pain"
	DeathSound "spectre/death"
	ActiveSound "spectre/active"
	HitObituary "%o was munched by a spectre."

	dropitem DoomSpellMana 16
	dropitem GuardSphere 2
	dropitem GuardSphere 2
	dropitem BlurSphere2 2
	dropitem BlurSphere2 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
}

actor BloodDemon : DSDemon 3110
{ 
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/PinkyDemon Type"
	Tag "Blood Pinky"

	Health 300 
	Speed 15 
	Height 56
	Radius 30
	Mass 600
	Meleedamage 10
	ReactionTime 8 

	DamageFactor 0.875
	RadiusDamageFactor 0.875
	DamageFactor "Explosive", 0.875

	Painchance 135
	Painchance "Fist", 201 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 201 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.7 // 5.6

	DamageFactor "Plasma", 1.25
	Painchance "Plasma", 169
	DamageFactor "Thunder", 1.5 // Pinkies = +50% Thunder Damage
	Painchance "Thunder", 202 // Pinkies = +50% Pain Chance
	DamageFactor "Electric", 1.5 // Pinkies = +50% Thunder Damage
	Painchance "Electric", 202 // Pinkies = +50% Pain Chance
	DamageFactor "Lightning", 1.5 // Pinkies = +50% Thunder Damage
	Painchance "Lightning", 202 // Pinkies = +50% Pain Chance

	DamageFactor "Fire", 0.666 // Pinkies = -33% Fire Damage
	Painchance "Fire", 90 // Pinkies = -33% Pain Chance
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance
	MONSTER
	+FLOORCLIP
	Species "Pinky"
	+DONTHURTSPECIES
	SeeSound "blooddemon/sight"
	PainSound "blooddemon/pain"
	DeathSound "blooddemon/death"
	ActiveSound "blooddemon/active"
	//MeleeSound "blooddemon/melee"
	Obituary "%o Was chewed up and spat out by a Blood demon."
	HitObituary "%o Was chewed up and spat out by a Blood demon." 

	dropitem DoomSpellMana 24
	dropitem DoomSpellMana 24
	dropitem Medikit 2
	dropitem Medikit 2
	dropitem GuardSphere 2
	dropitem GuardSphere 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	States 
	{
		
		Spawn:
			SRG2 A 0 NoDelay 
			SRG2 AB 10 A_Look
			goto Spawn+1
		See: 
			SRG2 A 0
			SRG2 AABBCCDD 2
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
				user_fastchasetimermax = 8;
				if (levelbehavior && user_monsterlevel > 225) { user_fastchasetimermax = 5; }
				else if (levelbehavior && user_monsterlevel > 150) { user_fastchasetimermax = 6; }
				else if (levelbehavior && user_monsterlevel > 75) { user_fastchasetimermax = 7; }
				user_fastchasetimer++;
				user_walksound++;
				if (user_walksound >= 4) 
				{
					A_StartSound("blooddemon/walk", 0, CHANF_DEFAULT, 1.0, ATTN_NORM, frandompick(0.95,1.0,1.05));
					user_walksound = 0; 
				}
				if (user_fastchasetimer >= user_fastchasetimermax) 
				{ 
					if (dvds_pinkiescanbreathfire)
					{
						if (levelbehavior && user_monsterlevel > 600) 
						{ 
							if (random(1,1) <= 1) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); } else { A_DVDSChase("Melee","",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); }
						} 
						else
						if (levelbehavior && user_monsterlevel > 450) 
						{ 
							if (random(1,2) <= 1) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); } else { A_DVDSChase("Melee","",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); }
						} 
						else
						if (levelbehavior && user_monsterlevel > 300) 
						{ 
							if (random(1,3) <= 1) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); } else { A_DVDSChase("Melee","",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); }
						} 
						else
						if (levelbehavior && user_monsterlevel > 150) 
						{ 
							if (random(1,4) <= 1) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); } else { A_DVDSChase("Melee","",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); }
						} 
						else { A_DVDSChase("Melee","",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); }
					}
					else { A_DVDSChase("Melee","",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); }
					
					user_fastchasetimer = 0; 
				} 
				else 
				{ 
					if (dvds_pinkiescanbreathfire)
					{
						if (levelbehavior && user_monsterlevel > 600) 
						{ 
							if (random(1,1) <= 1) { A_DVDSChase("Melee","Missile",0,1,3,1,1); } else { A_DVDSChase("Melee","",0,1,3,1,1); }
						} 
						else
						if (levelbehavior && user_monsterlevel > 450) 
						{ 
							if (random(1,2) <= 1) { A_DVDSChase("Melee","Missile",0,1,3,1,1); } else { A_DVDSChase("Melee","",0,1,3,1,1); }
						} 
						else
						if (levelbehavior && user_monsterlevel > 300) 
						{ 
							if (random(1,3) <= 1) { A_DVDSChase("Melee","Missile",0,1,3,1,1); } else { A_DVDSChase("Melee","",0,1,3,1,1); }
						} 
						else
						if (levelbehavior && user_monsterlevel > 150) 
						{
							if (random(1,4) <= 1) { A_DVDSChase("Melee","Missile",0,1,3,1,1); } else { A_DVDSChase("Melee","",0,1,3,1,1); }
						}
						else { A_DVDSChase("Melee","",0,1,3,1,1); }
					}
					else { A_DVDSChase("Melee","",0,1,3,1,1); }
				}
			}
			loop

		Missile:
			SRG2 AEF 4
			{
				if (GetDistance(true) <= 264)
				{ 
					if (levelbehavior && user_monsterlevel > 240) { A_SetTics(2); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
					A_FaceTarget; 
				} 
				else 
				{ 
					return state("See"); 
				}
				return state("");
			}
		MissileLoop:
			SRG2 F 3 // 4
			{
				if (GetDistance(true) <= 264)
				{
					if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
					else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
					A_FaceTarget;
					A_MonsterCrisisCheck; // Single Projectile
					A_CrisisSpawnProjectile("DemonFire","DemonFireCrisis");
				}
				else
				{
					return state("See");
				}
				return state("");
			}
			SARG F 0 A_JumpIfHealthLower(1,"See",AAPTR_TARGET)
			loop

		Melee:
			TNT1 A 0
			SRG2 E 0 A_StartSound("blooddemon/melee")
			SRG2 EF 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
			SRG2 G 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack(random(1,10)*10,"none","none","Melee",true); // A_SargAttack; // A_SargAttack
			}
			Goto See 

		Pain: 
			SRG2 H 2 Fast
			SRG2 H 2 Fast A_DVDSPain
			Goto See
		Pain.Fist:
			SRG2 H 2 Fast
			SRG2 H 2 Fast A_DVDSPain
			SRG2 HH 2 Fast
			Goto See
		Pain.Kick:
			SRG2 H 2 Fast
			SRG2 H 2 Fast A_DVDSPain
			SRG2 HHHH 2 Fast
			Goto See
		
		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			SRG2 HH 2
			SRG2 H 2
			{
				A_DVDSPain;
				A_StartSound("elecstun");
				A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			}
			SRG2 HHH 1
			Goto See
		Pain.Electric: 
		Pain.Lightning: 
		Pain.Thunder: 
			SRG2 HH 2
			SRG2 H 2
			{
				A_DVDSPain;
				A_StartSound("elecstun");
				A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			}
			SRG2 HH 2
			SRG2 H 2
			{
				A_StartSound("elecstun");
				A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			}
			SRG2 HHH 2
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SRG2 I 8 
			SRG2 I 0 A_FaceTarget
			SRG2 J 0 A_SpawnItemEx("BloodDemonArm", 10, 0, 32, 0, 8, 0, 0, SXF_SETTARGET|SXF_CLIENTSIDE)
			SRG2 J 8 A_Scream
			SRG2 K 4 
			SRG2 L 4 A_NoBlocking
			SRG2 M 4 
			TNT1 A 0 
			SRG2 N -1 
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			SRG2 H 5 A_GenericFreezeDeath
			SRG2 H 1 A_FreezeDeathChunks
			wait
		Raise: 
			SRG2 N 5 
			SRG2 MLKJI 5
			Goto See 
	}
}

actor BloodSpectre : BloodDemon 26521
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/PinkyDemon Type"
	Tag "Blood Spectre"
	
	+SHADOW
	RenderStyle "OptFuzzy"
	Alpha 0.5
	Obituary "%o Was chewed up and spat out by a Blood spectre."
	HitObituary "%o Was chewed up and spat out by a Blood spectre." 

	dropitem DoomSpellMana 24
	dropitem DoomSpellMana 24
	dropitem Medikit 2
	dropitem Medikit 2
	dropitem GuardSphere 2
	dropitem GuardSphere 2
	dropitem BlurSphere2 2
	dropitem BlurSphere2 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	States
	{
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SRG2 I 8 
			SRG2 I 0 A_FaceTarget
			SRG2 J 0 A_SpawnItemEx("BloodSpectreArm", 10, 0, 32, 0, 8, 0, 0, 128)
			SRG2 J 8 A_Scream
			SRG2 K 4 
			SRG2 L 4 A_NoBlocking
			SRG2 M 4 
			TNT1 A 0 
			SRG2 N -1 
			Stop
	}
}

actor ChaingunDemon : BloodDemon 26522
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/PinkyDemon Type"
	Tag "Blood Pinky [Chaingun]"

	Speed 14
	Mass 650
	AttackSound ""
	Obituary "%o was mowed down by a chaingun-wielding Blood Demon." 
	HitObituary "%o Was chewed up and spat out by a Blood demon." 

	Species "Pinky"
	+DONTHURTSPECIES

	Dropitem Chaingun
	dropitem DoomSpellMana 24
	dropitem DoomSpellMana 24
	dropitem Medikit 2
	dropitem Medikit 2
	dropitem GuardSphere 2
	dropitem GuardSphere 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	States 
	{
		Spawn: 
			CRG2 A 0 NoDelay 
			CRG2 AB 10 A_Look
			goto Spawn+1
		See: 
			CRG2 A 0
			CRG2 AABBCCDD 2
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
				user_fastchasetimermax = 8;
				if (levelbehavior && user_monsterlevel > 225) { user_fastchasetimermax = 5; }
				else if (levelbehavior && user_monsterlevel > 150) { user_fastchasetimermax = 6; }
				else if (levelbehavior && user_monsterlevel > 75) { user_fastchasetimermax = 7; }
				user_fastchasetimer++;
				user_walksound++;
				if (user_walksound >= 4) 
				{
					A_StartSound("blooddemon/walk", 0, CHANF_DEFAULT, 1.0, ATTN_NORM, frandompick(0.80,0.825,0.85));
					user_walksound = 0; 
				}
				if (user_fastchasetimer >= user_fastchasetimermax) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1); user_fastchasetimer = 0; } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
			}
			loop

		Melee: 
		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			TNT1 A 0
			{
				if (!(CountInv("ChaingunCooldown")))
				{
					if (levelbehavior) { user_shotsfiredmax += random((15 + (user_monsterlevel / 20)),(45 + (user_monsterlevel / 6.67))); }
					else { user_shotsfiredmax = random(15,45); }
				}
				else
				{
					return state("See");
				}
				return state("");
			}
			CRG2 H 9
			{
				A_FaceTarget;
				user_shotaccuracy = 11.25; // 22.5;
				user_shotzaccuracy = 0.0;
				if (user_charmed) { user_shotaccuracy *= 0.667; user_shotzaccuracy *= 0.667; }
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(4); user_shotaccuracy = user_shotaccuracy * 5 / 8; user_shotzaccuracy = user_shotzaccuracy * 3 / 8; }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(5); user_shotaccuracy = user_shotaccuracy * 6 / 8; user_shotzaccuracy = user_shotzaccuracy * 4 / 8; }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); user_shotaccuracy = user_shotaccuracy * 6 / 8; user_shotzaccuracy = user_shotzaccuracy * 5 / 8; }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(7); user_shotaccuracy = user_shotaccuracy * 6 / 8; user_shotzaccuracy = user_shotzaccuracy * 6 / 8; }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(8); user_shotaccuracy = user_shotaccuracy * 7 / 8; user_shotzaccuracy = user_shotzaccuracy * 7 / 8; }
				user_shotaccuracy1 = user_shotaccuracy * -0.5;
				user_shotaccuracy2 = user_shotaccuracy * 0.5;
				user_shotzaccuracy1 = user_shotzaccuracy * -0.5;
				user_shotzaccuracy2 = user_shotzaccuracy * 0.5;
			}
		StartMissile:
			TNT1 E 0
			{
				A_CheckIfTargetDead("See");
			}
			CRG2 E 3 bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				A_FaceTarget;
				A_StartSound("chainguy/attack", CHAN_WEAPON);
				A_MonsterCrisisCheck; // Single Projectile/Tracer
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
				}
				user_shotsfired += 1;
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("ChaingunCooldown", 1);
					return state("MissileEnd"); 
				}
				return state("");
			}
			TNT1 A 0 A_MonsterRefire(32,"See")
			TNT1 F 0
			{
				A_CheckIfTargetDead("See");
			}
			CRG2 F 3 bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				A_FaceTarget;
				A_StartSound("chainguy/attack", CHAN_WEAPON);
				A_MonsterCrisisCheck; // Single Projectile/Tracer
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
				}
				else
				{
					A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
				}
				user_shotsfired += 1;
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("ChaingunCooldown", 1);
					return state("MissileEnd"); 
				}
				return state("");
			}
			TNT1 A 0 A_MonsterRefire(32,"MissileEnd")
			goto StartMissile
		MissileEnd:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			CRG2 H 9
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 160) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(8); }
			}
			Goto See

		Pain: 
			CRG2 H 2 Fast
			CRG2 H 2 Fast A_DVDSPain
			Goto See
		Pain.Fist:
			CRG2 H 2 Fast
			CRG2 H 2 Fast A_DVDSPain
			CRG2 HH 2 Fast
			Goto See
		Pain.Kick:
			CRG2 H 2 Fast
			CRG2 H 2 Fast A_DVDSPain
			CRG2 HHHH 2 Fast
			Goto See

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			CRG2 HH 2
			CRG2 H 2
			{
				A_DVDSPain;
				A_StartSound("elecstun");
				A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			}
			CRG2 HHH 1
			Goto See
		Pain.Electric: 
		Pain.Lightning: 
		Pain.Thunder: 
			CRG2 H 2
			CRG2 H 2
			CRG2 H 2 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			CRG2 H 2
			CRG2 H 2
			CRG2 H 2
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			CRG2 H 2
			CRG2 H 2
			CRG2 H 2
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SRG2 I 8 
			SRG2 I 0 A_FaceTarget
			SRG2 J 0 A_SpawnItemEx("BloodDemonArm", 10, 0, 32, 0, 8, 0, 0, SXF_SETTARGET|SXF_CLIENTSIDE)
			SRG2 J 8 A_Scream
			SRG2 K 4 
			SRG2 L 4 A_NoBlocking
			SRG2 M 4 
			TNT1 A 0 
			SRG2 N -1 
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			SRG2 H 5 A_GenericFreezeDeath
			SRG2 H 1 A_FreezeDeathChunks
			wait
		Raise: 
			SRG2 N 5 
			SRG2 MLKJI 5
			Goto See
	}
}

actor ChaingunSpectre : ChaingunDemon 26524
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/PinkyDemon Type"
	Tag "Blood Spectre [Chaingun]"

	+SHADOW
	RenderStyle "OptFuzzy"
	Alpha 0.5
	Obituary "%o was mowed down by a chaingun-wielding Blood spectre." 
	HitObituary "%o Was chewed up and spat out by a Blood spectre." 

	States 
	{
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SRG2 I 8 
			SRG2 I 0 A_FaceTarget
			SRG2 J 0 A_SpawnItemEx("BloodSpectreArm", 10, 0, 32, 0, 8, 0, 0, SXF_SETTARGET|SXF_CLIENTSIDE)
			SRG2 J 8 A_Scream
			SRG2 K 4 
			SRG2 L 4 A_NoBlocking
			SRG2 M 4 
			TNT1 A 0 
			SRG2 N -1 
			Stop
 }
}

actor DSRevenant : AetheriusMonsterZSC 26523
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Revenant Type"
	Tag "Revenant"

	Health 300
	Radius 20
	Height 56
	ProjectilePassHeight 84
	Mass 500
	Speed 10
	Painchance 100
	Painchance "Fist", 150 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 250 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 150 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 1.5 // 12.0
	DamageFactor "Plasma", 1.125
	Painchance "Plasma", 113
	DamageFactor "Thunder", 1.25 // Revenants = +25% Thunder Damage
	Painchance "Thunder", 125 // Revenants = +25% Pain Chance
	DamageFactor "Electric", 1.25 // Revenants = +25% Thunder Damage
	Painchance "Electric", 125 // Revenants = +25% Pain Chance
	DamageFactor "Lightning", 1.25 // Revenants = +25% Thunder Damage
	Painchance "Lightning", 125 // Revenants = +25% Pain Chance
	DamageFactor "Fire", 1.33 // Revenants = +33% Fire Damage
	Painchance "Fire", 133 // Revenants = +33% Pain Chance
	DamageFactor "Holy", 2.25 // Undead = +125% Holy Damage
	Painchance "Holy", 225 // Undead = +125% Pain Chance
	Monster
	MeleeThreshold 196
	+MISSILEMORE 
	+FLOORCLIP
	SeeSound "skeleton/sight"
	PainSound "revenant/pain"
	DeathSound "skeleton/death"
	ActiveSound "skeleton/active"
	MeleeSound "skeleton/melee"
	HitObituary "%o was beaten down by a revenant."
	Obituary "%o couldn't evade a revenant's missile."
	dropitem DoomSpellMana2 16
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	states
	{
		Spawn:
			SKEL A 0 NoDelay 
			SKEL AB 10 A_Look
			goto Spawn+1
		See:
			SKEL A 0
			SKEL AABBCCDDEEFF 2
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop

		Melee:
			TNT1 A 0
			SKEL G 6 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_SkelWhoosh;
				A_FaceTarget;
			}
			SKEL H 6 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
			SKEL I 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack(random(1,10)*6,"skeleton/melee","none","Melee",true);
			}
			goto See

		Pain:
			SKEL L 5
			SKEL L 5 A_DVDSPain
			Goto See
		Pain.Fist:
			SKEL L 5
			SKEL L 5 A_DVDSPain
			SKEL LL 5
			Goto See
		Pain.Kick:
			SKEL L 5
			SKEL L 5 A_DVDSPain
			SKEL LLLL 5
			Goto See

		Missile:
			TNT1 A 0
			SKEL J 0 bright A_FaceTarget
			SKEL J 10 bright 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
			}
		MissileStart:
			SKEL K 10 // A_SkelMissile
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
	
				A_MonsterCrisisCheck; // Multiple Projectiles
				if (levelbehavior && user_monsterlevel > 120) 
				{
					A_CrisisSpawnProjectile("RevenantTracerNew", "RevenantTracerCrisis", 40, 10); 
					A_CrisisSpawnProjectile("RevenantTracerNew", "RevenantTracerCrisis", 40, -10); 
				}
				else
				if (levelbehavior && user_monsterlevel > 60) 
				{
					if (random(1,4) == 1)
					{
						A_CrisisSpawnProjectile("RevenantTracerNew", "RevenantTracerCrisis", 40, 10); 
						A_CrisisSpawnProjectile("RevenantTracerNew", "RevenantTracerCrisis", 40, -10); 
					}
					else
					{
						A_CrisisSpawnProjectile("RevenantTracerNew", "RevenantTracerCrisis", 40); 
					}
				}
				else
				{
					A_CrisisSpawnProjectile("RevenantTracerNew", "RevenantTracerCrisis", 40);
				}
			}
			SKEL K 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
			}
			SKEL K 0
			{
				if (random(1,256) <= (16 + (user_monsterlevel/15))) { return state("MissileStart"); }
				return state("");
			}
			goto See

		Pain:
			SKEL L 5
			SKEL L 5 A_DVDSPain
			Goto See

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			SKEL L 5
			SKEL L 5 A_DVDSPain
			SKEL L 5
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SKEL LM 7
			SKEL N 7 A_Scream
			SKEL O 7 A_NoBlocking
			SKEL P 7
			SKEL Q -1
			stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			SKEL L 5 A_GenericFreezeDeath
			SKEL L 1 A_FreezeDeathChunks
			wait
		Raise:
			SKEL Q 5 
			SKEL PONML 5
			Goto See 
	}
}

actor DeathIncarnate : AetheriusMonsterZSC 30115 
{ 
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Revenant Type"
	Tag "Death Incarnate"

	Health 600 
	Radius 20 
	Height 56 
	ProjectilePassHeight 84
	Mass 500 
	Speed 12
	MeleeDamage 7
	Painchance 64
	Painchance "Fist", 96 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 160 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 96 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor 1.5

	RadiusDamageFactor 0.667
	DamageFactor "Explosive", 0.667
	Painchance "Explosive", 43

	Damagefactor "IncarnateGlare", 0
	Painchance "IncarnateGlare", 0
	Damagefactor "Holy", 18 // Hades Scions are already 6x weak to Holy. Death Incarnate itself is 3x more weak to Holy, for a total of 18x damage.
	Damagefactor "Sceptre", 6
	Painchance "Holy", 255 // Undead = +250% Pain Chance
	DamageFactor "Crush", 1.5 // 12.0
	DamageFactor "Fire", 0.1 // Incarnates = -80% Fire Damage
	Painchance "Fire", 13 // Incarnates = -80% Pain Chance
	DamageFactor "Plasma", 1.5
	Painchance "Plasma", 96
	DamageFactor "Thunder", 2
	Painchance "Thunder", 120
	DamageFactor "Electric", 2
	Painchance "Electric", 120
	DamageFactor "Lightning", 2
	Painchance "Lightning", 120
	DamageFactor "Shock", 2
	Painchance "Shock", 120
	MONSTER
	+FLOORCLIP 
	+SHORTMISSILERANGE
	+DONTHURTSPECIES
	+AVOIDMELEE
	SeeSound "monster/incsit" 
	PainSound "dincarnate/pain" 
	DeathSound "monster/incdth" 
	ActiveSound "monster/incact"
	AttackSound "monster/incatk"
	MeleeSound "monster/inchit"
	Obituary "%o was killed by a Death Incarnate's glare."
	HitObituary "%o was beaten to death by a Death Incarnate."
	dropitem DoomSpellMana 64
	dropitem DoomSpellMana2 32
	dropitem DoomSpellMana3 8
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem RocketAmmo 2 1
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	States 
	{
		Spawn:
			INCA A 0 NoDelay 
			INCA AB 10 A_Look
			goto Spawn+1
		See:
			INCA A 0
			INCA AABBCCDDEEFF 2
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_ChangeFlag("SHORTMISSILERANGE",0); }
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			loop

		Melee:
			TNT1 A 0
		Melee2:
			INCA G 0 A_Jump(128,5) // to -1
			INCA G 0 A_FaceTarget 
			INCA G 6  
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_SkelWhoosh;
			}
			INCA H 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
			INCA I 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack(random(1,10)*7,"skeleton/melee","none","Melee",true); // A_SkelFist
			}
			Goto See
			INCA R 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_SkelWhoosh;
			}
			INCA S 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			INCA T 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack(random(1,11)*6,"skeleton/melee","none","Melee",true); // A_SkelFist
			}
			INCA G 5
			{
				A_SkelWhoosh;
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
			}
			INCA H 5
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
			}
			INCA I 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack(random(1,11)*6,"skeleton/melee","none","Melee",true); // A_SkelFist
			}
			Goto See 

		Missile:
			TNT1 A 0
			INCA J 5
			{
				user_shotsfiredmax = 10;
				user_shotaccuracy = 30.0;
				user_shotzaccuracy = 0.0;
				if (user_charmed) { user_shotaccuracy *= 0.667; user_shotzaccuracy *= 0.667; }
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); user_shotsfiredmax += 12; user_shotaccuracy = user_shotaccuracy * 1 / 4; user_shotzaccuracy = user_shotzaccuracy * 1 / 4; }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); user_shotsfiredmax += 8; user_shotaccuracy = user_shotaccuracy * 2 / 4; user_shotzaccuracy = user_shotzaccuracy * 2 / 4; }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); user_shotsfiredmax += 4; user_shotaccuracy = user_shotaccuracy * 3 / 4; user_shotzaccuracy = user_shotzaccuracy * 3 / 4; }
				user_shotaccuracy1 = user_shotaccuracy * -0.5;
				user_shotaccuracy2 = user_shotaccuracy * 0.5;
				user_shotzaccuracy1 = user_shotzaccuracy * -0.5;
				user_shotzaccuracy2 = user_shotzaccuracy * 0.5;
				A_FaceTarget;
			}
			INCA J 5
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
		MissileStart:
			INCA U 10 Bright
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
	
				A_MonsterCrisisCheck; // Multiple Tracers
				if (bullet_tracer_mode == 0) // Hitscan
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, user_shotsfiredmax, 3, "DIPuff", 1024);
				}
				else // Tracers
				{
					for (user_shotsfired = 0; user_shotsfired < user_shotsfiredmax; user_shotsfired++)
					{
						A_CrisisSpawnProjectile("IncarnateGlareTracer", "IncarnateGlareTracerCrisis", 56, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
					}
				}
			}
			INCA K 10
			INCA K 0
			{
				if (random(1,256) <= (16 + (user_monsterlevel/15))) { return state("MissileStart"); }
				return state("");
			}
			Goto See 

		Pain: 
			INCA L 5 
			INCA L 5 A_DVDSPain
			Goto See 
		Pain.Plasma:
			INCA L 5
			INCA L 5 A_DVDSPain
			INCA LL 5
			Goto See
		Pain.Thunder:
		Pain.Electric:
		Pain.Lightning:
		Pain.Shock:
			INCA L 5
			INCA L 5 A_DVDSPain
			INCA LLL 5
			Goto See
		Pain.Fist:
			INCA L 5
			INCA L 5 A_DVDSPain
			INCA LL 5
			Goto See
		Pain.Kick:
			INCA L 5
			INCA L 5 A_DVDSPain
			INCA LLLL 5
			Goto See

		Death:
			TNT1 A 0 A_Jump((192-(user_deathcounter*24)),"FakeDeath") // 75% of the time it's a fake death
			goto Death2
		Death.Plasma:
			TNT1 A 0 A_Jump((144-(user_deathcounter*16)),"FakeDeath") // 56.25% of the time it's a fake death
			goto Death2
		Death.Thunder:
		Death.Electric:
		Death.Lightning:
		Death.Shock:
			TNT1 A 0 A_Jump((96-(user_deathcounter*12)),"FakeDeath") // 37.5% of the time it's a fake death
			goto Death2

		Death2:
			TNT1 A 0 
			{
				A_DVDSNormalDeath(-2,0,1); // True death
				user_truekill == 1;
			}
			INCA L 7 
			INCA M 7 
			INCA N 7 A_Scream 
			INCA O 7 A_NoBlocking 
			INCA P 7 
			INCA Q 0 A_Jump(192,4)
			INCA Q 0 A_Jump(128,4)
			INCA Q 0 A_Jump(96,4)
			INCA Q 0 A_Jump(64,4)
			INCA Q 39
			INCA Q 38
			INCA Q 39
			INCA Q 38
			INCA Q 39
			INCX Q 0 Bright A_SpawnItemEx("HadesSphere",0,0,32,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid)
			INCA Q -1 
			Stop
		FakeDeath:
			TNT1 A 0 
			{
				A_DVDSNormalDeath(-2,2,1); // Fake death
				user_deathcounter += 1;
			}
			INCA L 6 
			INCA M 6 
			INCA N 6 A_Scream 
			INCA O 6 A_NoBlocking
			INCA P 6
			INCA Q 0 A_Jump(192,4)
			INCA Q 0 A_Jump(128,4)
			INCA Q 0 A_Jump(96,4)
			INCA Q 0 A_Jump(64,4)
			INCA Q 115 
			INCA Q 115 
			INCA Q 115 
			INCA Q 115 
			INCA Q 115
		RegenCycle:
			INCA Q 0 CanRaise Thing_Raise(0)
			INCA Q 5 
			loop

		Death.Massacre:
		Death.SilentMassacre:
		XDeath:
			TNT1 A 0 
			{
				A_DVDSNormalDeath(-2,0,1);
				user_truekill == 1;
			}
			INCX A 10 Bright A_StartSound("monster/incexp")
			INCX BC 5 Bright
			INCX D 5 Bright A_NoBlocking
			INCX D 0 Bright A_SpawnItemEx("HadesSphere",0,0,32,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid)
			INCX EFGHIJ 5 Bright
			INCX K -1 
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			INCA L 5 A_GenericFreezeDeath
			INCA L 1 A_FreezeDeathChunks
			wait
		Raise:
			INCA Q 0 
			{
				A_KillChildren;
				if (user_truekill)
				{
					user_truekill == 0;
					user_deathcounter == 0;
				}
			}
			INCA Q 5 
			INCA PONML 5
			Goto See 
	}
}

actor HadesSphere : AetheriusMonsterZSC 30116 
{ 
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Hades Scions"
	Tag "Hades Sphere"

	Health 35
	Radius 16
	Height 32 
	Mass 3000
	Speed 10
	ExplosionDamage 112
	ExplosionRadius 112
	Damagefactor "IncarnateGlare", 0
	Damagefactor "Holy", 6
	Damagefactor "Sceptre", 2
	RenderStyle "Normal"
	Obituary "%o was blown away by a Hades Sphere."
	PAINCHANCE 0 
	MONSTER
	+NOPAIN
	+LOOKALLAROUND
	+DONTGIB
	+NOTARGET
	+NOGRAVITY 
	+FLOAT
	+DONTFALL
	+DONTHURTSPECIES
	+LONGMELEERANGE
	+THRUSPECIES
	Species "HadesSphere"

	SeeSound "monster/hadsit"

	DamageFactor "Crush", 2.0 // 16.0
	Damagefactor "Magic", 2.56
	Painchance "Holy", 255 // Demons = +300% Pain Chance

	States 
	{
		Spawn:
			TNT1 A 0 NoDelay 
			TNT1 A 4 Bright A_Look      
			goto Spawn+1
		See:
			HADE E 0
			HADE EFGH 4 Bright
			goto Chase

		Chase:
			HADE A 0 Bright A_SetShootable
			HADE A 0 Bright A_SetSolid
			HADE A 0 Bright A_StartSound("monster/hadwlk")
			HADE AABBCCDD 2 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
	
				A_FastChaseCalc(2,32);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			HADE D 0
			{
				A_HadesSphereTeleport("PhaseOut",128,1024);
			}
			loop

		PhaseOut:
			HADE H 0 Bright
			{
				A_UnSetSolid;
				A_UnSetShootable;
			}
			HADE H 5 Bright A_StartSound("monster/hadtel")
			HADE GFEIJKL 4 Bright
			goto Stalking

		Stalking:
			TNT1 AAAAAAA 2 Bright A_DVDSChase("","",CHF_NOPLAYACTIVE|CHF_FASTCHASE,1,3,1,1)
			TNT1 A 0 Bright A_Jump(96,"PhaseIn") 
			loop

		PhaseIn:
			HADE L 3 Bright A_StartSound("monster/hadtel")
			HADE KJIEFG 4 Bright
			HADE H 0 Bright 
			{
				A_SetSolid;
				A_SetShootable;
				A_GiveInventory("HSphereTeleportCooldown", 1);
			}
			Goto Chase

		Melee:
			TNT1 A 0
			HADE H 0 A_SetInvulnerable
			HADE HGFE 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
			}
			HADE E 0 
			{
				A_GetHSHealthPreExp;
				A_Die("HSExplode");
			}
			Stop
			
		Pain:
		Pain.Fist:
		Pain.Kick:
		Pain.PoisonNeedle:
			Goto See
			
		Death.HSExplode:
		Death:
			HADE E 0 Bright A_Noblocking
			HADE E 0 Bright A_SpawnProjectile("HSBoom",0,0,0,0)
			HADE E 0 A_UnSetInvulnerable
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			Stop
		XDeath:
			HADE E 0 A_Jump(8,"Death")
			HADE E 0 A_UnSetInvulnerable
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			HADE N 0 Bright A_Noblocking
			HADE H 5 Bright A_StartSound("monster/haddth")
			HADE GFE 4 Bright
			HADE RSTUVWX 4 Bright
			Stop
		Ice:
			goto Death
	}
}


actor DSCacodemon : AetheriusMonsterZSC 26527
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Cacodemon Type"
	Tag "Cacodemon"

	Health 400
	Radius 31
	Height 56
	Mass 400
	Speed 8
	Painchance 128
	Painchance "Fist", 192 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 192 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.6 // 4.8
	DamageFactor "Plasma", 0.833
	Painchance "Plasma", 107
	DamageFactor "Thunder", 0.66 // Cacodemons = -33% Thunder Damage
	Painchance "Thunder", 85 // Demons = -33% Pain Chance
	DamageFactor "Electric", 0.66 // Cacodemons = -33% Thunder Damage
	Painchance "Electric", 85 // Demons = -33% Pain Chance
	DamageFactor "Lightning", 0.66 // Cacodemons = -33% Thunder Damage
	Painchance "Lightning", 85 // Demons = -33% Pain Chance
	DamageFactor "Fire", 0.66 // Cacodemons = -33% Fire Damage
	Painchance "Fire", 85 // Demons = -33% Pain Chance
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance
	Species "Cacodemon"
	Monster
	+FLOAT
	+NOGRAVITY
	+DONTHURTSPECIES
	bloodcolor "blue"
	SeeSound "caco/sight"
	PainSound "cacodemon/pain"
	DeathSound "caco/death"
	ActiveSound "caco/active"
	Obituary "$OB_CACO"
	HitObituary "$OB_CACOHIT"

	dropitem DoomSpellMana2 16
	dropitem GreenArmor 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	states
	{
		Spawn:
			HEAD A 0 NoDelay
			HEAD A 10 A_FloatLook(16)
			goto Spawn+1
		See:
			HEAD A 0 
			HEAD A 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				
				A_FastChaseCalc(4,16);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			loop

		Melee:
		Missile:
			TNT1 A 0 
			{
				user_painfastchase = 0;
			}
			HEAD BC 5
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			HEAD D 5 bright
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
				A_FaceTarget;

				user_tempvar1 = 32; // attack height
				user_tempvar2 = 15; // base angle
				A_MonsterCrisisCheck; // Multiple Projectiles + Combo Attack
				A_CrisisComboAttack("CacodemonBall", "CacodemonBallCrisis", user_tempvar1, (random(1,10)*6), "caco/melee"); // See CacodemonBall
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("CacodemonBall","CacodemonBallCrisis",user_tempvar1,0,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("CacodemonBall","CacodemonBallCrisis",user_tempvar1,0,(user_tempvar2*1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("CacodemonBall","CacodemonBallCrisis",user_tempvar1,0,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("CacodemonBall","CacodemonBallCrisis",user_tempvar1,0,(user_tempvar2*2));
					}
				}
			}
			goto See

		Pain:
			TNT1 A 0 A_ActorShadowSplit(120,256)
			HEAD E 3
			HEAD E 3 
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			HEAD F 6
			Goto See
		Pain.Sceptre:
		Pain.Holy:
			TNT1 A 0 A_ActorShadowSplit(120,4)
			HEAD E 3
			HEAD E 3 
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			HEAD F 6
			Goto See
		Pain.Fist:
			TNT1 A 0 A_ActorShadowSplit(120,64)
			HEAD E 3
			HEAD E 3 
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 5 * random(1,8);
			}
			HEAD FF 6
			Goto See
		Pain.Kick:
			TNT1 A 0 A_ActorShadowSplit(120,192)
			HEAD E 3
			HEAD E 3 
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 7 * random(1,8);
			}
			HEAD FFFF 6
			Goto See

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			TNT1 A 0 A_ActorShadowSplit(120,random(96,160))
			HEAD E 2
			HEAD E 2
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			HEAD F 4
			Goto See
		Shadowsplit1:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacodemonShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+192, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit2:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacodemonShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+64, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit3:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacodemonShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+0, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit4:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacodemonShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+128, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit1a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacodemonShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacodemonShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacodemonShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+192, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit2a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacodemonShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacodemonShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacodemonShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+64, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit3a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacodemonShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacodemonShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacodemonShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+0, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit4a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacodemonShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacodemonShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacodemonShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+128, 20, 0, 0);
			}
			Goto FinishShadowSplit
		FinishShadowSplit:
			HDSS AAAAAAAAAAAAAAA 1 Bright A_SpawnItemEx ("CacodemonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			TNT1 A 0 A_ActorEndShadowSplit
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			HEAD G 8
			HEAD H 8 A_Scream
			HEAD IJ 8
			HEAD K 8 A_NoBlocking
			TNT1 A 0 
			HEAD L -1 A_SetFloorClip
			stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			HEAD F 5 A_GenericFreezeDeath
			HEAD F 1 A_FreezeDeathChunks
			wait
		Raise:
			HEAD L 0 
			HEAD L 8 A_UnsetFloorClip
			HEAD KJIHG 8
			Goto See
	}
}

ACTOR CacodemonShadowSplitAfterImage
{
	Radius 31
	Height 56
	+NOGRAVITY
	+FLOORCLIP
	+NOLIFTDROP
	Alpha 0.4
	RenderStyle "Translucent"
	States
	{
	Spawn:
		HDSS B 1 A_FadeTo (0, 0.04, 1)
		Loop
	}
}

ACTOR CacodemonShadowSplit1 : CacodemonShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+64, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("CacodemonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR CacodemonShadowSplit2 : CacodemonShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+192, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("CacodemonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR CacodemonShadowSplit3 : CacodemonShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+128, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("CacodemonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR CacodemonShadowSplit4 : CacodemonShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+0, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("CacodemonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

actor Cacolantern : DSCacodemon 5006
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Cacodemon Type"
	Tag "Cacolantern"

	Health 800
	Painchance 112
	Painchance "Fist", 168 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 168 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor 0.9375
	RadiusDamageFactor 0.9375
	DamageFactor "Explosive", 0.9375

	DamageFactor "Crush", 0.6 // 4.8
	DamageFactor "Plasma", 0.92
	Painchance "Plasma", 103
	DamageFactor "Thunder", 0.83 // Cacodemons = -17% Thunder Damage
	Painchance "Thunder", 94 // Demons = -17% Pain Chance
	DamageFactor "Electric", 0.83 // Cacodemons = -17% Thunder Damage
	Painchance "Electric", 94 // Demons = -17% Pain Chance
	DamageFactor "Lightning", 0.83 // Cacodemons = -17% Thunder Damage
	Painchance "Lightning", 94 // Demons = -17% Pain Chance
	DamageFactor "Fire", 0.50 // Cacodemons = -50% Fire Damage
	Painchance "Fire", 56 // Demons = -50% Pain Chance
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance
	bloodcolor "blue"
	Species "Cacodemon"
	+DONTHURTSPECIES
	+AVOIDMELEE
	Obituary "%o was smitten by a cacolantern."
	HitObituary "%o got too close to a cacolantern."
	PainSound "cacodemon/pain"

	dropitem DoomSpellMana2 24
	dropitem DoomSpellMana2 24
	dropitem GreenArmor 2
	dropitem BlueArmor 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	States
	{
		Spawn:
			HED2 A 0 NoDelay 
			HED2 A 10 A_FloatLook(16)
			goto Spawn+1
		See:
			HED2 A 0
			HED2 A 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(6,12);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			loop

		Melee:
		Missile:
			TNT1 A 0 
			{
				user_painfastchase = 0;
			}
			HED2 BC 5
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			HED2 D 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
				A_FaceTarget;

				user_tempvar1 = 32; // attack height
				user_tempvar2 = 15; // base angle
				A_MonsterCrisisCheck; // Multiple Projectiles + Combo Attack
				A_CrisisComboAttack("CacolanternBall", "CacolanternBallCrisis", user_tempvar1, (random(1,10)*8), "caco/melee"); // See CacodemonBall
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("CacolanternBall","CacolanternBallCrisis",user_tempvar1,0,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("CacolanternBall","CacolanternBallCrisis",user_tempvar1,0,(user_tempvar2*1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("CacolanternBall","CacolanternBallCrisis",user_tempvar1,0,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("CacolanternBall","CacolanternBallCrisis",user_tempvar1,0,(user_tempvar2*2));
					}
				}
			}
			goto See

		Pain:
			TNT1 A 0 A_ActorShadowSplit(90,256)
			HED2 E 3
			HED2 E 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			HED2 F 6
			Goto See
		Pain.Sceptre:
		Pain.Holy:
			TNT1 A 0 A_ActorShadowSplit(90,4)
			HED2 E 3
			HED2 E 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			HED2 F 6
			Goto See
		Pain.Fist:
			TNT1 A 0 A_ActorShadowSplit(90,64)
			HED2 E 3
			HED2 E 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 5 * random(1,8);
			}
			HED2 FF 6
			Goto See
		Pain.Kick:
			TNT1 A 0 A_ActorShadowSplit(90,192)
			HED2 E 3
			HED2 E 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 7 * random(1,8);
			}
			HED2 FFFF 6
			Goto See

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			TNT1 A 0 A_ActorShadowSplit(90,random(96,160))
			HED2 E 3
			HED2 E 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			HED2 F 4
			Goto See
		Shadowsplit1:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacolanternShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+192, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit2:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacolanternShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+64, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit3:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacolanternShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+0, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit4:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacolanternShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+128, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit1a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacolanternShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacolanternShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacolanternShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+192, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit2a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacolanternShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacolanternShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacolanternShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+64, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit3a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacolanternShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacolanternShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacolanternShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+0, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit4a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("CacolanternShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacolanternShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("CacolanternShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+128, 20, 0, 0);
			}
			Goto FinishShadowSplit
		FinishShadowSplit:
			HDSS AAAAAAAAAAAAAAA 1 Bright A_SpawnItemEx ("CacolanternShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			TNT1 A 0 A_ActorEndShadowSplit
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			HED2 G 8 A_NoBlocking
			HED2 H 8 A_Scream
			HED2 IJK 8
			TNT1 A 0 
			HED2 L -1 A_SetFloorClip
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			HED2 F 5 A_GenericFreezeDeath
			HED2 F 1 A_FreezeDeathChunks
			wait
		Raise:
			HED2 L 0 
			HED2 L 8 A_UnsetFloorClip
			HED2 KJIHG 8
			Goto See
	}
}

ACTOR CacolanternShadowSplitAfterImage : CacodemonShadowSplitAfterImage
{
	Radius 31
	Height 56
	+NOGRAVITY
	+FLOORCLIP
	+NOLIFTDROP
	Alpha 0.4
	RenderStyle "Translucent"
	States
	{
	Spawn:
		HDSS B 1 A_FadeTo (0, 0.04, 1)
		Loop
	}
}

ACTOR CacolanternShadowSplit1 : CacolanternShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+64, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("CacolanternShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR CacolanternShadowSplit2 : CacolanternShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+192, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("CacolanternShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR CacolanternShadowSplit3 : CacolanternShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+128, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("CacolanternShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR CacolanternShadowSplit4 : CacolanternShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+0, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("CacolanternShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

actor Abaddon : Cacolantern 5015
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Cacodemon Type"
	Tag "Abaddon"

	Health 1200
	Speed 12
	Painchance 80
	Painchance "Fist", 120 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 200 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 120 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor 0.875
	RadiusDamageFactor 0.875
	DamageFactor "Explosive", 0.875

	DamageFactor "Crush", 0.6 // 4.8
	DamageFactor "Fire", 0.33 // Cacodemons = -66% Fire Damage
	Painchance "Fire", 26 // Demons = -66% Pain Chance
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 240 // Demons = +300% Pain Chance
	Species "Cacodemon"
	+DONTHURTSPECIES
	+AVOIDMELEE
	PainSound "cacodemon/pain"
	Obituary "%o was smitten by an abaddon."
	HitObituary "%o became food for an abaddon."
	bloodcolor "red"

	dropitem DoomSpellMana2 32
	dropitem DoomSpellMana2 32
	dropitem DoomSpellMana2 32
	dropitem DoomSpellMana3 16
	dropitem GreenArmor 2
	dropitem BlueArmor 2
	dropitem StoneSkin 2
	dropitem DiamondSkin 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	States
	{
		Spawn:
			HED3 A 0 NoDelay 
			HED3 A 10 A_FloatLook(16)
			goto Spawn+1
		See:
			HED3 A 0
			HED3 A 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(8,8);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			loop

		Melee:
		Missile:
			TNT1 A 0 
			{
				user_painfastchase = 0;
			}
			HED3 BC 5
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			HED3 D 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
				A_FaceTarget;

				user_tempvar1 = 32; // attack height
				user_tempvar2 = 15; // base angle
				A_MonsterCrisisCheck; // Multiple Projectiles + Combo Attack
				A_CrisisComboAttack("AbaddonBall", "AbaddonBallCrisis", user_tempvar1, (random(1,10)*10), "caco/melee"); // See CacodemonBall
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("AbaddonBall","AbaddonBallCrisis",user_tempvar1,0,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("AbaddonBall","AbaddonBallCrisis",user_tempvar1,0,(user_tempvar2*1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("AbaddonBall","AbaddonBallCrisis",user_tempvar1,0,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("AbaddonBall","AbaddonBallCrisis",user_tempvar1,0,(user_tempvar2*2));
					}
				}
			}
			HED3 CBC 5
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			HED3 D 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
				A_FaceTarget;

				user_tempvar1 = 32; // attack height
				user_tempvar2 = 15; // base angle
				A_MonsterCrisisCheck; // Multiple Projectiles + Combo Attack
				A_CrisisComboAttack("AbaddonBall", "AbaddonBallCrisis", user_tempvar1, (random(1,10)*10), "caco/melee"); // See CacodemonBall
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("AbaddonBall","AbaddonBallCrisis",user_tempvar1,0,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("AbaddonBall","AbaddonBallCrisis",user_tempvar1,0,(user_tempvar2*1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("AbaddonBall","AbaddonBallCrisis",user_tempvar1,0,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("AbaddonBall","AbaddonBallCrisis",user_tempvar1,0,(user_tempvar2*2));
					}
				}
			}
			goto See
		Pain:
			TNT1 A 0 A_ActorShadowSplit(60,256)
			HED3 E 3
			HED3 E 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			HED3 F 6
			Goto See
		Pain.Sceptre:
		Pain.Holy:
			TNT1 A 0 A_ActorShadowSplit(60,4)
			HED3 E 3
			HED3 E 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			HED3 F 6
			Goto See
		Pain.Fist:
			TNT1 A 0 A_ActorShadowSplit(60,64)
			HED3 E 3
			HED3 E 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 5 * random(1,8);
			}
			HED3 FF 6
			Goto See
		Pain.Kick:
			TNT1 A 0 A_ActorShadowSplit(60,192)
			HED3 E 3
			HED3 E 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 7 * random(1,8);
			}
			HED3 FFFF 6
			Goto See

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			TNT1 A 0 A_ActorShadowSplit(60,random(96,160))
			HED3 E 3
			HED3 E 3 
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			HED3 F 6
			Goto See
		Shadowsplit1:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("AbaddonShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+192, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit2:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("AbaddonShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+64, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit3:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("AbaddonShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+0, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit4:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("AbaddonShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+128, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit1a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("AbaddonShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("AbaddonShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("AbaddonShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+192, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit2a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("AbaddonShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("AbaddonShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("AbaddonShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+64, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit3a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("AbaddonShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("AbaddonShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("AbaddonShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+0, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit4a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("AbaddonShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("AbaddonShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("AbaddonShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+128, 20, 0, 0);
			}
			Goto FinishShadowSplit
		FinishShadowSplit:
			HDSS AAAAAAAAAAAAAAA 1 Bright A_SpawnItemEx ("AbaddonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			TNT1 A 0 A_ActorEndShadowSplit
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			HED3 G 8 A_NoBlocking
			HED3 H 8 A_Scream
			HED3 IJK 8
			TNT1 A 0 
			HED3 L -1 A_SetFloorClip
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			HED3 F 5 A_GenericFreezeDeath
			HED3 F 1 A_FreezeDeathChunks
			wait
		Raise:
			HED3 L 0 
			HED3 L 8 A_UnsetFloorClip
			HED3 KJIHG 8
			Goto See
	}
}

ACTOR AbaddonShadowSplitAfterImage : CacodemonShadowSplitAfterImage
{
	Radius 31
	Height 56
	+NOGRAVITY
	+FLOORCLIP
	+NOLIFTDROP
	Alpha 0.4
	RenderStyle "Translucent"
	States
	{
	Spawn:
		HDSS B 1 A_FadeTo (0, 0.04, 1)
		Loop
	}
}

ACTOR AbaddonShadowSplit1 : AbaddonShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+64, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("AbaddonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR AbaddonShadowSplit2 : AbaddonShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+192, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("AbaddonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR AbaddonShadowSplit3 : AbaddonShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+128, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("AbaddonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR AbaddonShadowSplit4 : AbaddonShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+0, 20, 0, 0)
		HDSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("AbaddonShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

actor DSPainElemental : AetheriusMonsterZSC 26531
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Others"
	Tag "Pain Elemental"
	
	Health 400
	Radius 31
	Height 56
	Mass 400
	Speed 8
	MeleeRange 80
	Painchance 128
	Painchance "Fist", 192 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 192 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.6 // 4.8
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance
	Monster
	+FLOAT
	+NOGRAVITY
	+AVOIDMELEE
	SeeSound "pain/sight"
	PainSound "pain/pain"
	DeathSound "pain/death"
	ActiveSound "pain/active"
	obituary "%o got munched on by a Pain Elemental."

	dropitem DoomSpellMana2 16
	dropitem SoulSphere2 2
	dropitem SoulSphere2 2
	dropitem SoulSphere2 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1

	states
	{
		Spawn:
			PAIN A 0 NoDelay 
			PAIN A 10 A_FloatLook(16)
			goto Spawn+1
		See:
			PAIN A 0
			PAIN AABBC 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(6,12);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			PAIN C 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(6,12);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;

				if (A_JumpIfCloser(1024,"IdleMissile"))
				{
					if (levelbehavior && user_monsterlevel > 180) { if (random(1,1000) <= 550) { return state("IdleMissile"); } return state(""); }
					else if (levelbehavior && user_monsterlevel > 120) { if (random(1,1000) <= 400) { return state("IdleMissile"); } return state(""); }
					else if (levelbehavior && user_monsterlevel > 60) { if (random(1,1000) <= 200) { return state("IdleMissile"); } return state(""); }
					return state("");
				}
				else { return state(""); }
				return state("");
			}
			loop

		IdleMissile:
			PAIN DE 5
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			PAIN F 5 bright    // See LostSoul
			{
				A_FaceTarget;
				if (random(1,256) <= A_GetEvolveChance) 
				{ 
					if (random(1,384) <= A_GetEvolveChance) { A_PainAttack("ForgottenOne",0,PAF_NOSKULLATTACK|PAF_AIMFACING); }
					else { A_PainAttack("DSLostSoul2",0,PAF_NOSKULLATTACK|PAF_AIMFACING); }
				}
				else 
				{ 
					A_PainAttack("DSLostSoul",0,PAF_NOSKULLATTACK|PAF_AIMFACING);
				}
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			goto See

		Melee:
		Missile:
			TNT1 A 0
			{
				user_painfastchase = 0;
			}
			PAIN DE 5
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			PAIN F 5 bright
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
				A_FaceTarget;
				
				if (CheckMeleeRange) 
				{ 
					A_CrisisMeleeAttack(10*random(1,6),"caco/melee","none","Melee",true); 
				}
				else
				{
					A_MonsterCrisisCheck;  // PainAttack
					if (user_canusecrisisatk == 1)
					{
						if (random(1,256) <= A_GetEvolveChance) 
						{
							if (random(1,384) <= A_GetEvolveChance) { A_DualPainAttack("ForgottenOne"); A_PainAttack("ForgottenOne"); }
							else { A_DualPainAttack("DSLostSoul2"); A_PainAttack("DSLostSoul2"); }
						}
						else
						{
							A_DualPainAttack("DSLostSoul"); A_PainAttack("DSLostSoul"); 
						}
					}
					else
					{
						if (random(1,256) <= A_GetEvolveChance) 
						{
							if (random(1,384) <= A_GetEvolveChance) { A_PainAttack("ForgottenOne"); }
							else { A_PainAttack("DSLostSoul2"); }
						}
						else 
						{
							A_PainAttack("DSLostSoul"); 
						}
					}
				}
			}
			goto See

		Pain:
			TNT1 A 0 A_ActorShadowSplit(60,64)
			PAIN G 6
			PAIN G 6 A_FloatPain(0,8,64)
			Goto See
		Pain.Sceptre:
		Pain.Holy:
			TNT1 A 0 A_ActorShadowSplit(60,1)
			PAIN G 6
			PAIN G 6 A_FloatPain(0,8,64)
			Goto See
		Pain.Fist:
			TNT1 A 0 A_ActorShadowSplit(60,4)
			PAIN G 6
			PAIN G 6 A_FloatPain(0,8,64)
			PAIN GG 6
			Goto See
		Pain.Kick:
			TNT1 A 0 A_ActorShadowSplit(60,12)
			PAIN G 6
			PAIN G 6 A_FloatPain(0,8,64)
			PAIN GGGG 6
			Goto See
		Shadowsplit1:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("PElementalShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+192, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit2:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("PElementalShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+64, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit3:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("PElementalShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+0, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit4:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("PElementalShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+128, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit1a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("PElementalShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PElementalShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PElementalShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+192, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit2a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("PElementalShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PElementalShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PElementalShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+64, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit3a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("PElementalShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PElementalShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PElementalShadowSplit3", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+0, 20, 0, 0);
			}
			Goto FinishShadowSplit
		Shadowsplit4a:
			TNT1 A 0
			{
				A_ActorStartShadowSplit;
				A_SpawnItemEx("PElementalShadowSplit1", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PElementalShadowSplit2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PElementalShadowSplit4", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
				ThrustThing(angle*256/360+128, 20, 0, 0);
			}
			Goto FinishShadowSplit
		FinishShadowSplit:
			PNSS AAAAAAAAAAAAAAA 1 Bright A_SpawnItemEx ("PElementalShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			TNT1 A 0 A_ActorEndShadowSplit
			TNT1 A 0
			{
				if (random(1,4) <= 3) { return state("Missile"); }
				return state("");
			}
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			PAIN H 8 bright
			PAIN I 8 bright A_Scream
			PAIN JK 8 bright
			PAIN L 8 bright A_PainDie       // See LostSoul
			PAIN M 8 bright
			TNT1 A 0 
			stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			PAIN G 5 A_GenericFreezeDeath
			PAIN G 1 A_FreezeDeathChunks
			wait
	}
}
ACTOR PElementalShadowSplitAfterImage
{
	Radius 31
	Height 56
	+NOGRAVITY
	+FLOORCLIP
	+NOLIFTDROP
	Alpha 0.4
	RenderStyle "Translucent"
	States
	{
	Spawn:
		PNSS B 1 A_FadeTo (0, 0.04, 1)
		Loop
	}
}

ACTOR PElementalShadowSplit1 : PElementalShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+64, 20, 0, 0)
		PNSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("PElementalShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR PElementalShadowSplit2 : PElementalShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+192, 20, 0, 0)
		PNSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("PElementalShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR PElementalShadowSplit3 : PElementalShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+128, 20, 0, 0)
		PNSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("PElementalShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}

ACTOR PElementalShadowSplit4 : PElementalShadowSplitAfterImage
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ThrustThing(angle*256/360+0, 20, 0, 0)
		PNSS AAAAAAAAAAAAAAA 1 A_SpawnItemEx ("PElementalShadowSplitAfterImage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		Stop
	}
}



actor HadesElemental : AetheriusMonsterZSC 30130
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Hades Scions"
	Tag "Hades Elemental"

	dropitem DoomSpellMana 36
	dropitem DoomSpellMana2 30
	dropitem DoomSpellMana3 24
	dropitem Berserk 2
	dropitem Berserk 2
	dropitem Berserk 2
	dropitem DiamondSkin 2
	dropitem DiamondSkin 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronGauntlets 1

	obituary "%o was electrocuted by a Hades Elemental."
	hitobituary "%o got chomped by a Hades Elemental."
	health 1600
	radius 31
	height 60
	Mass 800
	speed 10
	MeleeDamage 10
	DamageType normal
	seesound "monster/helsit"
	painsound "monster/helpai"
	deathsound "monster/heldth"
	activesound "monster/helact"
	meleesound "caco/melee"
	MONSTER
	+FLOAT
	+NOGRAVITY
	+MISSILEMORE
	+NOTARGET
	+DONTHURTSPECIES
	+NORADIUSDMG
	+AVOIDMELEE

	DamageFactor "Holy", 6
	DamageFactor "Lightning", 0
	Damagefactor "Crush", 0.5 // 4.0
	Damagefactor "Fire", 0.5
	Damagefactor "Ice", 1.5
	Damagefactor "Magic", 2.56

	painchance 32
	Painchance "Fist", 48 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 80 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 48 // Fist attacks have a +50% chance of stunning an enemy
	PainChance "Ice", 64
	PainChance "Fire", 16
	Painchance "Holy", 255 // Demons = +300% Pain Chance

	states
	{
		Spawn:
			HELE A 0 NoDelay 
			HELE A 10 A_FloatLook(12)
			Goto Spawn+1
		See:
			HELE A 0
			HELE A 0 A_SetShootable
			HELE AAAAAAAAAAA 3
			{
				A_FloatChaseCheck(3,6,9,12,0.5,0.5);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(3,24);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			HELE A 3
			{
				A_FloatChaseCheck(3,6,9,12,0.5,0.5);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(3,24);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;

				if (A_JumpIfCloser(1024,"IdleMissile"))
				{
					if (levelbehavior && user_monsterlevel > 180) { if (random(1,1000) <= 550) { return state("IdleMissile"); } return state(""); }
					else if (levelbehavior && user_monsterlevel > 120) { if (random(1,1000) <= 400) { return state("IdleMissile"); } return state(""); }
					else if (levelbehavior && user_monsterlevel > 60) { if (random(1,1000) <= 200) { return state("IdleMissile"); } return state(""); }
					return state("");
				}
				else { return state(""); }
				return state("");
			}
			HELE A 0
			{
				A_HETeleport("TeleportChoose");
			}
			goto See+1

		TeleportChoose:
			HELE A 0 A_HadesTeleportChoose(90)
			goto Teleport
		Teleport:
			HELE A 0 
			{
				A_UnSetshootable;
				if (random(1,4) <= 1) { A_UnsetSolid; }
			}
			HELE A 1 A_StartSound("monster/heltel")
			HELE A 1 A_SetTranslucent(0.90)
			HELE A 1 A_SetTranslucent(0.80)
			HELE A 1 A_SetTranslucent(0.70)
			HELE A 1 A_SetTranslucent(0.60)
			HELE A 1 A_SetTranslucent(0.50)
			HELE A 1 A_SetTranslucent(0.40)
			HELE A 1 A_SetTranslucent(0.30)
			HELE A 1 A_SetTranslucent(0.20)
			HELE A 1 A_SetTranslucent(0.10)
			TNT1 A 0 A_Jump(128,25)
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_DVDSWander(0,1,3,1,1)
			TNT1 A 0 A_Jump(128,25)
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_DVDSChase("","",CHF_FASTCHASE,1,3,1,1)
			HELE A 1 A_StartSound("monster/heltel")
			HELE A 1 A_SetTranslucent(0.10)
			HELE A 1 A_SetTranslucent(0.20)
			HELE A 1 A_SetTranslucent(0.30)
			HELE A 1 A_SetTranslucent(0.40)
			HELE A 1 A_SetTranslucent(0.50)
			HELE A 1 A_SetTranslucent(0.60)
			HELE A 1 A_SetTranslucent(0.70)
			HELE A 1 A_SetTranslucent(0.80)
			HELE A 1 A_SetTranslucent(0.90)
			HELE A 1 A_SetTranslucent(1.0)
			HELE A 0 
			{
				A_SetSolid;
				A_SetShootable;
				A_GiveInventory("HadesTeleportCooldown", 1);
			}
			goto See+1
			
		Teleport2:
			HELE A 0 
			{
				A_UnSetshootable;
				if (random(1,4) <= 1) { A_UnsetSolid; }
			}
			HELE A 1 A_StartSound("monster/heltel")
			HELE A 1 A_SetTranslucent(0.80)
			HELE A 1 A_SetTranslucent(0.60)
			HELE A 1 A_SetTranslucent(0.40)
			HELE A 1 A_SetTranslucent(0.20)
			TNT1 A 0 A_Jump(128,50)
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_DVDSWander(0,1,3,1,1)
			TNT1 A 0 A_Jump(128,50)
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_DVDSChase("","",CHF_FASTCHASE,1,3,1,1)
			HELE A 1 A_StartSound("monster/heltel")
			HELE A 1 A_SetTranslucent(0.20)
			HELE A 1 A_SetTranslucent(0.40)
			HELE A 1 A_SetTranslucent(0.60)
			HELE A 1 A_SetTranslucent(0.80)
			HELE A 1 A_SetTranslucent(1.0)
			HELE A 0 
			{
				A_SetSolid;
				A_SetShootable;
				A_GiveInventory("HadesTeleportCooldown", 1);
			}
			goto See+1

		IdleMissile:
			HELE BC 5 Bright
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			HELE D 5 Bright
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }

				A_PainAttack("HadesSphere",0,PAF_NOSKULLATTACK|PAF_AIMFACING);
			}
			goto See+1

		Missile:
			TNT1 A 0
			{
				user_painfastchase = 0;
			}
		ChooseMissile:
			HELE A 0 A_Jump(256,"Missile1","Missile2","Missile3")

		Missile1:
			HELE EF 5 Bright
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			HELE G 5 Bright
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("HadesElementalBall","HadesElementalBallCrisis",24,0,-10);
				A_CrisisSpawnProjectile("HadesElementalBall","HadesElementalBallCrisis",24,0,-5);
				A_CrisisSpawnProjectile("HadesElementalBall","HadesElementalBallCrisis",24,0,0);
				A_CrisisSpawnProjectile("HadesElementalBall","HadesElementalBallCrisis",24,0,5);
				A_CrisisSpawnProjectile("HadesElementalBall","HadesElementalBallCrisis",24,0,10);
			}
			goto See+1

		Missile2:
			HELE EF 5 Bright
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			HELE G 5 Bright
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("HadesBolt","HadesBoltCrisis",32,0,-16);
				A_CrisisSpawnProjectile("HadesBolt","HadesBoltCrisis",32,0,0);
				A_CrisisSpawnProjectile("HadesBolt","HadesBoltCrisis",32,0,16);
			}
			goto See+1

		Missile3:
			HELE BC 5 Bright
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			HELE D 5 Bright 
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }

				A_DualPainAttack("HadesSphere");
			}
			goto See+1


		Melee:
			TNT1 A 0
			HELE ABD 5 Bright
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
			}
			HELE C 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack(random(1,10) * 10, "caco/melee","none","Melee",true);
			}
			goto See+1

		Pain:
			TNT1 A 0 A_HadesTeleport(90,96)
			HELE H 3
			HELE H 3 A_FloatPain(0,6,64)
			HELE H 6
			goto See
		Pain.Magic:
			TNT1 A 0 A_HadesTeleport(90,96)
			HELE H 3
			HELE H 3 A_FloatPain(0,6,64)
			HELE HH 6
			goto See
		Pain.Sceptre:
			TNT1 A 0 A_HadesTeleport(90,6)
			HELE H 3
			HELE H 3 A_FloatPain(0,6,64)
			HELE H 6
			goto See
		Pain.Fist:
			TNT1 A 0 A_HadesTeleport(90,24)
			HELE H 3
			HELE H 3 A_FloatPain(0,6,64)
			HELE HH 6
			Goto See
		Pain.Kick:
			TNT1 A 0 A_HadesTeleport(90,72)
			HELE H 3
			HELE H 3 A_FloatPain(0,6,64)
			HELE HHHH 6
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			HELE I 5 Bright A_Scream
			HELE JKL 5 Bright
			HELE M 5 Bright A_NoBlocking
			HELE M 0 Bright A_SpawnItemEx("HadesSphere",36,36)
			HELE M 0 Bright A_SpawnItemEx("HadesSphere",-36,36)
			HELE M 0 Bright A_SpawnItemEx("HadesSphere",-36,-36)
			HELE M 0 Bright A_SpawnItemEx("HadesSphere",36,-36)
			HELE NOP 5 Bright 
			HELE QRSTU 5 
			TNT1 A 0 
			HELE V -1 A_SetFloorClip
			stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			HELE H 5 A_GenericFreezeDeath
			HELE H 1 A_FreezeDeathChunks
			wait
		Raise:
			HELE V 0 A_UnsetFloorClip
			HELE U 0 
			HELE TSRQPONMLKJI 5
			goto See
	}
}


actor HadesOverLord : AetheriusMonsterZSC 30134
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Hades Scions"
	Tag "Hades Overlord"

	dropitem DoomSpellMana 112
	dropitem DoomSpellMana 112
	dropitem DoomSpellMana2 84
	dropitem DoomSpellMana2 84
	dropitem DoomSpellMana3 56
	dropitem DoomSpellMana3 56
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronGauntlets 1

	Health 4000
	Radius 31 
	Height 78 
	Mass 2000 
	Speed 13 
	DamageType normal 
	MONSTER
	Obituary "%o was smitten by a Hades Overlord."
	HitObituary "A Hades Overlord ate %o for lunch." 
	+FLOORCLIP 
	+NORADIUSDMG 
	+NOTARGET
	+MISSILEEVENMORE
	+FLOAT
	+NOGRAVITY
	+DONTFALL
	+AVOIDMELEE
	MeleeDamage 20
	MeleeRange 68
	SeeSound "monster/ovlsit" 
	PainSound "monster/ovlpai" 
	DeathSound "monster/ovldth" 
	ActiveSound "monster/ovlact"
	MeleeSound "caco/melee"

	PainChance 30
	Painchance "Fist", 45 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 75 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 45 // Fist attacks have a +50% chance of stunning an enemy
	PainChance "Ice", 40
	PainChance "Fire", 10
	Painchance "Holy", 120 // Demons = +300% Pain Chance
	DamageFactor "Holy", 6
	DamageFactor "Lightning", 0
	Damagefactor "Crush", 0.5 // 4.0
	Damagefactor "Fire", 0.5
	Damagefactor "Ice", 1.5
	Damagefactor "Magic", 2.56

	states
	{
		Spawn:
			OVER A 0 NoDelay 
			OVER A 10 A_FloatLook(12)
			Goto Spawn+1
		See:
			OVER A 0
			OVER A 0 A_UnSetInvulnerable
			OVER AABBAAC 3
			{
				A_FloatChaseCheck(3,6,9,12,0.5,0.5);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(4,16);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			OVER C 3
			{
				A_FloatChaseCheck(3,6,9,12,0.5,0.5);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }

				A_FastChaseCalc(4,16);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;

				if (A_JumpIfCloser(1024,"IdleMissile"))
				{
					if (levelbehavior && user_monsterlevel > 180) { if (random(1,1000) <= 550) { return state("IdleMissile"); } return state(""); }
					else if (levelbehavior && user_monsterlevel > 120) { if (random(1,1000) <= 400) { return state("IdleMissile"); } return state(""); }
					else if (levelbehavior && user_monsterlevel > 60) { if (random(1,1000) <= 200) { return state("IdleMissile"); } return state(""); }
					return state("");
				}
				else { return state(""); }
				return state("");
			}
			OVER A 0
			{
				A_HOTeleport("TeleportChoose");
				return state("");
			}
			goto See

		TeleportChoose:
			OVER F 0 A_HadesTeleportChoose(90)
			goto Teleport
		Teleport:
			OVER F 0 
			OVER F 0 
			{
				A_SetInvulnerable;
				if (random(1,4) <= 1) { A_UnsetSolid; }
			}
			OVER F 1 A_StartSound("monster/heltel")
			OVER F 1 A_SetTranslucent(0.90)
			OVER F 1 A_SetTranslucent(0.80)
			OVER F 1 A_SetTranslucent(0.70)
			OVER F 1 A_SetTranslucent(0.60)
			OVER F 1 A_SetTranslucent(0.50)
			OVER F 1 A_SetTranslucent(0.40)
			OVER F 1 A_SetTranslucent(0.30)
			OVER F 1 A_SetTranslucent(0.20)
			OVER F 1 A_SetTranslucent(0.10)
			OVER F 0 A_Jump(128,25)
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_DVDSChase("","",CHF_FASTCHASE,1,3,1,1)
			TNT1 A 0 A_Jump(128,25)
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_DVDSChase("","",CHF_FASTCHASE,1,3,1,1)
			OVER F 1 A_StartSound("monster/heltel")
			OVER F 1 A_SetTranslucent(0.10)
			OVER F 1 A_SetTranslucent(0.20)
			OVER F 1 A_SetTranslucent(0.30)
			OVER F 1 A_SetTranslucent(0.40)
			OVER F 1 A_SetTranslucent(0.50)
			OVER F 1 A_SetTranslucent(0.60)
			OVER F 1 A_SetTranslucent(0.70)
			OVER F 1 A_SetTranslucent(0.80)
			OVER F 1 A_SetTranslucent(0.90)
			OVER F 1 A_SetTranslucent(1.0)
			OVER F 0 
			{
				A_SetSolid;
				A_UnSetInvulnerable;
				A_GiveInventory("HadesTeleportCooldown", 1);
			}
			goto See
		Teleport2:
			OVER F 0 
			{
				A_SetInvulnerable;
				if (random(1,4) <= 1) { A_UnsetSolid; }
			}
			OVER F 1 A_StartSound("monster/heltel")
			OVER F 1 A_SetTranslucent(0.80)
			OVER F 1 A_SetTranslucent(0.60)
			OVER F 1 A_SetTranslucent(0.40)
			OVER F 1 A_SetTranslucent(0.20)
			OVER F 0 A_Jump(128,50)
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_DVDSChase("","",CHF_FASTCHASE,1,3,1,1)
			TNT1 A 0 A_Jump(128,50)
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_DVDSChase("","",CHF_FASTCHASE,1,3,1,1)
			OVER F 1 A_StartSound("monster/heltel")
			OVER F 1 A_SetTranslucent(0.20)
			OVER F 1 A_SetTranslucent(0.40)
			OVER F 1 A_SetTranslucent(0.60)
			OVER F 1 A_SetTranslucent(0.80)
			OVER F 1 A_SetTranslucent(1.0)
			OVER F 0 
			{
				A_SetSolid;
				A_UnSetInvulnerable;
				A_GiveInventory("HadesTeleportCooldown", 1);
			}
			goto See

		IdleMissile:
			OVER DE 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;
			}
			OVER FFFFF 4 bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
				A_PainAttack("HSOverlord",0,PAF_AIMFACING);
			}
			goto See+1

		Missile:
			TNT1 A 0
			{
				user_painfastchase = 0;
			}
			OVER D 0 A_Jump(256,"Missile1","Missile2","Missile3")

		Missile1:
			OVER DE 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;
			}
			OVER FFFFF 4 bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
				A_PainAttack("HSOverlord",0,PAF_AIMFACING);
			}
			goto See
		Missile2:
			OVER GH 8 Bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;
			}
			OVER H 8 Bright 
			{
				A_FaceTarget;
				A_StartSound("weapons/shock");
				A_MonsterCrisisCheck; // Single Projectile
				if (health <= user_HPLowRange)
				{
					A_CrisisSpawnProjectile("StormShot2","StormShot2Crisis",43,0,0,0,0);
				}
				else
				{
					A_CrisisSpawnProjectile("StormShot1","StormShot1Crisis",43,0,0,0,0);
				}
			}
			goto See
		Missile3:
			OVER JJJJ 2
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
				A_FaceTarget;
			}
			OVER K 4 Bright 
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("HadesOverlordBall","HadesOverlordBallCrisis",92,-40,random(-3,3),0,random(-3,3));
				A_CrisisSpawnProjectile("HadesOverlordBall","HadesOverlordBallCrisis",8,-40,random(-3,3),0,random(-3,3));
				A_CrisisSpawnProjectile("HadesOverlordBall","HadesOverlordBallCrisis",92,40,random(-3,3),0,random(-3,3));
				A_CrisisSpawnProjectile("HadesOverlordBall","HadesOverlordBallCrisis",8,40,random(-3,3),0,random(-3,3));
				A_CrisisSpawnProjectile("OverBall","OverBallCrisis",54,-50,random(-3,3),0,random(-3,3));
				A_CrisisSpawnProjectile("OverBall","OverBallCrisis",54,50,random(-3,3),0,random(-3,3));
			}
			OVER J 4 A_SpidRefire
			OVER J 0 A_Jump(32,"See")     
			goto Missile3+4

		Melee:
			TNT1 A 0
			OVER ADF 5
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
				A_FaceTarget;
			}
			OVER E 5
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(4); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack(random(1,10) * 14, "caco/melee","none","Melee",true);
			}
			goto See

		Pain:
			TNT1 A 0 A_HadesTeleport(90,48)
			OVER L 6
			OVER L 6 A_FloatPain(0,6,64)
			goto See
		Pain.Magic:
			TNT1 A 0 A_HadesTeleport(90,48)
			OVER L 6
			OVER L 6 A_FloatPain(0,6,64)
			OVER LL 12
			goto See
		Pain.Sceptre:
			TNT1 A 0 A_HadesTeleport(90,3)
			OVER L 6
			OVER L 6 A_FloatPain(0,6,64)
			goto See
		Pain.Fist:
			TNT1 A 0 A_HadesTeleport(90,12)
			OVER L 6
			OVER L 6 A_FloatPain(0,6,64)
			OVER LL 6
			Goto See
		Pain.Kick:
			TNT1 A 0 A_HadesTeleport(90,36)
			OVER L 6
			OVER L 6 A_FloatPain(0,6,64)
			OVER LLLL 6
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			OVER M 0 bright A_Facetarget
			OVER M 8 bright A_Scream
			OVER NO 8 bright
			OVER P 0 bright A_Noblocking
			OVER PPPPP 0 bright A_SpawnProjectile("OverFlesh1",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
			OVER PPPPP 0 bright A_SpawnProjectile("OverFlesh2",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
			OVER PPPPPPPPPP 0 A_SpawnProjectile("OverFlesh3",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
			OVER PPPPPPPPPP 0 A_SpawnProjectile("OverFlesh4",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
			OVER PPPPPPPPPP 0 A_SpawnProjectile("OverFlesh5",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
			OVER PPPPPPPPPP 0 A_SpawnProjectile("OverFlesh6",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
			OVER P 0 bright A_SpawnProjectile("OverBigArm1",40,-40,-90,2,random(-1,1)) 
			OVER P 0 bright A_SpawnProjectile("OverBigArm2",40,40,90,2,random(-1,1))
			OVER P 0 bright A_SpawnProjectile("OverSmallArm1",100,-30,-90,2,random(-15,15))
			OVER P 0 bright A_SpawnProjectile("OverSmallArm1",100,30,90,2,random(-15,15))
			OVER P 0 bright A_SpawnProjectile("OverSmallArm2",100,-30,-90,2,random(-15,15))
			OVER P 0 bright A_SpawnProjectile("OverSmallArm2",100,30,90,2,random(-15,15))
			OVER P 0 bright A_SpawnProjectile("OverHorn1",110,-16,-90,2,random(-15,15))
			OVER P 0 bright A_SpawnProjectile("OverHorn2",110,16,90,2,random(-15,15))
			OVER PQRSTUV 8 bright
			TNT1 A 0 
			stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			OVER L 5 A_GenericFreezeDeath
			OVER L 1 A_FreezeDeathChunks
			wait
	}
}


actor HSOverlord : AetheriusMonsterZSC 30345
{ 
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Hades Scions"
	Tag "Hades Sphere"

	Health 35
	Radius 16 
	Height 32 
	Mass 3000 
	Speed 10
	RenderStyle "Normal"
	Obituary "%o was blown away by a Hades Sphere."

	MONSTER
	+NOPAIN
	+LOOKALLAROUND
	+DONTGIB
	+NOTARGET
	+NOGRAVITY 
	+FLOAT
	+DONTFALL
	+DONTHURTSPECIES
	+FORCEXYBILLBOARD
	+AVOIDMELEE
	+THRUSPECIES
	Species "HadesSphere"

	DamageFactor "Crush", 2.0 // 16.0
	Damagefactor "Magic", 2.56
	Damagefactor "Holy", 6
	Damagefactor "Sceptre", 2
	Painchance "Holy", 255 // Demons = +300% Pain Chance

	MeleeThreshold 192
	SeeSound "monster/hadsit"
	States 
	{
		Spawn:
			TNT1 A 0 NoDelay 
			TNT1 A 4 Bright A_Look      
			goto Spawn+1
		See:
			HADE EFGH 4 Bright
			HADE A 0
			goto Chasing
		Chasing:
			HADE A 0 Bright A_UnSetInvulnerable
			HADE A 2 Bright A_StartSound("monster/hadwlk")
			HADE ABBCCDD 2 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }

				A_FastChaseCalc(2,32);
				if (random(1,256) <= user_fastchasechance) { A_DVDSChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			HADE D 0 Bright 
			{
				A_HadesSphereTeleport("Teleport",128,1024);
			}
			loop

		Teleport:
			HADE H 0 Bright 
			{
				A_UnSetSolid;
				A_UnSetShootable;
				A_SetInvulnerable;
			}
			HADE H 5 Bright A_StartSound("monster/hadtel")
			HADE GFEIJKL 3 Bright
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 Bright A_DVDSChase("","",CHF_FASTCHASE,1,3,1,1)
			HADE L 3 Bright A_StartSound("monster/hadtel")
			HADE KJIEFG 4 Bright
			HADE H 0 Bright 
			{
				A_SetSolid;
				A_SetShootable;
				A_UnSetInvulnerable;
				A_GiveInventory("HSphereTeleportCooldown", 1);
			}
			Goto Chasing

		Melee:
			HADE A 0
			HADE H 0 A_SetInvulnerable
			HADE HGFE 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 80) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }
			}
			HADE E 0 
			{
				A_GetHSHealthPreExp;
				A_Die("HSExplode");
			}
			stop
			
		Pain:
		Pain.Fist:
		Pain.Kick:
		Pain.PoisonNeedle:
			Goto See
			
		Death.HSExplode:
		Death:
			HADE E 0 Bright A_Noblocking
			HADE E 0 Bright A_SpawnProjectile("HSBoomOverlord",0,0,0,0)
			TNT1 A 0 A_UnSetInvulnerable
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			TNT1 A 5
			Stop
		XDeath:
			TNT1 A 0 A_UnSetInvulnerable
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			HADE N 0 Bright A_Noblocking
			HADE H 5 Bright A_StartSound("monster/haddth")
			HADE GFE 4 Bright
			HADE RSTUVWX 4 Bright
			TNT1 A 0 
			Stop
		Ice:
			goto Death
	}
}


actor DSArachnotron : AetheriusMonsterZSC 26535
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Arachnotron Type"
	Tag "Arachnotron"

	Health 500
	Radius 64
	Height 64
	Mass 600
	Speed 12
	Painchance 128
	Painchance "Fist", 192 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 192 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Fire", 96
	DamageFactor "Fire", 0.75

	Painchance "Plasma", 176
	DamageFactor "Plasma", 1.375
	Painchance "Thunder", 224
	DamageFactor "Thunder", 1.75
	Painchance "Electric", 224
	DamageFactor "Electric", 1.75
	Painchance "Lightning", 224
	DamageFactor "Lightning", 1.75

	Damagefactor "Crush", 0.65 // 5.2
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance

	Species "Arachnotron"
	Monster
	+FLOORCLIP
	+BOSSDEATH +DONTHURTSPECIES
	SeeSound "baby/sight"
	PainSound "arachnotron/pain" 
	DeathSound "baby/death"
	ActiveSound "baby/active"
	Obituary "$OB_BABY"
	dropitem DoomSpellMana2 18
	dropitem Cell 2 20
	dropitem Cell 2 20
	dropitem CellPack 2 100
	dropitem PlasmaRifle 2 40
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronHelmet 1
 
	states
	{
		Spawn:
			BSPI A 0 NoDelay 
			BSPI AB 10 A_Look
			goto Spawn+1
		See:
			BSPI A 0
			BSPI A 20
			BSPI AABBCCDDEEFF 3
			{
				user_walksound++;
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				if (user_walksound == 1) { A_BabyMetal; } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				if (user_walksound >= 6) { user_walksound = 0; }
			}
			goto See+2

		Missile:
			TNT1 A 0
			BSPI AA 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }

				A_FaceTarget;
			}
		Missile2:
			TNT1 A 0
			BSPI G 5 bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }

				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("ArachnotronPlasma","ArachnotronPlasmaCrisis");
			}
			BSPI H 5 bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
			}
			BSPI H 0 bright
			{
				A_SpidRefire;
			}
			goto Missile2

		Pain:
			BSPI I 3
			BSPI I 3 A_DVDSPain
			Goto See+2
		Pain.Fist:
			BSPI I 3
			BSPI I 3 A_DVDSPain
			BSPI II 3
			Goto See+2
		Pain.Kick:
			BSPI I 3
			BSPI I 3 A_DVDSPain
			BSPI IIII 3
			Goto See+2

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			BSPI II 3
			BSPI I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			BSPI I 2
			BSPI I 1
			BSPI I 2
			Goto See+1
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			BSPI I 3
			BSPI I 3
			BSPI I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			BSPI I 3
			BSPI I 3
			BSPI I 3
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			BSPI I 3
			BSPI I 3
			BSPI I 3
			Goto See+1
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			BSPI J 20 A_Scream
			BSPI K 7 A_NoBlocking
			BSPI LMNO 7
			TNT1 A 0 
			BSPI P -1 A_DVDSBossDeath
			stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			BSPI I 5 A_GenericFreezeDeath
			BSPI I 1 A_FreezeDeathChunks
			wait
		Raise:
			BSPI P 5 
			BSPI ONMLKJ 5
			Goto See+1
	}
}

actor ArachnotronMK2 : DSArachnotron 26526
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Arachnotron Type"
	Tag "Augmented Arachnotron"

	Obituary "%o was toasted by an augmented arachnotron."
	Health 1000
	Radius 64
	Height 64
	Mass 900
	Speed 14
	Scale 1
	BloodColor "bf af 20"
	Painchance 64
	Painchance "Fist", 96 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 160 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 96 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Fire", 72

	DamageFactor 0.75
	RadiusDamageFactor 0.75
	DamageFactor "Explosive", 0.75

	DamageFactor "Fire", 0.75
	Painchance "Plasma", 88
	DamageFactor "Plasma", 1.375
	Painchance "Thunder", 112
	DamageFactor "Thunder", 1.75
	Painchance "Electric", 112
	DamageFactor "Electric", 1.75
	Painchance "Lightning", 112
	DamageFactor "Lightning", 1.75

	Damagefactor "Crush", 0.65 // 5.2

	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance
	Species "Arachnotron"
	+DONTHURTSPECIES
	SeeSound "baby/sight"
	PainSound "arachnotron/pain" 
	DeathSound "baby/death"
	ActiveSound "baby/active"

	dropitem DoomSpellMana2 18
	dropitem Cell 2 20
	dropitem Cell 2 20
	dropitem CellPack 2 100
	dropitem PlasmaRifle 2 40
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronHelmet 1


	States
	{
		Spawn:
			BSP2 A 0 NoDelay 
			BSP2 AB 10 A_Look
			goto Spawn+1
		See:
			BSP2 A 0
			BSP2 A 20
			BSP2 AABBCCDDEEFF 3
			{
				user_walksound++;
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				if (user_walksound == 1) { A_BabyMetal; } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				if (user_walksound >= 6) { user_walksound = 0; }
			}
			Goto See+2
		Missile:
			TNT1 A 0
			BSP2 AA 6 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }

				A_FaceTarget;
			}
		Missile2:
			TNT1 A 0
			BSP2 G 2 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }

				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("ArachnotronPlasma","ArachnotronPlasmaCrisis",19,-12);
			}
			BSP2 R 2 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
			}
			BSP2 H 2 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }

				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("ArachnotronPlasma","ArachnotronPlasmaCrisis",19,12);
			}
			BSP2 Q 2 Bright 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
				A_SpidRefire;
			}
			Goto Missile2

		Pain:
			BSP2 I 3
			BSP2 I 3 A_DVDSPain
			Goto See+2
		Pain.Fist:
			BSP2 I 3
			BSP2 I 3 A_DVDSPain
			BSP2 II 3
			Goto See+2
		Pain.Kick:
			BSP2 I 3
			BSP2 I 3 A_DVDSPain
			BSP2 IIII 3
			Goto See+2

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			BSP2 II 3
			BSP2 I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			BSP2 I 2
			BSP2 I 1
			BSP2 I 2
			Goto See+1
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			BSP2 I 3
			BSP2 I 3
			BSP2 I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			BSP2 I 3
			BSP2 I 3
			BSP2 I 3
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			BSP2 I 3
			BSP2 I 3
			BSP2 I 3
			Goto See+1
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			BSP2 J 20 A_Scream
			BSP2 K 7 A_NoBlocking
			BSP2 LMNO 7 
			BSP2 P -1 A_DVDSBossDeath
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			BSP2 I 5 A_GenericFreezeDeath
			BSP2 I 1 A_FreezeDeathChunks
			wait
		Raise:
			BSP2 P 5 
			BSP2 ONMLKJ 5
			Goto See+1
	}
}

actor FusionArachnotron : DSArachnotron 20000
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Arachnotron Type"
	Tag "Fusion Arachnotron"
	
	OBITUARY "%o was vaporized by a fusion cannon Arachnotron"
	Health 1000
	Radius 64
	Height 64
	Mass 900
	Speed 12
	Painchance 96
	Painchance "Fist", 144 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 240 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 144 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor 0.875
	RadiusDamageFactor 0.875
	DamageFactor "Explosive", 0.875

	Painchance "Fire", 72
	DamageFactor "Fire", 0.75

	Painchance "Plasma", 132
	DamageFactor "Plasma", 1.375
	Painchance "Thunder", 168
	DamageFactor "Thunder", 1.75
	Painchance "Electric", 168
	DamageFactor "Electric", 1.75
	Painchance "Lightning", 168
	DamageFactor "Lightning", 1.75

	Damagefactor "Crush", 0.65 // 5.2
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance

	SEESOUND "baby/sight"
	PainSound "farachnotron/pain" 
	DEATHSOUND "baby/death"
	ACTIVESOUND "baby/active"
	MONSTER
	+FLOORCLIP
	+MISSILEMORE
	+MISSILEEVENMORE
	Species "Arachnotron"
	+AVOIDMELEE
	+DONTHURTSPECIES

	dropitem DoomSpellMana2 36
	dropitem CellPack 2 100
	dropitem CellPack 2 100
	dropitem CellPack 2 100
	dropitem PlasmaRifle 2 40
	dropitem PlasmaRifle 2 40
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronHelmet 1

	states
	{
		Spawn:
			FSPI A 0 NoDelay 
			FSPI AB 10 A_Look
			goto Spawn+1
		See:
			FSPI A 0
			FSPI A 20
			FSPI AABBCCDDEEFF 3
			{
				user_walksound++;
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				if (user_walksound == 1) { A_BabyMetal; } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				if (user_walksound >= 6) { user_walksound = 0; }
			}
			goto See+2

		Missile:
			TNT1 A 0
			FSPI A 20 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(random(1,6)*2); } // 2-12
				else if (levelbehavior && user_monsterlevel > 135) { A_SetTics(random(2,7)*2); } // 4-14
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(random(3,8)*2); } // 6-16
				else if (levelbehavior && user_monsterlevel > 45) { A_SetTics(random(4,9)*2); } // 8-18
				else { A_SetTics(random(5,10)*2); } // 10-20
				
				A_FaceTarget;
			}
			FSPI A 4 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }

				user_shotsfired = 0;
				if (levelbehavior && user_monsterlevel > 240) { user_spread1 = -2; user_spread2 = 2; }
				else if (levelbehavior && user_monsterlevel > 160) { user_spread1 = -3; user_spread2 = 3; }
				else if (levelbehavior && user_monsterlevel > 80) { user_spread1 = -4; user_spread2 = 4; }
				else { user_spread1 = -5; user_spread2 = 5; }

				user_shotsfiredmax = 8;
				A_FaceTarget;
			}
		MissileHold:
			FSPI GH 3 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }

				A_FaceTarget;

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("FusionShot","FusionShotCrisis",24,0,5*random(user_spread1,user_spread2));
				if (levelbehavior && user_monsterlevel > 150) { A_CrisisSpawnProjectile("FusionShot","FusionShotCrisis",24,0,5*random(user_spread1,user_spread2)); }
				if (levelbehavior && user_monsterlevel > 300) { A_CrisisSpawnProjectile("FusionShot","FusionShotCrisis",24,0,5*random(user_spread1,user_spread2)); }

				user_shotsfired += 1;
				if (user_shotsfired >= user_shotsfiredmax) { return state("MissileEnd"); }
				return state("");
			}
			loop
		MissileEnd:
			FSPI H 1 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(0); }

				if (random(1,32) == 1) { return state("Missile"); }
				return state("");
			}
			Goto See+2

		Pain:
			FSPI I 3
			FSPI I 3 A_DVDSPain
			Goto See+2
		Pain.Fist:
			FSPI I 3
			FSPI I 3 A_DVDSPain
			FSPI II 3
			Goto See+2
		Pain.Kick:
			FSPI I 3
			FSPI I 3 A_DVDSPain
			FSPI IIII 3
			Goto See+2

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			FSPI II 3
			FSPI I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			FSPI I 2
			FSPI I 1
			FSPI I 2
			Goto See+1
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			FSPI I 3
			FSPI I 3
			FSPI I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			FSPI I 3
			FSPI I 3
			FSPI I 3
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			FSPI I 3
			FSPI I 3
			FSPI I 3
			Goto See+1
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			FSPI J 20 A_Scream
			FSPI K 7 A_NoBlocking
			FSPI LMNO 7
			TNT1 A 0 
			FSPI P -1 A_DVDSBossDeath
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			FSPI I 5 A_GenericFreezeDeath
			FSPI I 1 A_FreezeDeathChunks
			wait
		Raise:
			FSPI P 5 
			FSPI ONMLKJ 5
			Goto See+1
	}
}

actor DSRailArachnotron : AetheriusMonsterZSC 3125
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Arachnotron Type"
	Tag "Arachnotron"
	
	dropitem DoomSpellMana2 36
	dropitem CellPack 2 100
	dropitem CellPack 2 100
	dropitem CellPack 2 100
	dropitem CellPack 2 40
	dropitem CellPack 2 40
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronHelmet 1

	Damagefactor "Crush", 0.65 // 5.2
	DamageFactor "Fire", 0.75
	Painchance "Fire", 96
	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 255 // Demons = +300% Pain Chance

	Painchance 128

	Painchance "Plasma", 176
	DamageFactor "Plasma", 1.375
	Painchance "Thunder", 224
	DamageFactor "Thunder", 1.75
	Painchance "Electric", 224
	DamageFactor "Electric", 1.75
	Painchance "Lightning", 224
	DamageFactor "Lightning", 1.75


	Painchance "Fist", 192 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 192 // Fist attacks have a +50% chance of stunning an enemy

	Health 500
	Radius 64
	Height 64
	Mass 600
	Speed 12
	Damage 30
	Monster
	+FLOORCLIP
	SeeSound "baby/sight"
	PainSound "arachnotron/pain" 
	DeathSound "baby/death"
	ActiveSound "baby/active"
	Obituary "%o was railed by an arachnotron."
	Decal RedRailScorch
	
	Species "Arachnotron"
	+DONTHURTSPECIES
	
	States
	{
		Spawn:
			RSPI A 0 NoDelay 
			RSPI AB 10 A_Look
			goto Spawn+1
		See:
			RSPI A 0
			RSPI A 20
			RSPI AABBCCDDEEFF 3
			{
				user_walksound++;
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				if (user_walksound == 1) { A_BabyMetal; } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				if (user_walksound >= 6) { user_walksound = 0; }
			}
			goto See+2

		Missile:
			TNT1 A 0
			RSPI A 0 A_StartSound("baby/chargerailgun")
			RSPI AG 16
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 210) { A_SetTics(9); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(11); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(12); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(13); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 30) { A_SetTics(15); }
				A_FaceTarget;
			}
			RSPI H 4
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;

				A_MonsterCrisisCheck;
				A_CrisisRailgun(30, 6, AA0000, FF0000, 0, 1, 0, "DBTRailPuff", 0, 0, 8192, 35, 1.0, 1.0, "None", -14, 270, 0, 1.5);
			}
			RSPI G 8
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
			}
			Goto See+2

		Pain:
			RSPI I 3
			RSPI I 3 A_DVDSPain
			Goto See+2
		Pain.Fist:
			RSPI I 3
			RSPI I 3 A_DVDSPain
			RSPI II 3
			Goto See+2
		Pain.Kick:
			RSPI I 3
			RSPI I 3 A_DVDSPain
			RSPI IIII 3
			Goto See+2

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			RSPI II 3
			RSPI I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			RSPI I 2
			RSPI I 1
			RSPI I 2
			Goto See+1
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			RSPI I 3
			RSPI I 3
			RSPI I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			RSPI I 3
			RSPI I 3
			RSPI I 3
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			RSPI I 3
			RSPI I 3
			RSPI I 3
			Goto See+1
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			RSPI J 20 A_Scream
			RSPI K 7 A_NoBlocking
			RSPI LMNO 7
			TNT1 A 0 
			RSPI P -1 A_DVDSBossDeath
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			RSPI I 5 A_GenericFreezeDeath
			RSPI I 1 A_FreezeDeathChunks
			wait
		Raise:
			RSPI P 5 
			RSPI ONMLKJ 5
			Goto See+1
 }
}

actor DSSpiderMastermind : AetheriusMonsterZSC 26552
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Boss Type"
	Tag "Spider Mastermind"

	Health 3000
	Radius 128
	Height 100
	Mass 1000
	Speed 12
	Painchance 40
	Painchance "Fist", 60 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 100 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 60 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.2 // 1.6

	Painchance "Plasma", 55
	DamageFactor "Plasma", 1.375
	Painchance "Thunder", 70 // Demons = +300% Pain Chance
	DamageFactor "Thunder", 1.75
	Painchance "Electric", 70 // Demons = +300% Pain Chance
	DamageFactor "Electric", 1.75
	Painchance "Lightning", 70 // Demons = +300% Pain Chance
	DamageFactor "Lightning", 1.75

	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 120 // Demons = +300% Pain Chance
	Monster
	MinMissileChance 160
	Species "SpiderMastermind"
	+BOSS
	+MISSILEMORE
	+FLOORCLIP
	+NORADIUSDMG
	+DONTMORPH
	+BOSSDEATH
	+DONTHARMSPECIES
	+AVOIDMELEE
	SeeSound "spider/sight"
	AttackSound "spider/attack" 
	PainSound "mastermind/pain"
	DeathSound "spider/death"
	ActiveSound "spider/active"
	Obituary "$OB_SPIDER"
	dropitem RandomPowerupSpawner 2
	dropitem Backpack 2
	dropitem Backpack 2
	dropitem DoomSpellMana 88
	dropitem DoomSpellMana2 66
	dropitem DoomSpellMana3 44
	dropitem ChainGun 32 10
	dropitem ChainGun 2 30
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronGauntlets 1

	states
	{
		Spawn:
			SPID A 0 NoDelay 
			SPID AB 10 A_Look
			goto Spawn+1
		See:
			SPID A 0
			{
				user_shotsfired = 0;		
			}
			SPID AABBCCDDEEFF 3
			{
				user_walksound++;
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				if (user_walksound == 1) { A_Metal; } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				if (user_walksound >= 4) { user_walksound = 0; }
			}
			loop

		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			TNT1 A 0
			{
				if (!(CountInv("SpidMastChaingunCooldown")))
				{
					if (levelbehavior) { user_shotsfiredmax += random((75 + (user_monsterlevel / 4)),(125 + (user_monsterlevel / 2))); }
					else { user_shotsfiredmax = random(75,125); }
				}
				else
				{
					return state("See");
				}
				return state("");
			}
			SPID A 20 BRIGHT
			{
				A_FaceTarget;
				user_shotaccuracy = 5.625; // 22.5;
				user_shotzaccuracy = 0.0;
				if (user_charmed) { user_shotaccuracy *= 0.667; user_shotzaccuracy *= 0.667; }
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); user_shotaccuracy = user_shotaccuracy * 13 / 19; user_shotzaccuracy = user_shotzaccuracy * 13 / 19; }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(15); user_shotaccuracy = user_shotaccuracy * 14 / 19; user_shotzaccuracy = user_shotzaccuracy * 14 / 19; }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(16); user_shotaccuracy = user_shotaccuracy * 15 / 19; user_shotzaccuracy = user_shotzaccuracy * 15 / 19; }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(17); user_shotaccuracy = user_shotaccuracy * 16 / 19; user_shotzaccuracy = user_shotzaccuracy * 16 / 19; }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(18); user_shotaccuracy = user_shotaccuracy * 17 / 19; user_shotzaccuracy = user_shotzaccuracy * 17 / 19; }
				else if (levelbehavior && user_monsterlevel > 20) { A_SetTics(19); user_shotaccuracy = user_shotaccuracy * 18 / 19; user_shotzaccuracy = user_shotzaccuracy * 18 / 19; }
				user_shotaccuracy1 = user_shotaccuracy * -0.5;
				user_shotaccuracy2 = user_shotaccuracy * 0.5;
				user_shotzaccuracy1 = user_shotzaccuracy * -0.5;
				user_shotzaccuracy2 = user_shotzaccuracy * 0.5;
			}
			SPID A 0 A_MonsterRefire(10,"See")
		MissileLoop:
			SPID G 0 Bright
			{
				A_CheckIfTargetDead("See");
			}
			SPID G 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }

				A_FaceTarget;
				A_StartSound("shotguy/attack");
				A_MonsterCrisisCheck; // Multiple Tracers
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 3, random(1,5) * 3, "BulletPuff", 0, 1);
				}
				else
				{
					for (user_pelletsfired = 0; user_pelletsfired < 3; user_pelletsfired++)
					{
						A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 48, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
					}
				}
	
				user_shotsfired += 1;
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("SpidMastChaingunCooldown", 1);
					return state("MissileEnd"); 
				}
				return state("");
			}
			SPID G 0 A_MonsterRefire(10,"See")
			SPID G 0 Bright
			{
				A_CheckIfTargetDead("See");
			}
			SPID H 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }

				A_FaceTarget;
				A_StartSound("shotguy/attack");
				A_MonsterCrisisCheck; // Multiple Tracers
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 3, random(1,5) * 3, "BulletPuff", 0, 1);
				}
				else
				{
					for (user_pelletsfired = 0; user_pelletsfired < 3; user_pelletsfired++)
					{
						A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 48, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
					}
				}
	
				user_shotsfired += 1;
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("SpidMastChaingunCooldown", 1);
					return state("MissileEnd"); 
				}
				return state("");
			}
			SPID H 1 A_MonsterRefire(10,"MissileEnd")
			loop

		MissileEnd:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			SPID H 0 A_FaceTarget
			Goto See

		Pain:
			SPID I 3
			SPID I 3 A_DVDSPain
			Goto See
		Pain.Fist:
			SPID I 3
			SPID I 3 A_DVDSPain
			SPID II 3
			Goto See
		Pain.Kick:
			SPID I 3
			SPID I 3 A_DVDSPain
			SPID IIII 3
			Goto See

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			SPID II 3
			SPID I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			SPID I 1
			SPID I 2
			SPID I 1
			Goto See
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			SPID I 3
			SPID I 3
			SPID I 3 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			SPID I 3
			SPID I 3
			SPID I 3
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			SPID I 3
			SPID I 3
			SPID I 3
			Goto See
		Raise:
			SPID S 30
			SPID RQPONML 10
			SPID K 10
			SPID J 20
			goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SPID J 20 A_Scream
			SPID K 10 A_NoBlocking
			SPID LMNOPQR 10
			SPID S 30
			TNT1 A 0 
			SPID S -1 A_DVDSBossDeath
			stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			SPID I 5 A_GenericFreezeDeath
			SPID I 1 A_FreezeDeathChunks
			wait
		Raise:
			SPID S 30 
			SPID QRPONMLK 10
			SPID J 20
			goto See
	}
}

actor Demolisher : DSSpiderMastermind 30110
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Boss Type"
	Tag "Spider-Demolisher"

	Health 6000 
	Radius 128
	Height 100 
	Mass 1500 
	Speed 16 
	Painchance 20
	Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor 0.875
	RadiusDamageFactor 0.875
	DamageFactor "Explosive", 0.875
	DamageFactor "Crush", 0.2 // 1.6

	Painchance "Plasma", 27
	DamageFactor "Plasma", 1.375
	Painchance "Thunder", 35 // Demons = +300% Pain Chance
	DamageFactor "Thunder", 1.75
	Painchance "Electric", 35 // Demons = +300% Pain Chance
	DamageFactor "Electric", 1.75
	Painchance "Lightning", 35 // Demons = +300% Pain Chance
	DamageFactor "Lightning", 1.75

	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 60 // Demons = +300% Pain Chance
	Species "SpiderMastermind"
	MONSTER
	+NOTARGET
	+FLOORCLIP 
	+BOSS 
	+MISSILEEVENMORE
	+NORADIUSDMG 
	+AVOIDMELEE
	+DONTHARMSPECIES
	SeeSound "monster/demsit" 
	AttackSound "spider2/attack" 
	PainSound "demolisher/pain"
	DeathSound "monster/demdth" 
	ActiveSound "spider/active" 
	Obituary "%o felt the power of the Spider-Demolisher."
	dropitem RandomPowerupSpawner 2
	dropitem RandomPowerupSpawner 2
	dropitem Backpack 2
	dropitem Backpack 2
	dropitem Backpack 2
	dropitem Backpack 2
	dropitem DoomSpellMana 88
	dropitem DoomSpellMana2 66
	dropitem DoomSpellMana3 44
	dropitem ChainGun 32 10
	dropitem ChainGun 2 30
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem ClipBox 4 50
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronGauntlets 1

	States 
	{
		Spawn:
			DEMO A 0 NoDelay 
			DEMO AB 10 A_Look
			goto Spawn+1
		See:
			DEMO A 0
			{
				user_shotsfired = 0;
			}
			DEMO AABBCCDDEEFF 3
			{
				user_walksound++;
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				if (user_walksound == 1) { A_Metal; } else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				if (user_walksound >= 4) { user_walksound = 0; }
			}
			loop

		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			TNT1 A 0
			{
				if (random(1,256) <= 48)
				{
					if (!(CountInv("SpidMastChaingunCooldown")))
					{
						if (levelbehavior) { user_shotsfiredmax += random((75 + (user_monsterlevel / 4)),(125 + (user_monsterlevel / 2))); }
						else { user_shotsfiredmax = random(75,125); }
						return state("Missile2");
					}
					return state("");
				}
				return state("");
			}
			goto Missile1
		Missile1:
			DEMO A 20 BRIGHT
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(17); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(18); }
				else if (levelbehavior && user_monsterlevel > 20) { A_SetTics(19); }
				A_FaceTarget;
			}
			DEMO A 0 A_MonsterRefire(10,"See")
		Missile1Loop:
			DEMO T 0
			{
				A_CheckIfTargetDead("See");
			}
			DEMO T 1 BRIGHT A_StartSound("weapons/bfgf")
			DEMO TT 4 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
			}
			DEMO TTTT 5 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			DEMO U 10 BRIGHT
			{
				user_tempvar1 = 32;
				user_tempvar2 = 11.25;
				A_FaceTarget;
				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*2));
				A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,0);
				A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*-2));
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*1));
					A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*-1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*3));
						A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*-3));
					}
				}
			}
			DEMO T 0 BRIGHT A_MonsterRefire(10,"See")
			DEMO T 0
			{
				A_CheckIfTargetDead("See");
			}
			DEMO T 0 BRIGHT A_Jump (88, "Missile2")
			DEMO T 1 BRIGHT A_StartSound("weapons/bfgf")
			DEMO TT 4 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
			}
			DEMO TTTT 5 BRIGHT 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			DEMO U 10 BRIGHT
			{
				user_tempvar1 = 32;
				user_tempvar2 = 5.625;
				A_FaceTarget;
				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*2));
				A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,0);
				A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*-2));
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*1));
					A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*-1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*3));
						A_CrisisSpawnProjectile("BFGBallMonster","BFGBallCrisis",user_tempvar1,0,(user_tempvar2*-3));
					}
				}
			}
			DEMO T 0 BRIGHT A_MonsterRefire(10,"See")
			DEMO T 0
			{
				A_CheckIfTargetDead("See");
			}
			DEMO T 0 BRIGHT A_Jump (8, "MissileLoop")
			DEMO T 0 BRIGHT A_Jump (192, "Missile2")
			Goto See

		Attack2:
			DEMO A 20 BRIGHT
			{
				A_FaceTarget;
				user_shotaccuracy = 33.75;
				user_shotzaccuracy = 6.4;
				if (user_charmed) { user_shotaccuracy *= 0.667; user_shotzaccuracy *= 0.667; }
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); user_shotaccuracy = user_shotaccuracy * 13 / 19; user_shotzaccuracy = user_shotzaccuracy * 13 / 19; }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(15); user_shotaccuracy = user_shotaccuracy * 14 / 19; user_shotzaccuracy = user_shotzaccuracy * 14 / 19; }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(16); user_shotaccuracy = user_shotaccuracy * 15 / 19; user_shotzaccuracy = user_shotzaccuracy * 15 / 19; }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(17); user_shotaccuracy = user_shotaccuracy * 16 / 19; user_shotzaccuracy = user_shotzaccuracy * 16 / 19; }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(18); user_shotaccuracy = user_shotaccuracy * 17 / 19; user_shotzaccuracy = user_shotzaccuracy * 17 / 19; }
				else if (levelbehavior && user_monsterlevel > 20) { A_SetTics(19); user_shotaccuracy = user_shotaccuracy * 18 / 19; user_shotzaccuracy = user_shotzaccuracy * 18 / 19; }
				user_shotaccuracy1 = user_shotaccuracy * -0.5;
				user_shotaccuracy2 = user_shotaccuracy * 0.5;
				user_shotzaccuracy1 = user_shotzaccuracy * -0.5;
				user_shotzaccuracy2 = user_shotzaccuracy * 0.5;
			}
			DEMO A 0 A_MonsterRefire(10,"See")
		Missile2Loop:
			DEMO G 0
			{
				A_CheckIfTargetDead("See");
			}
			DEMO G 4
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_StartSound("spider2/attack");
				A_FaceTarget;
				A_MonsterCrisisCheck; // Multiple Tracers
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 12, random(1,5) * 3, "BulletPuff", 0, 1);
				}
				else
				{
					for (user_pelletsfired = 0; user_pelletsfired < 12; user_pelletsfired++)
					{
						A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 24, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
					}
				}
	
				user_shotsfired += 1;
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("SpidMastChaingunCooldown", 1);
					return state("MissileEnd"); 
				}
				return state("");
			}
			DEMO G 0 BRIGHT A_MonsterRefire(10,"See")
			DEMO H 0
			{
				A_CheckIfTargetDead("See");
			}
			DEMO H 4
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_StartSound("spider2/attack");
				A_FaceTarget;
				A_MonsterCrisisCheck; // Multiple Tracers
				if (bullet_tracer_mode == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 12, random(1,5) * 3, "BulletPuff", 0, 1);
				}
				else
				{
					for (user_pelletsfired = 0; user_pelletsfired < 12; user_pelletsfired++)
					{
						A_CrisisSpawnProjectile("ZombieBulletTracer", "ZombieBulletTracerCrisis", 24, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
					}
				}
	
				user_shotsfired += 1;
				if (user_shotsfired > user_shotsfiredmax) 
				{ 
					A_GiveInventory("SpidMastChaingunCooldown", 1);
					return state("MissileEnd"); 
				}
				return state("");
			}
			DEMO H 1 BRIGHT A_MonsterRefire(10,"MissileEnd")
			loop

		MissileEnd:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			SPID H 0 A_FaceTarget
			Goto See

		Pain: 
			DEMO I 3 
			DEMO I 3 A_DVDSPain 
			Goto See 
		Pain.Fist:
			DEMO I 3
			DEMO I 3 A_DVDSPain
			DEMO II 3
			Goto See
		Pain.Kick:
			DEMO I 3
			DEMO I 3 A_DVDSPain
			DEMO IIII 3
			Goto See

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			DEMO II 3
			DEMO I 3 A_DVDSPain 
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			DEMO I 1 
			DEMO I 2 
			DEMO I 1 
			Goto See
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			DEMO I 3 
			DEMO I 3 
			DEMO I 3 A_DVDSPain 
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			DEMO I 3 
			DEMO I 3 
			DEMO I 3 
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			DEMO I 3 
			DEMO I 3 
			DEMO I 3 
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			DEMO J 20 A_Scream
			DEMO K 10 Bright A_NoBlocking 
			DEMO LMNOPQR 10 Bright
			DEMO S 30 
			TNT1 A 0 
			DEMO S -1 A_DVDSBossDeath 
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			DEMO I 5 A_GenericFreezeDeath
			DEMO I 1 A_FreezeDeathChunks
			wait
		Raise:
			DEMO S 30 
			DEMO QRPONMLK 10
			DEMO J 20
			goto See
	}
}


actor DSCyberdemon : AetheriusMonsterZSC 26554
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Boss Type"
	Tag "Cyber Demon"
	
	Health 4000
	Radius 40
	Height 110
	Mass 1000
	Speed 16
	MeleeRange 180
	Painchance 20
	Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.15 // 1.2

	Painchance "Plasma", 27
	DamageFactor "Plasma", 1.375
	Painchance "Thunder", 35 // Demons = +300% Pain Chance
	DamageFactor "Thunder", 1.75
	Painchance "Electric", 35 // Demons = +300% Pain Chance
	DamageFactor "Electric", 1.75
	Painchance "Lightning", 35 // Demons = +300% Pain Chance
	DamageFactor "Lightning", 1.75

	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 60 // Demons = +300% Pain Chance
	Species "Cyberdemon"
	Monster
	MinMissileChance 160
	+BOSS
	+MISSILEMORE
	+FLOORCLIP
	+NORADIUSDMG
	+DONTMORPH
	+BOSSDEATH
	+AVOIDMELEE
	+DONTHARMSPECIES

	SeeSound "cyber/sight"
	PainSound "cyberdemon/pain" 
	DeathSound "cyber/death"
	ActiveSound "cyber/active"
	Obituary "$OB_CYBORG"

	dropitem RandomPowerupSpawner 2
	dropitem Backpack 2
	dropitem Backpack 2
	dropitem DoomSpellMana 112
	dropitem DoomSpellMana2 84
	dropitem DoomSpellMana3 56
	dropitem RocketLauncher 32 5
	dropitem RocketLauncher 2 15
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronGauntlets 1

	states
	{
		Spawn:
			CYBR A 0 NoDelay 
			CYBR AB 10 A_Look
			goto Spawn+1
		See:
			CYBR A 0
			{
				user_shotsfired = 0;
				if (levelbehavior && user_monsterlevel > 120)
				{
					if (random(1,8) == 1) { user_shotsfiredmax = 6; } else { user_shotsfiredmax = 5; }
				}
				else
				if (levelbehavior && user_monsterlevel > 60)
				{
					if (random(1,8) == 1) { user_shotsfiredmax = 5; } else { user_shotsfiredmax = 4; }
				}
				else
				{
					if (random(1,8) == 1) { user_shotsfiredmax = 4; } else { user_shotsfiredmax = 3; }
				}
			}
			CYBR AABBCCDD 3 
			{
				user_walksound++;
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				if (user_walksound == 1) { A_Hoof; }
				else if (user_walksound == 7) { A_Metal; }
				else { A_DVDSChase("Melee","Missile",0,1,3,1,1); }
				if (user_walksound >= 8) { user_walksound = 0; }
				A_JumpIfCloser(120, "Stomp");
			}
			loop

		Stomp:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			CYBR Z 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
	
				A_FaceTarget;
			}
			CYMA A 7
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
			}
			CYMA B 7
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
				
				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("CyberStomp","CyberStompCrisis",10,0,0,0);
				if (user_canusecrisisatk == 1) { A_Quake(5,21,0,512,"nosound/silent"); }
				else { A_Quake(2,21,0,512,"nosound/silent"); }
			}
			CYMA B 7
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
			}
			CYMA B 0 A_Jump(64,2)
			CYMA B 0 A_JumpIfCloser(180, "Stomp")
			CYMA B 0
			Goto See

		Melee:
		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			TNT1 A 0 A_JumpIfCloser(180, "Stomp")
			CYBR E 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
		MissileB:
			CYBR F 0
			{
				A_CheckIfTargetDead("See");
			}
			CYBR F 12
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(9); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 30) { A_SetTics(11); }

				user_tempvar1 = 32;
				user_tempvar2 = 15;
				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("RocketMonster","RocketCrisis",user_tempvar1);
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("RocketMonster","RocketCrisis",user_tempvar1,0,(user_tempvar2*1));
					A_CrisisSpawnProjectile("RocketMonster","RocketCrisis",user_tempvar1,0,(user_tempvar2*-1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("RocketMonster","RocketCrisis",user_tempvar1,0,(user_tempvar2*2));
						A_CrisisSpawnProjectile("RocketMonster","RocketCrisis",user_tempvar1,0,(user_tempvar2*-2));
					}
				}
			}
			CYBR E 0
			{
				user_shotsfired += 1;
				if (user_shotsfired >= user_shotsfiredmax) { if (random(1,4) > 1) { return state("See"); } return state(""); }
				return state("");
			}
			CYBR E 0 A_JumpIfCloser(180, "Stomp")
			CYBR E 12
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 150) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(9); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 30) { A_SetTics(11); }
				A_FaceTarget;
			}
			loop

		Pain:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			CYBR G 5 
			CYBR G 5 A_DVDSPain
			Goto See
		Pain.Fist:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			CYBR G 5 
			CYBR G 5 A_DVDSPain
			CYBR GG 5 
			Goto See
		Pain.Kick:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			CYBR G 5 
			CYBR G 5 A_DVDSPain
			CYBR GGGG 5 
			Goto See

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			CYBR GG 5 
			CYBR G 5 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			CYBR G 2 
			CYBR G 3 
			CYBR G 2 
			Goto See
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			CYBR G 5 
			CYBR G 5 
			CYBR G 5 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			CYBR G 5 
			CYBR G 5 
			CYBR G 5 
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			CYBR G 5 
			CYBR G 5 
			CYBR G 5 
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			CYBR H 10
			CYBR I 10 A_Scream
			CYBR JKL 10
			CYBR M 10 A_NoBlocking
			CYBR NO 10
			CYBR P 30
			TNT1 A 0 
			CYBR P -1 A_DVDSBossDeath
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			CYBR G 5 A_GenericFreezeDeath
			CYBR G 1 A_FreezeDeathChunks
			wait
		Raise:
			CYBR O 10 
			CYBR NMLKJHI 10
			goto See
	}
}

actor Annihilator : DSCyberdemon 30111 
{
	//$Angled
	//$Color 12
	//$Category "DV-DS Monsters/Boss Type"
	Tag "Cyber-Annhilator"

	Health 8000 
	Radius 40 
	Height 110 
	Mass 1500 
	Speed 16 
	MeleeRange 180
	Painchance 10
	Painchance "Fist", 15 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 25 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 15 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor 0.875
	RadiusDamageFactor 0.875
	DamageFactor "Explosive", 0.875
	DamageFactor "Crush", 0.15 // 1.2

	Painchance "Plasma", 14
	DamageFactor "Plasma", 1.375
	Painchance "Thunder", 17 // Demons = +300% Pain Chance
	DamageFactor "Thunder", 1.75
	Painchance "Electric", 17 // Demons = +300% Pain Chance
	DamageFactor "Electric", 1.75
	Painchance "Lightning", 17 // Demons = +300% Pain Chance
	DamageFactor "Lightning", 1.75

	DamageFactor "Holy", 2 // Demons = +200% Holy Damage
	Painchance "Holy", 30 // Demons = +300% Pain Chance
	Species "Cyberdemon"
	MONSTER
	+NOTARGET 
	+FLOORCLIP 
	+NORADIUSDMG 
	+BOSS 
	+MISSILEEVENMORE 
	+AVOIDMELEE
	+DONTHARMSPECIES
	SeeSound "monster/annsit" 
	DeathSound "monster/anndth" 
	ActiveSound "cyber/active" 
	PainSound "annihilator/pain" 
	Obituary "The Cyber Annihilator blew %o away with its rockets."

	dropitem RandomPowerupSpawner 2
	dropitem RandomPowerupSpawner 2
	dropitem Backpack 2
	dropitem Backpack 2
	dropitem Backpack 2
	dropitem Backpack 2
	dropitem DoomSpellMana 112
	dropitem DoomSpellMana 112
	dropitem DoomSpellMana2 84
	dropitem DoomSpellMana2 84
	dropitem DoomSpellMana2 84
	dropitem DoomSpellMana3 56
	dropitem DoomSpellMana3 56
	dropitem RocketLauncher 32 5
	dropitem RocketLauncher 32 5
	dropitem RocketLauncher 2 15
	dropitem RocketLauncher 2 15
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem RocketBox 4 5
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem HealthBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem ArmorBonus 2
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem MaxHealthBonus 1
	dropitem SauronGauntlets 1

	States 
	{
		Stomp:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			ANNI B 5 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			ANMA A 7
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
			}
			ANMA B 7
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
				
				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("AnnhiliatorStomp","AnnhiliatorStompCrisis",10,0,0,0);
				if (user_canusecrisisatk == 1) { A_Quake(9,32,0,768,"nosound/silent"); }
				else { A_Quake(3,32,0,768,"nosound/silent"); }
			}
			ANMA B 7
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
			}
			ANMA B 0 A_Jump(64,2)
			ANMA B 0 A_JumpIfCloser(180, "Stomp")
			ANMA B 0
			Goto See

		AttackPhaseChange:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			ANNI E 0 A_Jump (128, "Missile2")
			goto See

		Melee:
		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			TNT1 A 0 A_JumpIfCloser(180, "Stomp")
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			ANNI E 0 A_Jump (128, "Missile2")

		Missile1:
			ANNI E 0
			{
				A_CheckIfTargetDead("See");
			}
			ANNI E 6 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
			ANNI F 12 Bright 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(9); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 30) { A_SetTics(11); }
				A_FaceTarget;

				user_tempvar1 = 40;
				user_tempvar2 = 15;
				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,27,0);
				A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,-27,0);
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,27,(user_tempvar2*1));
					A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,27,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,-27,(user_tempvar2*1));
					A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,-27,(user_tempvar2*-1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,27,(user_tempvar2*2));
						A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,27,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,-27,(user_tempvar2*2));
						A_CrisisSpawnProjectile("Rocket2","Rocket2Crisis",user_tempvar1,-27,(user_tempvar2*-2));
					}
				}
			}
			ANNI E 6
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
			TNT1 A 0 A_JumpIfCloser(180, "Stomp")
			TNT1 A 0 
			{
				user_shotsfired += 1;
			}
			TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax, "AttackPhaseChange")
			Goto Missile1

		Missile2:
			ANNI E 0
			{
				A_CheckIfTargetDead("See");
			}
			ANNI E 6
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
			ANNI F 12 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(9); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 30) { A_SetTics(11); }
				A_FaceTarget;

				user_tempvar1 = 40;
				user_tempvar2 = 15;
				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,27,0);
				A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,-27,0);
				if (levelbehavior && user_monsterlevel >= user_hyperlvl1)
				{
					A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,27,(user_tempvar2*1));
					A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,27,(user_tempvar2*-1));
					A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,-27,(user_tempvar2*1));
					A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,-27,(user_tempvar2*-1));
					if (user_monsterlevel >= user_hyperlvl2)
					{
						A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,27,(user_tempvar2*2));
						A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,27,(user_tempvar2*-2));
						A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,-27,(user_tempvar2*2));
						A_CrisisSpawnProjectile("HomRocket1","HomRocket1Crisis",user_tempvar1,-27,(user_tempvar2*-2));
					}
				}
			}
			ANNI E 6
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
			TNT1 A 0 A_JumpIfCloser(180, "Stomp")
			TNT1 A 0
			{
				user_shotsfired += 1;
			}
			TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax, "See")
			Goto Missile2

		Spawn: 
			ANNI A 0 NoDelay 
			ANNI AB 10 A_Look 
			goto Spawn+1
		See:
			ANNI A 0 
			{
				if (user_isstealth <= 0 && health <= user_HPBuffRange) { A_GiveInventory("EnemyShadowLight",1); } else  { A_TakeInventory("EnemyShadowLight",9999); } 
			}
			ANNI A 0
			{
				user_shotsfired = 0;
				if (levelbehavior && user_monsterlevel > 120)
				{
					if (random(1,8) == 1) { user_shotsfiredmax = 6; } else { user_shotsfiredmax = 5; }
				}
				else
				if (levelbehavior && user_monsterlevel > 60)
				{
					if (random(1,8) == 1) { user_shotsfiredmax = 5; } else { user_shotsfiredmax = 4; }
				}
				else
				{
					if (random(1,8) == 1) { user_shotsfiredmax = 4; } else { user_shotsfiredmax = 3; }
				}
			}
			ANNI AABBCCDD 3 
			{
				user_walksound++;
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				if (user_walksound == 1 || user_walksound == 7) { A_StartSound("monster/anhoof"); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
				if (user_walksound >= 8) { user_walksound = 0; }
				A_JumpIfCloser(120, "Stomp");
			}
			loop

		Pain: 
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			ANNI G 5
			ANNI G 5 A_DVDSPain 
			Goto See 
		Pain.Fist: 
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			ANNI G 5
			ANNI G 5 A_DVDSPain 
			ANNI GG 5
			Goto See 
		Pain.Kick: 
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			ANNI G 5
			ANNI G 5 A_DVDSPain 
			ANNI GGGG 5
			Goto See 

		Pain.Plasma:
			TNT1 A 0 A_Jump(192,"Pain")
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			ANNI GG 5 
			ANNI G 5 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			ANNI G 2 
			ANNI G 3 
			ANNI G 2 
			Goto See
		Pain.Electric:
		Pain.Lightning:
		Pain.Thunder:
			TNT1 A 0  
			{
				user_shotsfired = 0;
			}
			ANNI G 5 
			ANNI G 5 
			ANNI G 5 A_DVDSPain
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			ANNI G 5 
			ANNI G 5 
			ANNI G 5 
			TNT1 A 0 A_StartSound("elecstun")
			TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
			ANNI G 5 
			ANNI G 5 
			ANNI G 5 
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			ANNI H 10 Bright
			ANNI I 10 Bright A_Scream 
			ANNI JKL 10 Bright
			ANNI M 10 Bright A_NoBlocking 
			ANNI NO 10 Bright
			ANNI P 30 
			TNT1 A 0 
			ANNI P -1 A_DVDSBossDeath 
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			ANNI G 5 A_GenericFreezeDeath
			ANNI G 1 A_FreezeDeathChunks
			wait
		Raise:
			ANNI O 10 Bright 
			ANNI NMLKJIH 10 Bright
			goto See
	}
}

ACTOR DSHelperDog : AetheriusMonsterZSC replaces MBFHelperDog
{
	Tag "Attack Dog"
	Health 375 // 500
	Speed 15 // 10
	Radius 12
	Height 28
	Mass 100 // 100
	PainChance 120 // 180
	Painchance "Fist", 180 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 180 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 1.25 // 10.0
	Monster
	+JUMPDOWN
	ActiveSound "dog/active"
	AttackSound "dog/attack"
	DeathSound "dog/death"
	PainSound "dog/pain"
	SeeSound "dog/sight"
	Obituary "$OB_DOG" // "%o was mauled by a dog."

	States
	{
		Spawn:
			DOGS A 0 NoDelay 
			DOGS AABB 5 A_Look
			goto Spawn+1
		See:
			DOGS A 0
			DOGS AABBCCDD 2
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(1); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			Loop
		Melee:
			DOGS A 0
			DOGS EF 8
			{
				if (levelbehavior && user_monsterlevel > 160) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(7); }
				A_FaceTarget;
			}
			DOGS G 8
			{
				if (levelbehavior && user_monsterlevel > 160) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(7); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack((random(1,10)*randompick(4,4,4,4,6,6,8)),"none","none","Melee",true); // A_SargAttack
			}
			Goto See

		Pain:
			DOGS H 2
			DOGS H 2 A_DVDSPain
			Goto See
		Pain.Fist: 
			DOGS H 2
			DOGS H 2 A_DVDSPain
			DOGS HH 2 
			Goto See 
		Pain.Kick: 
			DOGS H 2
			DOGS H 2 A_DVDSPain
			DOGS HHHH 2 
			Goto See 

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			DOGS I 8
			DOGS J 8 A_Scream
			DOGS K 4
			DOGS L 4 A_Fall
			DOGS M 4 
			DOGS N -1
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			DOGS H 5 A_GenericFreezeDeath
			DOGS H 1 A_FreezeDeathChunks
			wait
		Raise:
			DOGS N 5 
			DOGS MLKJI 5
			Goto See
	}
}

// Boss Brain
ACTOR DSBossBrain : AetheriusBossZSC replaces BossBrain
{
	Tag "Icon of Sin" // Tag "John Romero"
	Health 250
	Mass 10000000
	PainChance 255
	Height 80
	Radius 20
	MONSTER
	+SHOOTABLE
	-COUNTKILL
	+SOLID
	-CANPUSHWALLS
	-CANUSEWALLS
	-ACTIVATEMCROSS
	-CANPASS
	+ISMONSTER
	+NOICEDEATH
	+OLDRADIUSDMG
	PainSound "brain/pain"
	DeathSound "brain/death"
	States
	{
		BrainExplode:
			MISL BC 10 Bright
			MISL D 10 
			{
				if (ActorLevelCalcs) 
				{
					A_DVDSNormalDeath(-2,0,1); 
				}
				A_BrainExplode;
			}
			Stop
		Spawn:
			BBRN A -1
			Stop
		Pain:
			BBRN B 36 
			{
				if (dvds_improvediconofsin) { A_StartSound("brain/pain2", CHAN_VOICE, CHANF_DEFAULT, 1.0, ATTN_NONE); }
				else { A_StartSound("brain/pain", CHAN_VOICE, CHANF_DEFAULT, 1.0, ATTN_NONE); }
			}
			Goto Spawn
		Death:
			BBRN B 100 
			{
				if (ActorLevelCalcs) 
				{
					A_DVDSNormalDeath(-2,0,1); 
					A_BrainScream("brain/death2");
				}
				else
				{
					A_BrainScream("brain/death");
				}
			}
			BBRN BB 10
			BBRN B -1 A_BrainDie
			Stop
	}
}

ACTOR DSBossEye : AetheriusBossZSC replaces BossEye
{
	Height 32
	+NOBLOCKMAP
	+NOSECTOR
	+BOSS
	var int user_bosseyetype;

	DropItem "Zombieman" 		255 16
	DropItem "ShotgunGuy" 		255 16
	DropItem "ChaingunGuy" 		255 16
	DropItem "DoomImp" 		255 24
	DropItem "Demon"		255 24
	DropItem "PainElemental"	255 12
	DropItem "Cacodemon"		255 24
	DropItem "Revenant"		255 12
	DropItem "Arachnotron"	255 24
	DropItem "Fatso"		255 24
	DropItem "HellKnight"		255 24
	DropItem "BaronOfHell"	255 12
	DropItem "HellCleric"	255 12
	DropItem "Archvile"		255  4
	DropItem "FlyingBalrog"		255  4
	DropItem "Cyberdemon"		255  4
	DropItem "HadesOverlord"	255  4

	States
	{
		Spawn:
			SSWV A 10 A_Look
			Loop
		See:
			SSWV A 181 
			{
				if (dvds_improvediconofsin) 
				{
					A_StartSound("brain/sight2", CHAN_VOICE, CHANF_DEFAULT, 1.0, ATTN_NONE);
					user_bosseyetype = 1;
				}
				else
				{
					A_StartSound("brain/sight", CHAN_VOICE, CHANF_DEFAULT, 1.0, ATTN_NONE);
				}
			}
			SSWV A 150 
			{
				if (user_bosseyetype > 0) 
				{
					A_SetTics(random(90,110));
					A_BrainSpit("SpawnShot");
					A_StartSound("brain/spit", CHAN_WEAPON, CHANF_DEFAULT, 1.0, ATTN_NONE);
				}
				else
				{
					A_SetTics(random(135,165));
					A_BrainSpit("SpawnShot");
					A_StartSound("brain/spit", CHAN_WEAPON, CHANF_DEFAULT, 1.0, ATTN_NONE);
				}
			}
			Wait
	}
}
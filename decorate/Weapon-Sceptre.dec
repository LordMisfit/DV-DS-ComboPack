// ********************************************************
// ** Sceptre Defensive Mode [Reflective/Non-Reflective] **
// ********************************************************

// Sceptre Cruft and Stuff ;P
actor ShieldPart : ShieldPartBase // The Main segment of the sceptre-shield which deflects/blocks attacks
{
	+REFLECTIVE 
	+AIMREFLECT
	States
	{
		Spawn:
			HEXA C 2 bright NoDelay 
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(19,19); }
			}
			stop
		Pain.Magic:
			TNT1 A 0 
			stop
		Pain.Sceptre:
			TNT1 A 0 
			stop
		Pain:
			TNT1 A 0 bright 
			{
				A_StartSound("SceptreBlocked", 53);
			}
			stop
		Death:
			TNT1 A 0
			stop
	}
}

actor ShieldPartNoReflect : ShieldPart
{
	-REFLECTIVE
	-AIMREFLECT
	States
	{
		Spawn:
			HEXA A 2 bright NoDelay
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(19,19); }
			}
			stop
	}
}

actor ShieldPartSpinAttack1 : ShieldPart
{
	-REFLECTIVE
	-AIMREFLECT
	States
	{
		Spawn:
			HEXA A 3 bright NoDelay
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop
	}
}
actor ShieldPartSpinAttack1D : ShieldPartSpinAttack1 
{
	+REFLECTIVE  
	+AIMREFLECT
	States
	{
		Spawn:
			HEXA C 3 bright NoDelay
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop
	}
}

actor ShieldPartSpinAttack2 : ShieldPart
{
	-REFLECTIVE
	-AIMREFLECT
	States
	{
		Spawn:
			HEXA A 6 bright NoDelay
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop
	}
}
actor ShieldPartSpinAttack2D : ShieldPartSpinAttack2
{
	+REFLECTIVE
	+AIMREFLECT
	States
	{
		Spawn:
			HEXA C 6 bright NoDelay
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop
	}
}

actor ShieldPartSpinAttack3 : ShieldPart
{
	-REFLECTIVE
	-AIMREFLECT
	States
	{
		Spawn:
			HEXA A 9 bright NoDelay
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop
	}
}
actor ShieldPartSpinAttack3D : ShieldPartSpinAttack3
{
	+REFLECTIVE  
	+AIMREFLECT
	States
	{
		Spawn:
			HEXA C 9 bright NoDelay
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop
	}
}

actor ShieldPartSpinAttack4 : ShieldPart
{
	-REFLECTIVE
	-AIMREFLECT
	States
	{
		Spawn:
			HEXA A 12 bright NoDelay
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop
	}
}
actor ShieldPartSpinAttack4D : ShieldPartSpinAttack4
{
	+REFLECTIVE
	+AIMREFLECT
	States
	{
		Spawn:
			HEXA C 12 bright NoDelay
			{
				if (dvdsdebug_shieldactorghosts) { A_FadeTo(0.25,0.25); }
				if (CountInv("PlayingDoom64")) { A_SetSize(38,38); }
			}
			stop
	}
}

// SceptrePartVisual[x][y] represents the visual sprites of the sceptre mid-twirl
actor SceptrePartVisualBase : ShieldPartBase
{
	Health 2147483646
	Painchance 256
	Radius 16 // 16
	Height 32 // 16
	Scale 0.5
	Alpha 0.75
	RenderStyle Add //Translucent
	Species "Players"
	+NOTARGET
	+NEVERTARGET
	+BUDDHA
	+DONTBLAST
	+SOLID
	+NOGRAVITY
	+NOTELEPORT
	+NODAMAGE
	+DONTRIP
	+NOBLOOD
	+NOBLOODDECALS
	+FLOORCLIP
	+NOTELESTOMP
	+NOTIMEFREEZE
	+THRUSPECIES
	+MTHRUSPECIES
	+NOINTERACTION
	+REFLECTIVE 
	+AIMREFLECT

	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR3 A 2 bright
			stop
		Pain.Magic:
			TNT1 A 0 
			stop
		Pain.Sceptre:
			TNT1 A 0 
			stop
		Pain:
			TNT1 A 0 bright 
			{
				A_StartSound("SceptreBlocked");
			}
			stop
		Death:
			TNT1 A 0
			stop
	}
}

actor SceptrePartVisual1 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR3 A 2 bright
			stop
	}
}

actor SceptrePartVisual2 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR3 B 2 bright
			stop
	}
}

actor SceptrePartVisual3 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR3 C 2 bright
			stop
	}
}

actor SceptrePartVisual4 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR3 D 2 bright
			stop
	}
}

actor SceptrePartVisual5 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR3 E 2 bright
			stop
	}
}

actor SceptrePartVisual6 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR3 F 2 bright
			stop
	}
}

actor SceptrePartVisual7 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR3 G 2 bright
			stop
	}
}

actor SceptrePartVisual8 : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR3 H 2 bright
			stop
	}
}

actor SceptrePartVisual1b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR2 A 2 bright
			stop
	}
}

actor SceptrePartVisual2b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR2 B 2 bright
			stop
	}
}

actor SceptrePartVisual3b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR2 C 2 bright
			stop
	}
}

actor SceptrePartVisual4b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR2 D 2 bright
			stop
	}
}

actor SceptrePartVisual5b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR2 E 2 bright
			stop
	}
}

actor SceptrePartVisual6b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR2 F 2 bright
			stop
	}
}

actor SceptrePartVisual7b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR2 G 2 bright
			stop
	}
}

actor SceptrePartVisual8b : SceptrePartVisualBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			{
				if (CountInv("InvisiblitySpell") > 0) { A_SetTranslucent(0.075,0); } else { A_SetTranslucent(0.75,0); }
				if (CountInv("PlayingDoom64")) { A_SetScale(ScaleX*1.2,ScaleY*1.2); A_SetSize(36,36); }
			}
			STR2 H 2 bright
			stop
	}
}

// Central Actor that spawns the actors to represent the Sceptre's shielding alt-fire
actor ShieldSpawner : AetheriusBaseZSC
{
	var int user_spawnchance;
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (random(1,256) >= 256)
				{
					if (CountInv("PlayingStrife")) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
			}
		Finish:
			TNT1 A 0 
			{
				user_spawnchance = 1 - (CallACS("OtherVarCheckDECORATE",11) / 8);
				if (random(1,256) > user_spawnchance)
				{
					A_SpawnItemEx("ShieldSpawner6upNoReflect", CallACS("SetShieldPieceDist",0), CallACS("SetShieldPieceDist",0), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
					A_SpawnItemEx("ShieldSpawner5upNoReflect", CallACS("SetShieldPieceDist",16), CallACS("SetShieldPieceDist",-8), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
					A_SpawnItemEx("ShieldSpawner5upNoReflect", CallACS("SetShieldPieceDist",-16), CallACS("SetShieldPieceDist",-8), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
					A_SpawnItemEx("ShieldSpawner4upNoReflect", CallACS("SetShieldPieceDist",32), CallACS("SetShieldPieceDist",-21), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
					A_SpawnItemEx("ShieldSpawner4upNoReflect", CallACS("SetShieldPieceDist",-32), CallACS("SetShieldPieceDist",-21), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);

					user_spawnchance = 3 - ((CallACS("OtherVarCheckDECORATE",11) * 2) / 3);
					if (random(1,256) > user_spawnchance)
					{
						A_SpawnItemEx("ShieldSpawner6upNoReflect", CallACS("SetShieldPieceDist",0), CallACS("SetShieldPieceDist",8), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
						A_SpawnItemEx("ShieldSpawner5upNoReflect", CallACS("SetShieldPieceDist",16), CallACS("SetShieldPieceDist",0), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
						A_SpawnItemEx("ShieldSpawner5upNoReflect", CallACS("SetShieldPieceDist",-16), CallACS("SetShieldPieceDist",0), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
						A_SpawnItemEx("ShieldSpawner4upNoReflect", CallACS("SetShieldPieceDist",32), CallACS("SetShieldPieceDist",-11), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
						A_SpawnItemEx("ShieldSpawner4upNoReflect", CallACS("SetShieldPieceDist",-32), CallACS("SetShieldPieceDist",-11), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);

						user_spawnchance = 10 - ((CallACS("OtherVarCheckDECORATE",11) * 16) / 5);
						if (random(1,256) > user_spawnchance)
						{
							A_SpawnItemEx("ShieldSpawner6up", CallACS("SetShieldPieceDist",0), CallACS("SetShieldPieceDist",16), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							A_SpawnItemEx("ShieldSpawner5up", CallACS("SetShieldPieceDist",16), CallACS("SetShieldPieceDist",8), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							A_SpawnItemEx("ShieldSpawner5up", CallACS("SetShieldPieceDist",-16), CallACS("SetShieldPieceDist",8), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							A_SpawnItemEx("ShieldSpawner4up", CallACS("SetShieldPieceDist",32), CallACS("SetShieldPieceDist",-3), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							A_SpawnItemEx("ShieldSpawner4up", CallACS("SetShieldPieceDist",-32), CallACS("SetShieldPieceDist",-3), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);

							user_spawnchance = 30 - ((CallACS("OtherVarCheckDECORATE",11) * 18) / 2);
							if (random(1,256) > user_spawnchance)
							{
								A_SpawnItemEx("ShieldSpawner3upNoReflect", CallACS("SetShieldPieceDist",40), CallACS("SetShieldPieceDist",-30), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3upNoReflect", CallACS("SetShieldPieceDist",-40), CallACS("SetShieldPieceDist",-30), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3upNoReflect", CallACS("SetShieldPieceDist",40), CallACS("SetShieldPieceDist",-25), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3upNoReflect", CallACS("SetShieldPieceDist",-40), CallACS("SetShieldPieceDist",-25), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3up", CallACS("SetShieldPieceDist",40), CallACS("SetShieldPieceDist",-16), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
								A_SpawnItemEx("ShieldSpawner3up", CallACS("SetShieldPieceDist",-40), CallACS("SetShieldPieceDist",-16), CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
							}
						}
					}
				}
			}
			stop
	}
}

// Actors for blockage for Swing Attack
actor ShieldSpawnerSwingAttack1 : ShieldSpawnerBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack1", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}
actor ShieldSpawnerSwingAttack1D : ShieldSpawnerSwingAttack1
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack1D", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}

actor ShieldSpawnerSwingAttack2 : ShieldSpawnerBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack2", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}
actor ShieldSpawnerSwingAttack2D : ShieldSpawnerSwingAttack2
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack2D", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}

actor ShieldSpawnerSwingAttack3 : ShieldSpawnerBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack3", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}
actor ShieldSpawnerSwingAttack3D : ShieldSpawnerSwingAttack3
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack3D", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}


actor ShieldSpawnerSwingAttack4 : ShieldSpawnerBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack4", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}
actor ShieldSpawnerSwingAttack4D : ShieldSpawnerSwingAttack3
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack4D", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}

// Actors for blockage for Spin Attack
actor ShieldSpawnerSpinattack1 : ShieldSpawnerBase
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack1", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
				A_SpawnItemEx ("ShieldPartSpinAttack1", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}
actor ShieldSpawnerSpinattack1D :  ShieldSpawnerSpinattack1
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack1D", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
				A_SpawnItemEx ("ShieldPartSpinAttack1D", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}


actor ShieldSpawnerSpinattack2 : ShieldSpawnerBase
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	+NOTELESTOMP
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack2", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
				A_SpawnItemEx ("ShieldPartSpinAttack2", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}
actor ShieldSpawnerSpinattack2D : ShieldSpawnerSpinattack2
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack2D", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
				A_SpawnItemEx ("ShieldPartSpinAttack2D", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}


actor ShieldSpawnerSpinattack3 : ShieldSpawnerBase
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	+NOTELESTOMP
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack3", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
				A_SpawnItemEx ("ShieldPartSpinAttack3", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}
actor ShieldSpawnerSpinattack3D : ShieldSpawnerSpinattack3
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack3D", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
				A_SpawnItemEx ("ShieldPartSpinAttack3D", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}


actor ShieldSpawnerSpinattack4 : ShieldSpawnerBase
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	+NOTELESTOMP
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack4", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
				A_SpawnItemEx ("ShieldPartSpinAttack4", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
			TNT1 A 1
			stop
	}
}
actor ShieldSpawnerSpinattack4D : ShieldSpawnerSpinattack4
{
	States
	{
	Spawn:
			TNT1 A 0 NoDelay
			{
				A_SpawnItemEx ("ShieldPartSpinAttack4D", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
				A_SpawnItemEx ("ShieldPartSpinAttack4D", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS);
			}
		TNT1 A 1
		stop
	}
}

// Shield Alt-fire actors
actor ShieldSpawner6up : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",-8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",56), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",72), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}

actor ShieldSpawner6upNoReflect : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",-8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",56), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",72), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}

actor ShieldSpawner5up : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",64), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}

actor ShieldSpawner5upNoReflect : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",0), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",64), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}

actor ShieldSpawner4up : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",56), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}

actor ShieldSpawner4upNoReflect : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",8), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",56), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}

actor ShieldSpawner3up : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}

actor ShieldSpawner3upNoReflect : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",16), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",48), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}


actor ShieldSpawner2up : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPart", 0, 0, CallACS("SetShieldPieceDist",40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}

actor ShieldSpawner2upNoReflect : AetheriusBaseZSC
{
	Radius 1
	Height 1
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
			{
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",24), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("ShieldPartNoReflect", 0, 0, CallACS("SetShieldPieceDist",40), 0, 0, 0, 0, SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION);
			}
			stop
	}
}

actor ShieldHit : AetheriusBaseZSC
{
	Radius 1
	Height 1
	Scale 0.5
	Renderstyle Add
	+NOGRAVITY
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
		Spawn:
			FHIT A 0 bright
			FHIT A 1 bright A_Stop
			FHIT A 0 bright A_StartSound("ForceBarrier/Hit", 53)
			FHIT BCDEFGH 1 bright
			stop
	}
}


// ******************
// ** Impact Puffs **
// ******************

// Direct Swing Puff [has a bit of impact radius]
actor SceptrePuff-ShockWave : AetheriusPuffZSC
{
	Tag "Sceptre of Empyrea"
	var int user_sceptrelevel;
	var int user_sceptrepuffanim;
	Scale 0.375
	VSpeed 0
	RenderStyle Translucent
	+NOINTERACTION +SPECTRAL

	States
	{
		Spawn:
			TNT1 A 0 
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 4) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 5 && user_sceptrelevel <= 8) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 9 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 2; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 3; }
			}
			goto CheckScaleAlpha

		CheckScaleAlpha:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"Level16")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 15,"Level15")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 14,"Level14")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 13,"Level13")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 12,"Level12")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 11,"Level11")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 10,"Level10")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 9,"Level9")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 8,"Level8")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 7,"Level7")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 6,"Level6")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 5,"Level5")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 4,"Level4")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 3,"Level3")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 2,"Level2")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 1,"Level1")
			goto Level0

		Level0:
			TNT1 A 0 A_SetScale(0.375)
			TNT1 A 0 A_FadeTo(0.5)
			goto Finish
		Level1:
			TNT1 A 0 A_SetScale(0.40625)
			TNT1 A 0 A_FadeTo(0.5208333)
			goto Finish
		Level2:
			TNT1 A 0 A_SetScale(0.4375)
			TNT1 A 0 A_FadeTo(0.5416666)
			goto Finish
		Level3:
			TNT1 A 0 A_SetScale(0.46875)
			TNT1 A 0 A_FadeTo(0.5625)
			goto Finish
		Level4:
			TNT1 A 0 A_SetScale(0.5)
			TNT1 A 0 A_FadeTo(0.583333)
			goto Finish
		Level5:
			TNT1 A 0 A_SetScale(0.53125)
			TNT1 A 0 A_FadeTo(0.60416666)
			goto Finish
		Level6:
			TNT1 A 0 A_SetScale(0.5625)
			TNT1 A 0 A_FadeTo(0.625)
			goto Finish
		Level7:
			TNT1 A 0 A_SetScale(0.59375)
			TNT1 A 0 A_FadeTo(0.64583333)
			goto Finish
		Level8:
			TNT1 A 0 A_SetScale(0.625)
			TNT1 A 0 A_FadeTo(0.66667)
			goto Finish
		Level9:
			TNT1 A 0 A_SetScale(0.65625)
			TNT1 A 0 A_FadeTo(0.6875)
			goto Finish
		Level10:
			TNT1 A 0 A_SetScale(0.6875)
			TNT1 A 0 A_FadeTo(0.7083333)
			goto Finish
		Level11:
			TNT1 A 0 A_SetScale(0.71875)
			TNT1 A 0 A_FadeTo(0.72916666)
			goto Finish
		Level12:
			TNT1 A 0 A_SetScale(0.75)
			TNT1 A 0 A_FadeTo(0.75)
			goto Finish
		Level13:
			TNT1 A 0 A_SetScale(0.78125)
			TNT1 A 0 A_FadeTo(0.77083333)
			goto Finish
		Level14:
			TNT1 A 0 A_SetScale(0.8125)
			TNT1 A 0 A_FadeTo(0.7916666)
			goto Finish
		Level15:
			TNT1 A 0 A_SetScale(0.84375)
			TNT1 A 0 A_FadeTo(0.8125)
			goto Finish
		Level16:
			TNT1 A 0 A_SetScale(0.875)
			TNT1 A 0 A_FadeTo(0.833333)
			goto Finish

		Finish:
			TNT1 A 0 { A_HitSparkGetSize2; }
			//SCSK GHIJK 1 BRIGHT A_Fadeout(alpha/7)
			SCIM G 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM H 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM I 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM J 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM K 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM L 1 BRIGHT
			{
				if (user_sceptrepuffanim == 3) { A_SetTics(0); }
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			SCIM M 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/12);
			}
			stop
	}
}

actor SceptrePuff-Normal : AetheriusPuffZSC
{
	Tag "Sceptre of Empyrea"
	var int user_sceptrelevel;
	var int user_sceptrepuffanim;
	VSpeed 0
	RenderStyle Translucent
	Species "Players"
	+FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS +FORCEPAIN +THRUSPECIES +MTHRUSPECIES +SPECTRAL
	damagetype "Sceptre"

	//decal "SceptreScorch"
	Scale 0.375
	Alpha 1
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(0,0,1,true), A_MeleeImpactRadius(0), 0, 0, (A_MeleeImpactRadius(0)/4));
			}
			TNT1 A 0 
			{
				A_Quake((A_QuakeMeleeIntensity(0)),(A_QuakeMeleeDuration(0)),0,(A_QuakeMeleeTremrad(0)),"nosound/silent");
			}
			goto MakeImpactSoundSpawnMelee
		Melee:
			TNT1 A 1 
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(0,0,1,true), A_MeleeImpactRadius(0), 0, 0, (A_MeleeImpactRadius(0)/4));
			}
			TNT1 A 0 
			{
				A_Quake((A_QuakeMeleeIntensity(0)),(A_QuakeMeleeDuration(0)),0,(A_QuakeMeleeTremrad(0)),"nosound/silent");
			}
			goto MakeImpactSoundSpawnMelee
		Crash:
			TNT1 A 1 
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(0,0,1,true), A_MeleeImpactRadius(0), 0, 0, (A_MeleeImpactRadius(0)/4));
			}
			TNT1 A 0 
			{
				A_Quake((A_QuakeMeleeIntensity(0)),(A_QuakeMeleeDuration(0)),0,(A_QuakeMeleeTremrad(0)),"nosound/silent");
			}
			goto MakeImpactSoundCrash

		MeleeSound1:
			TNT1 A 0 A_StartSound("SceptreHitThing1", 54)
			goto CheckScaleAlpha
		MeleeSound2:
			TNT1 A 0 A_StartSound("SceptreHitThing2", 54)
			goto CheckScaleAlpha
		MeleeSound3:
			TNT1 A 0 A_StartSound("SceptreHitThing3", 54)
			goto CheckScaleAlpha

		CrashSound1:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall", 55)
			goto CheckScaleAlpha
		CrashSound2:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall1", 55)
			goto CheckScaleAlpha
		CrashSound3:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall2", 55)
			goto CheckScaleAlpha

		MakeImpactSoundSpawnMelee:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"MeleeSound3")
			TNT1 A 0 A_JumpIf(user_sceptrelevel > 7 && user_sceptrelevel < 16,"MeleeSound2")
			TNT1 A 0 A_JumpIf(user_sceptrelevel < 8,"MeleeSound1")
			goto CheckScaleAlpha
		MakeImpactSoundCrash:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"CrashSound3")
			TNT1 A 0 A_JumpIf(user_sceptrelevel > 7 && user_sceptrelevel < 16,"CrashSound2")
			TNT1 A 0 A_JumpIf(user_sceptrelevel < 8,"CrashSound1")
			goto CheckScaleAlpha

		CheckScaleAlpha:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"Level16")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 15,"Level15")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 14,"Level14")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 13,"Level13")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 12,"Level12")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 11,"Level11")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 10,"Level10")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 9,"Level9")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 8,"Level8")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 7,"Level7")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 6,"Level6")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 5,"Level5")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 4,"Level4")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 3,"Level3")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 2,"Level2")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 1,"Level1")
			goto Level0

		Level0:
			TNT1 A 0 A_SetScale(0.375)
			TNT1 A 0 A_FadeTo(0.5)
			goto Finish
		Level1:
			TNT1 A 0 A_SetScale(0.40625)
			TNT1 A 0 A_FadeTo(0.5208333)
			goto Finish
		Level2:
			TNT1 A 0 A_SetScale(0.4375)
			TNT1 A 0 A_FadeTo(0.5416666)
			goto Finish
		Level3:
			TNT1 A 0 A_SetScale(0.46875)
			TNT1 A 0 A_FadeTo(0.5625)
			goto Finish
		Level4:
			TNT1 A 0 A_SetScale(0.5)
			TNT1 A 0 A_FadeTo(0.583333)
			goto Finish
		Level5:
			TNT1 A 0 A_SetScale(0.53125)
			TNT1 A 0 A_FadeTo(0.60416666)
			goto Finish
		Level6:
			TNT1 A 0 A_SetScale(0.5625)
			TNT1 A 0 A_FadeTo(0.625)
			goto Finish
		Level7:
			TNT1 A 0 A_SetScale(0.59375)
			TNT1 A 0 A_FadeTo(0.64583333)
			goto Finish
		Level8:
			TNT1 A 0 A_SetScale(0.625)
			TNT1 A 0 A_FadeTo(0.66667)
			goto Finish
		Level9:
			TNT1 A 0 A_SetScale(0.65625)
			TNT1 A 0 A_FadeTo(0.6875)
			goto Finish
		Level10:
			TNT1 A 0 A_SetScale(0.6875)
			TNT1 A 0 A_FadeTo(0.7083333)
			goto Finish
		Level11:
			TNT1 A 0 A_SetScale(0.71875)
			TNT1 A 0 A_FadeTo(0.72916666)
			goto Finish
		Level12:
			TNT1 A 0 A_SetScale(0.75)
			TNT1 A 0 A_FadeTo(0.75)
			goto Finish
		Level13:
			TNT1 A 0 A_SetScale(0.78125)
			TNT1 A 0 A_FadeTo(0.77083333)
			goto Finish
		Level14:
			TNT1 A 0 A_SetScale(0.8125)
			TNT1 A 0 A_FadeTo(0.7916666)
			goto Finish
		Level15:
			TNT1 A 0 A_SetScale(0.84375)
			TNT1 A 0 A_FadeTo(0.8125)
			goto Finish
		Level16:
			TNT1 A 0 A_SetScale(0.875)
			TNT1 A 0 A_FadeTo(0.833333)
			goto Finish

		Finish:
			TNT1 A 0 { A_HitSparkGetSize2; }
			//SCPU CCDDDEEEFFFGGG 1 BRIGHT A_Fadeout(alpha/5)
			SCIM A 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			SCIM B 1 BRIGHT
			{
				if (user_sceptrepuffanim == 1) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			SCIM C 1 BRIGHT
			{
				A_SpawnItemEx("SceptrePuff-ShockWave",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE);
				if (user_sceptrepuffanim == 2) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			SCIM D 1 BRIGHT
			{
				if (user_sceptrepuffanim == 1) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			SCIM E 1 BRIGHT 
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); } else { A_Fadeout(alpha/10); }
			}
			Stop
	}
}
actor SceptrePuff-Silent : SceptrePuff-Normal
{
	Tag "Sceptre of Empyrea"
	States
	{
		MeleeSound1:
			TNT1 A 0
			goto CheckScaleAlpha
		MeleeSound2:
			TNT1 A 0
			goto CheckScaleAlpha
		MeleeSound3:
			TNT1 A 0
			goto CheckScaleAlpha

		CrashSound1:
			TNT1 A 0
			goto CheckScaleAlpha
		CrashSound2:
			TNT1 A 0
			goto CheckScaleAlpha
		CrashSound3:
			TNT1 A 0
			goto CheckScaleAlpha
	}
}
// Sceptre Spinning Attack Ghost Reticle
actor SceptrePuff-Reticle : AetheriusPuffZSC
{
	VSpeed 0
	RenderStyle Translucent
	+NOINTERACTION
	+NOTIMEFREEZE

	//decal "SceptreScorch"
	Scale 0.0375
	Alpha 0.5
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			goto Finish
		Melee:
			TNT1 A 1 
			goto Finish
		Crash:
			TNT1 A 1 
			goto Finish

		Finish:
			SCHR B 1 BRIGHT { A_Fadeout(alpha/6); }
			stop
	}
}
// Sceptre Swing Attack Ghost Reticle
actor SceptrePuff-Reticle2 : SceptrePuff-Reticle
{
	Scale 0.020
	Alpha 0.375
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			goto Finish
		Melee:
			TNT1 A 1 
			goto Finish
		Crash:
			TNT1 A 1 
			goto Finish

		Finish:
			SCHR A 1 BRIGHT { A_Fadeout(alpha/6); }
			stop
	}
}

// Spinning Attack Puffs [have a bit of impact radius]
actor SceptrePuff-Spinning : AetheriusPuffZSC
{
	Tag "Sceptre of Empyrea"
	var int user_sceptrelevel;
	var int user_sceptrepuffanim;
	VSpeed 0
	RenderStyle Translucent
	Species "Players"
	+FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS +FORCEPAIN +THRUSPECIES +MTHRUSPECIES +SPECTRAL
	damagetype "Sceptre"

	//decal "SceptreScorch"
	SeeSound "SceptreHitThing1" // Hits a target
	AttackSound "SceptreEmpyrea/HitWall" // Hits a wall
	Scale 0.375
	Alpha 1
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(2,-1,1,true), A_MeleeImpactRadius(2), 0, 0, (A_MeleeImpactRadius(2)/4));
			}
			goto MakeImpactSoundSpawnMelee
		Melee:
			TNT1 A 1
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(2,-1,1,true), A_MeleeImpactRadius(2), 0, 0, (A_MeleeImpactRadius(2)/4));
			}
			goto MakeImpactSoundSpawnMelee
		Crash:
			TNT1 A 1
			{
				user_sceptrelevel = CallACS("OtherVarCheckDECORATE",11);
				if (user_sceptrelevel >= 0 && user_sceptrelevel <= 6) { user_sceptrepuffanim = 0; }
				if (user_sceptrelevel >= 7 && user_sceptrelevel <= 12) { user_sceptrepuffanim = 1; }
				if (user_sceptrelevel >= 13 && user_sceptrelevel <= 16) { user_sceptrepuffanim = 2; }
			}
			TNT1 A 0 
			{
				A_Explode(A_GetSceptreDamage(2,-1,1,true), A_MeleeImpactRadius(2), 0, 0, (A_MeleeImpactRadius(2)/4));
			}
			goto MakeImpactSoundCrash

		MeleeSound1:
			TNT1 A 0 A_StartSound("SceptreHitThing1", 54)
			goto CheckScaleAlpha
		MeleeSound2:
			TNT1 A 0 A_StartSound("SceptreHitThing2", 54)
			goto CheckScaleAlpha
		MeleeSound3:
			TNT1 A 0 A_StartSound("SceptreHitThing3", 54)
			goto CheckScaleAlpha

		CrashSound1:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall", 55)
			goto CheckScaleAlpha
		CrashSound2:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall1", 55)
			goto CheckScaleAlpha
		CrashSound3:
			TNT1 A 0 A_StartSound("SceptreEmpyrea/HitWall2", 55)
			goto CheckScaleAlpha

		MakeImpactSoundSpawnMelee:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"MeleeSound3")
			TNT1 A 0 A_JumpIf(user_sceptrelevel > 7 && user_sceptrelevel < 16,"MeleeSound2")
			TNT1 A 0 A_JumpIf(user_sceptrelevel < 8,"MeleeSound1")
			goto CheckScaleAlpha
		MakeImpactSoundCrash:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"CrashSound3")
			TNT1 A 0 A_JumpIf(user_sceptrelevel > 7 && user_sceptrelevel < 16,"CrashSound2")
			TNT1 A 0 A_JumpIf(user_sceptrelevel < 8,"CrashSound1")
			goto CheckScaleAlpha

		CheckScaleAlpha:
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 16,"Level16")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 15,"Level15")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 14,"Level14")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 13,"Level13")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 12,"Level12")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 11,"Level11")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 10,"Level10")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 9,"Level9")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 8,"Level8")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 7,"Level7")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 6,"Level6")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 5,"Level5")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 4,"Level4")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 3,"Level3")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 2,"Level2")
			TNT1 A 0 A_JumpIf(user_sceptrelevel == 1,"Level1")
			goto Level0

		Level0:
			TNT1 A 0 A_SetScale(0.375)
			TNT1 A 0 A_FadeTo(0.5)
			goto Finish
		Level1:
			TNT1 A 0 A_SetScale(0.40625)
			TNT1 A 0 A_FadeTo(0.5208333)
			goto Finish
		Level2:
			TNT1 A 0 A_SetScale(0.4375)
			TNT1 A 0 A_FadeTo(0.5416666)
			goto Finish
		Level3:
			TNT1 A 0 A_SetScale(0.46875)
			TNT1 A 0 A_FadeTo(0.5625)
			goto Finish
		Level4:
			TNT1 A 0 A_SetScale(0.5)
			TNT1 A 0 A_FadeTo(0.583333)
			goto Finish
		Level5:
			TNT1 A 0 A_SetScale(0.53125)
			TNT1 A 0 A_FadeTo(0.60416666)
			goto Finish
		Level6:
			TNT1 A 0 A_SetScale(0.5625)
			TNT1 A 0 A_FadeTo(0.625)
			goto Finish
		Level7:
			TNT1 A 0 A_SetScale(0.59375)
			TNT1 A 0 A_FadeTo(0.64583333)
			goto Finish
		Level8:
			TNT1 A 0 A_SetScale(0.625)
			TNT1 A 0 A_FadeTo(0.66667)
			goto Finish
		Level9:
			TNT1 A 0 A_SetScale(0.65625)
			TNT1 A 0 A_FadeTo(0.6875)
			goto Finish
		Level10:
			TNT1 A 0 A_SetScale(0.6875)
			TNT1 A 0 A_FadeTo(0.7083333)
			goto Finish
		Level11:
			TNT1 A 0 A_SetScale(0.71875)
			TNT1 A 0 A_FadeTo(0.72916666)
			goto Finish
		Level12:
			TNT1 A 0 A_SetScale(0.75)
			TNT1 A 0 A_FadeTo(0.75)
			goto Finish
		Level13:
			TNT1 A 0 A_SetScale(0.78125)
			TNT1 A 0 A_FadeTo(0.77083333)
			goto Finish
		Level14:
			TNT1 A 0 A_SetScale(0.8125)
			TNT1 A 0 A_FadeTo(0.7916666)
			goto Finish
		Level15:
			TNT1 A 0 A_SetScale(0.84375)
			TNT1 A 0 A_FadeTo(0.8125)
			goto Finish
		Level16:
			TNT1 A 0 A_SetScale(0.875)
			TNT1 A 0 A_FadeTo(0.833333)
			goto Finish

		Finish:
			TNT1 A 0 { A_HitSparkGetSize2; }
			SCIM A 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			SCIM B 1 BRIGHT
			{
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			SCIM C 1 BRIGHT
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			SCIM D 1 BRIGHT
			{
				if (user_sceptrepuffanim == 1) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			SCIM E 1 BRIGHT 
			{
				if (user_sceptrepuffanim == 2) { A_SetTics(0); }
				A_Fadeout(alpha/10);
			}
			Stop
	}
}
actor SceptrePuff-SpinningSilent : SceptrePuff-Spinning
{
	Tag "Sceptre of Empyrea"
	States
	{
		MeleeSound1:
			TNT1 A 0
			goto CheckScaleAlpha
		MeleeSound2:
			TNT1 A 0
			goto CheckScaleAlpha
		MeleeSound3:
			TNT1 A 0
			goto CheckScaleAlpha

		CrashSound1:
			TNT1 A 0
			goto CheckScaleAlpha
		CrashSound2:
			TNT1 A 0
			goto CheckScaleAlpha
		CrashSound3:
			TNT1 A 0
			goto CheckScaleAlpha
	}
}


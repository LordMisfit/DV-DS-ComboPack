// Imp Warlord Shielding
actor ImpWarlordShieldDefend : HWShieldDefense { damagefactor "normal", 0.5 radiusdamagefactor 0.5 }
actor ImpWarlordShieldDefendExtra : HWShieldDefense { damagefactor "normal", 0.1 radiusdamagefactor 0.1 }

// Death Knight Shielding
actor DKnightShieldDefend : HWShieldDefense { damagefactor "normal", 0.25 radiusdamagefactor 0.25 }
actor DKnightShieldDefendExtra : HWShieldDefense { damagefactor "normal", 0.05 radiusdamagefactor 0.05 }

// Acolyte "Shielding"
actor AcolyteShieldDefend : HWShieldDefense { damagefactor "normal", 0.75 radiusdamagefactor 0.75 }
actor AcolyteShieldDefendExtra : HWShieldDefense { damagefactor "normal", 0.30 radiusdamagefactor 0.30 }

// Centaur/Slaughtaur Shielding
actor CentaurShieldDefend : HWShieldDefense { damagefactor "normal", 0.333 radiusdamagefactor 0.333 }
actor CentaurShieldDefendExtra : HWShieldDefense { damagefactor "normal", 0.0666 radiusdamagefactor 0.0666 }
actor SlaughtaurShieldDefend : HWShieldDefense { damagefactor "normal", 0.167 radiusdamagefactor 0.167 }
actor SlaughtaurShieldDefendExtra : HWShieldDefense { damagefactor "normal", 0.0333 radiusdamagefactor 0.0333 }

// Maulotaur "Shielding"
actor MaulotaurChargeDefense : HWShieldDefense { damagefactor "normal", 0.25 radiusdamagefactor 0.25 }

// Heresiarch "Shielding"
actor HeresiarchShieldDefense : HWShieldDefense { damagefactor "normal", 0.125 radiusdamagefactor 0.125 }

// Heresiarch "Shielding"
actor HightmarePhaseOutDefense : HWShieldDefense { damagefactor "normal", 0.0625 radiusdamagefactor 0.0625 }

//
ACTOR RocketPlayer : RocketBase
{
	DamageType "Explosive"
	Damage (finaldamagedealt)
	States
	{
		Spawn:
			MISL A 0 NoDelay { A_GetPlayerAttackDamage(8,0); }
		Idle:
			MISL A 1 Bright
			Loop
		Death:
			MISL A 0 { A_GetPlayerAttackDamage(9,0); }
			MISL B 8 Bright A_Explode((finaldamagedealt),128,XF_HURTSOURCE,false,0,0,10,"BulletPuff","Explosive")
			MISL C 6 Bright
			MISL D 4 Bright
			Stop
	}
}

ACTOR RocketPlayerNoAOE : RocketBase
{
	DamageType "Explosive"
	RenderStyle Add
	Alpha 0.75
	Damage (finaldamagedealt)
	States
	{
		Spawn:
			MISL A 0 NoDelay { A_GetPlayerAttackDamage(8,0); }
		Idle:
			MISL A 1 Bright
			Loop
		Death:
			MISL A 0 { A_GetPlayerAttackDamage(9,0); }
			MISL B 8 Bright A_Explode((finaldamagedealt),128,0,false,0,0,10,"BulletPuff","Explosive")
			MISL C 6 Bright
			MISL D 4 Bright
			Stop
	}
}

ACTOR RocketPlayerSeeking : RocketBase
{
	var float user_seekstrength;
	States
	{
		Spawn:
			MISL A 0 NoDelay {
				A_GetPlayerAttackDamage(8,0);
				user_seekstrength = CallACS("MiscVarCheckDECORATE", 10025) + (CallACS("MiscVarCheckDECORATE", 10026) * 2);
				if (user_seekstrength > 0)
				{
					A_ChangeFlag("SEEKERMISSILE", true);
					
					// When the rocket is first fired, check if it's being aimed at a specific target. If so, lock on to that target.
					A_SelectSeekTarget(PLAYERMISSILERANGE);
				}
			}
		Idle:
			MISL A 1 Bright {
				if (user_seekstrength > 0)
				{
					A_SuperSeekerMissile(user_seekstrength, user_seekstrength);
				}
			}
			Loop
	}
}

ACTOR RocketPlayerSeekingNoAOE : RocketPlayerNoAOE
{
	var int user_seekstrength;
	States
	{
		Spawn:
			MISL A 0 NoDelay {
				A_GetPlayerAttackDamage(8,0);
				user_seekstrength = CallACS("MiscVarCheckDECORATE", 10025) + (CallACS("MiscVarCheckDECORATE", 10026) * 2);
				if (user_seekstrength > 0)
				{
					A_ChangeFlag("SEEKERMISSILE", true);
					
					// When the rocket is first fired, check if it's being aimed at a specific target. If so, lock on to that target.
					A_SelectSeekTarget(PLAYERMISSILERANGE);
				}
			}
		Idle:
			MISL A 1 Bright {
				if (user_seekstrength > 0)
				{
					A_SuperSeekerMissile(user_seekstrength, user_seekstrength);
				}
			}
			Loop
	}
}

actor PlasmaBallPlayer : PlasmaBallBase
{
	Damage (finaldamagedealt)
	DamageType "Plasma"
	
	States
	{
		Spawn:
			PLSS A 0 NoDelay Bright { A_GetPlayerAttackDamage(11,0); }
		Idle:
			PLSS AB 6 Bright
			Loop
		Death:
			PLSE A 4 Bright
			{
				A_GetPlayerAttackDamage(11,0);
				A_Explode((finaldamagedealt/8),(16+(CallACS("MiscVarCheckDECORATE",10023)*8)+(CallACS("MiscVarCheckDECORATE",10024)*20)),0,0,(8+(CallACS("MiscVarCheckDECORATE",10023)*4)+(CallACS("MiscVarCheckDECORATE",10023)*10)));
			}
			PLSE BCDE 4 Bright
			Stop
	}
}

actor PlasmaBall1Player : PlasmaBall1Base
{
	Damage (finaldamagedealt)
	DamageType "BFG"
	States
	{
		Spawn:
			PLS1 A 0 NoDelay Bright { A_GetPlayerAttackDamage(12,0); }
		Idle:
			PLS1 AB 6 Bright
			Loop
		Death:
			PLS1 C 4 Bright
			{
				A_GetPlayerAttackDamage(12,0);
				A_Explode((finaldamagedealt/8),(16+(CallACS("MiscVarCheckDECORATE",10023)*8)+(CallACS("MiscVarCheckDECORATE",10024)*20)),0,0,(8+(CallACS("MiscVarCheckDECORATE",10023)*4)+(CallACS("MiscVarCheckDECORATE",10023)*10)));
			}
			PLS1 DEFG 4 Bright
			Stop
	}
}

actor PlasmaBall2Player : PlasmaBall2Base
{
	Damage (finaldamagedealt)
	DamageType "BFG"
	States
	{
		Spawn:
			PLS2 A 0 NoDelay Bright { A_GetPlayerAttackDamage(13,0); }
		Idle:
			PLS2 AB 6 Bright
			Loop
		Death:
			PLS2 C 4 Bright
			{
				A_GetPlayerAttackDamage(13,0);
				A_Explode((finaldamagedealt/8),(16+(CallACS("MiscVarCheckDECORATE",10023)*8)+(CallACS("MiscVarCheckDECORATE",10024)*20)),0,0,(8+(CallACS("MiscVarCheckDECORATE",10023)*4)+(CallACS("MiscVarCheckDECORATE",10023)*10)));
			}
			PLS2 DE 4 Bright
			Stop
	}
}

ACTOR BFGExtraPlayer : BFGExtra
{
	+NOBLOCKMAP
	+NOGRAVITY
	RenderStyle Add
	Alpha 0.75
	DamageType "BFGSplash"
	States
	{
		Spawn:
			BFE2 AAAABBBBCCCCDDDD 2 Bright
			{
			}
			Stop
	}
}

actor BFGBallPlayer : BFGBallBase
{
	var int user_radiusdmg; 
	var int user_radiussize; 
	var int user_detonationtimer;
	DamageType "BFG"
	Game Doom
	SpawnID 128
	Radius 13
	Height 8
	Speed 25
	Damage (finaldamagedealt)
	Projectile
	+RANDOMIZE
	RenderStyle Add
	Alpha 0.75
	DeathSound "weapons/bfgx"
	Obituary "$OB_MPBFG_BOOM"
	States
	{
		Spawn:
			BFS1 A 0 NoDelay Bright { A_GetPlayerAttackDamage(14,0); }
		Idle:
			BFS1 AABB 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10029) > 0)
				{
					A_ChangeFlag("FORCERADIUSDMG",1);
					if (CallACS("MiscVarCheckDECORATE",10029) == 1) { user_radiusdmg = random(12,20); }
					if (CallACS("MiscVarCheckDECORATE",10029) == 2) { user_radiusdmg = random(30,50); }
					if (CallACS("MiscVarCheckDECORATE",10029) == 1) { user_radiussize = random(120,144); }
					if (CallACS("MiscVarCheckDECORATE",10029) == 2) { user_radiussize = random(180,216); }
					A_Explode(user_radiusdmg,user_radiussize,XF_EXPLICITDAMAGETYPE,false,(user_radiussize/2),0,0,"BulletPuff","BFG");
				}
			}
			Loop
		Death:
			BFE1 AABBCCDDEEFF 4 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10029) > 0)
				{
					A_ChangeFlag("FORCERADIUSDMG",1);
					if (CallACS("MiscVarCheckDECORATE",10029) == 1) { user_radiusdmg = random(24,40); }
					if (CallACS("MiscVarCheckDECORATE",10029) == 2) { user_radiusdmg = random(60,100); }
					if (CallACS("MiscVarCheckDECORATE",10029) == 1) { user_radiussize = random(40,48); }
					if (CallACS("MiscVarCheckDECORATE",10029) == 2) { user_radiussize = random(60,72); }
					A_Explode(user_radiusdmg,user_radiussize,XF_EXPLICITDAMAGETYPE,false,(user_radiussize/2),0,0,"BulletPuff","BFG");
				}
				user_detonationtimer++;
				if (user_detonationtimer == 5)
				{
					A_GetPlayerAttackDamage(15,0);
					A_BFGSpray("BFGExtra", // flashtype
											CallACS("GetBFGTracers"), // numrays
											15, // damagecnt
											CallACS("GetBFGTracerAngle"), // angle
											CallACS("GetBFGTracerRange"), // distance
											CallACS("GetBFGTracerVAngle"), // vrange
											(finaldamagedealt), // explicit damage
											0); // flags
				}
			}
			Stop
	}
}


actor WindyProjectile : AetheriusProjectileZSC
{
	height 4
	radius 2
	speed 20
	damage (0)
	+RIPPER
	+PAINLESS 
	PROJECTILE
	states
	{
		Spawn:
			TNT1 A 2 A_RadiusThrust (2500, 320, 0)
			TNT1 A 2 A_RadiusThrust (5000, 480, 0)
			TNT1 A 2 A_RadiusThrust (7500, 560, 0)
			TNT1 A 2 A_RadiusThrust (10000, 640, 0)
			TNT1 A 2 A_RadiusThrust (7500, 560, 0)
			TNT1 A 2 A_RadiusThrust (5000, 480, 0)
			Loop
		Death:
			TNT1 A 0 A_RadiusThrust (12500, 800, 0)
			Stop
	}
}

// Melee Hitsparks
actor MeleeHitSpark1 : AetheriusPuffZSC
{ 
	Scale 0.375
	VSpeed 0
	RenderStyle Translucent
	+NOINTERACTION +SPECTRAL
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay { A_HitSparkGetSize; A_HitSparkGetSize2; }
		Finish:
			TNT1 A 0 { A_HitSparkResize; }
			HTS1 AABBCC 1 BRIGHT { A_Fadeout(alpha/12); }
			stop
	}
}
actor MeleeHitSpark2 : MeleeHitSpark1
{ 
	Scale 0.375
	VSpeed 0
	RenderStyle Translucent
	+NOINTERACTION +SPECTRAL
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay { A_HitSparkGetSize; A_HitSparkGetSize2; }
		Finish:
			TNT1 A 0 { A_HitSparkResize; }
			HTS2 AABBCCDD 1 BRIGHT { A_Fadeout(alpha/12); }
			stop
	}
}
actor MeleeHitSpark3 : MeleeHitSpark1
{ 
	Scale 0.375
	VSpeed 0
	RenderStyle Translucent
	+NOINTERACTION +SPECTRAL
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay { A_HitSparkGetSize; A_HitSparkGetSize2; }
		Finish:
			TNT1 A 0 { A_HitSparkResize; }
			HTS3 AABBCCDDEE 1 BRIGHT { A_Fadeout(alpha/12); }
			stop
	}
}
actor MeleeHitSpark4 : MeleeHitSpark1
{
	Scale 0.375
	VSpeed 0
	RenderStyle Translucent
	+NOINTERACTION +SPECTRAL
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay { A_HitSparkGetSize; A_HitSparkGetSize2; }
		Finish:
			TNT1 A 0 { A_HitSparkResize; }
			HTS4 AABBCCDD 1 BRIGHT { A_Fadeout(alpha/12); }
			stop
	}
}

// Puffs
actor BulletPuffDVDS : AetheriusPuffZSC
{ 
	+NOBLOCKMAP
	+NOGRAVITY
	+ALLOWPARTICLES
	+RANDOMIZE
	RenderStyle Translucent
	Alpha 0.5
	VSpeed 1
	Mass 5
	States
	{
	Spawn:
		PUFF A 4 Bright
		PUFF B 4
		// Intentional fall-through
	Melee:
		PUFF CD 4
		Stop
	}
}

actor DBTPuff : AetheriusPuffZSC replaces BulletPuff
{
	Game Doom
	+NOBLOCKMAP
	+NOGRAVITY
	+ALLOWPARTICLES
	+RANDOMIZE
	+NOINTERACTION
	RenderStyle Translucent
	Alpha 0.5
	VSpeed 1
	Mass 1
	DamageType "Bullet"
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_Jump(128,2)
			TNT1 A 0 A_PlaySound("puff/ric")
			TNT1 A 0 A_SpawnItemEx("DBTYellowSpark",0,0,0,0,0,0,0,32)
			TNT1 AA 0 A_SpawnItemEx("DBTPuffSmoke",0,0,0,0,0,frandom(0.1,0.3),0,32)
			TNT1 AAAAAAAAAA 0 A_SpawnItemEx("DBTSparkExtra",0,0,0,frandom(0.1,0.5),0,0,random(1,360))
			TNT1 A 1
			Stop
	}
}

actor DBTRailPuff : DBTPuff
{
	Game Doom
	+NOBLOCKMAP
	+NOGRAVITY
	+ALLOWPARTICLES
	+RANDOMIZE
	+NOINTERACTION
	RenderStyle Translucent
	Alpha 0.5
	VSpeed 1
	Mass 1
	DamageType "Bullet"
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_Jump(128,2)
			TNT1 A 0 A_PlaySound("puff/ric")
			TNT1 A 0 A_SpawnItemEx("DBTYellowSpark",0,0,0,0,0,0,0,32)
			TNT1 AA 0 A_SpawnItemEx("DBTPuffSmoke",0,0,0,0,0,frandom(0.1,0.3),0,32)
			TNT1 AAAAAAAAAA 0 A_SpawnItemEx("DBTSparkExtra",0,0,0,frandom(0.1,0.5),0,0,random(1,360))
			TNT1 A 1
			Stop
	}
}

Actor DBTPuffSmoke 
{
	+NOINTERACTION
	+FORCEXYBILLBOARD
	Scale 0.03
	States
	{
		Spawn:
			TNT1 A 0 A_Jump(128,"T2")
		T1:
			X143 J 1 A_FadeOut(0.03)
			Wait
		T2:
			X143 K 1 A_FadeOut(0.03)
			Wait
 }
}

Actor DBTYellowSpark
{
	+NOINTERACTION
	Scale 0.16
	RenderStyle Add
	+FORCEXYBILLBOARD
	States
	{
		Spawn:
			TNT1 A 0
			// TNT1 A 0 A_PlayWeaponSound("hxn2/weapons/baldehitwall")
			TNT1 A 0 A_Jump(255,"Type1","Type2")
		Type1:
			FX26 A 2 Bright
			FX26 BCD 2 Bright
			FX26 EFGHI 2 Bright
			FX26 J 1 Bright A_FadeOut
			Wait
		Type2:
			FX26 P 2 Bright
			FX26 QRS 2 Bright
			FX26 TUVWX 2 Bright
			FX26 Y 1 Bright A_FadeOut
			Wait
	}
}

Actor DBTSparkExtra : AetheriusProjectileZSC
{
	Height 1
	Radius 1
	Speed 3
	Scale 0.15
	+NOCLIP
	PROJECTILE
	-NOGRAVITY
	Gravity 0.09
	+DONTSPLASH
	+DONTBLAST
	+THRUactorS
	RenderStyle Add
	+FORCEXYBILLBOARD
	States
	{
		Spawn:
			TNT1 A 0 // ICPR D 0
			FX26 K 1 Bright ThrustThingZ(0,frandom(0.8,3.5),0,1)
			FX26 KKKLMNO 3 Bright A_FadeOut(0.05)
			Stop
	}
}

actor DiarisArrow : Ammo 27335
{
	//$NotAngled
	//$Color 6
	//$Category "DV-DS Ammunition/Flora"
	ConversationID 364 // 345+ are unused by Strife, this is for use in DIALOUxx/SCRIPTxx references
	Tag "Diaris Arrows [6]: Ammo for Flora's Diaris Longbow."
	Scale 0.276
	Inventory.PickupMessage "Picked up \cj6 Diaris Arrows\c-."
	Inventory.Amount 6
	inventory.maxamount 999999
	Ammo.BackpackAmount 6
	Ammo.BackpackMaxAmount 999999
	Inventory.Icon "ARSEA0"
	States
	{
		Spawn:
			TNT1 A 0 NoDelay ACS_NamedExecuteAlways("CheckFloraItems",0,0,0,0)
		Idle:
			ARSE A 2
			{
				if (GetCVar("dvds_floralongbowcandrop") <= 0)
				{
					A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0);
					A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,56);
					A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,206);
					A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,243);
					A_FadeOut(1,1);
				}
			}
			loop
	}
}

actor DiarisArrowQuiver : DiarisArrow 27336
{
	//$NotAngled
	//$Color 6
	//$Category "DV-DS Ammunition/Flora"
	ConversationID 365 // 345+ are unused by Strife, this is for use in DIALOUxx/SCRIPTxx references
	Tag "Diaris Arrows [30]: Ammo for Flora's Diaris Longbow."
	Scale 0.276
	Inventory.PickupMessage "Picked up a quiver of \cj30 Diaris Arrows\c-."
	Inventory.Amount 30
	inventory.maxamount 999999
	Ammo.BackpackAmount 30
	Ammo.BackpackMaxAmount 999999
	Inventory.Icon "ARQUA0"
	States
	{
		Spawn:
			TNT1 A 0 NoDelay ACS_NamedExecuteAlways("CheckFloraItems",0,0,0,0)
		Idle:
			ARQU B 2
			{
				if (GetCVar("dvds_floralongbowcandrop") <= 0)
				{
					A_SpawnItemEx("DoomSpellMana2",0,0,0,0,0,0,0,0,0);
					A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,56);
					A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,206);
					A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,243);
					A_FadeOut(1,1);
				}
			}
			loop
	}
}

actor ManaPickupFlash : PickupFlash
{
	+NOGRAVITY
	States
	{
		Spawn:
			ACLO DCDCBCBABA 3
			{
				A_SpawnItemEx("ManaGlitter", 0, 0, 16, frandom(-2.0,2.0), frandom(-2.0,2.0), frandom(-2.0,2.0) ,64);
				A_SpawnItemEx("ManaGlitter", 0, 0, 16, frandom(-2.0,2.0), frandom(-2.0,2.0), frandom(-2.0,2.0) ,64);
				A_SpawnItemEx("ManaGlitter", 0, 0, 16, frandom(-2.0,2.0), frandom(-2.0,2.0), frandom(-2.0,2.0) ,64);
			}
			Stop
	}
}

// Small Mana Recharge
actor DoomSpellMana : AetheriusCustomInventory 27337
{
	//$NotAngled
	//$Color 6
	//$Category "DV-DS Ammunition/Magic"
	Radius 8
	Height 8
	Scale 0.5
	inventory.pickupsound "PickupArtifact"
	inventory.pickupflash "ManaPickupFlash"
	Tag "Small Mana Cube [DV-DS]: Restores about ~50 MP/Mana"
	inventory.pickupmessage "Accquired a \cfSmall Mana Cube\c-"
	+FLOATBOB

	states
	{
		Spawn:
			MAN3 ABCDEFGHIJKLMNOP 4 Bright
			Loop
		Success:
			TNT1 A 0 ACS_NamedExecuteAlways("PickupManaCube",0,1,0)
			Stop
		Pickup:
			TNT1 A 0 { if (CallACS("CheckManaLevels",0) > 0) { return state("Success"); } return state(""); }
			Fail
	}
}

actor DoomSpellMana2 : DoomSpellMana 27338
{
	//$NotAngled
	//$Color 6
	//$Category "DV-DS Ammunition/Magic"
	Scale 0.8
	Tag "Mana Cube [DV-DS]: Restores about ~125 MP/Mana"
	inventory.pickupmessage "Accquired a \cfMana Cube\c-"

	states
	{
		Spawn:
			MAN3 ABCDEFGHIJKLMNOP 4 Bright
			Loop
		Success:
			TNT1 A 0 ACS_NamedExecuteAlways("PickupManaCube",0,2,0)
			Stop
		Pickup:
			TNT1 A 0 { if (CallACS("CheckManaLevels",0) > 0) { return state("Success"); } return state(""); }
			Fail
	}
}

actor DoomSpellMana3 : DoomSpellMana 27339
{
	//$NotAngled
	//$Color 6
	//$Category "DV-DS Ammunition/Magic"
	Scale 1.2
	Tag "Large Mana Cube [DV-DS]: Restores about ~350 MP/Mana"
	inventory.pickupmessage "Accquired a \cfLarge Mana Cube\c-"

	states
	{
		Spawn:
			MAN3 ABCDEFGHIJKLMNOP 4 Bright
			Loop
		Success:
			TNT1 A 0 ACS_NamedExecuteAlways("PickupManaCube",0,3,0)
			Stop
		Pickup:
			TNT1 A 0 { if (CallACS("CheckManaLevels",0) > 0) { return state("Success"); } return state(""); }
			Fail
	}
}

actor FistPuff : AetheriusPuffZSC
{
	+NOBLOCKMAP
	+NOGRAVITY
	+ALLOWPARTICLES
	+RANDOMIZE
	+FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS 
	RenderStyle Translucent
	Alpha 0.5
	VSpeed 1
	Mass 5
	damagetype "Fist"
	SeeSound "null" // "FistHit"
	AttackSound "null"

	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				user_randompain = 44;
				user_randompain += (CallACS("MiscVarCheckDECORATE",10035) * 8);
				user_randompain += (CallACS("MiscVarCheckDECORATE",10036) * (8 * 5 / 2));
				user_randompain += (CallACS("MiscVarCheckDECORATE",10051) * random(7,9));
				user_randompain += (CallACS("MiscVarCheckDECORATE",10052) * (random(7,9) * 5 / 2));
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetPunchDamage",0,1),CallACS("MeleeImpactRadius",3),0);
				A_Quake(CallACS("QuakeMeleeIntensity",3),CallACS("QuakeMeleeDuration",3),0,CallACS("QuakeMeleeTremrad",3),"nosound/silent");
				if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		SpawnSparks:
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
		Melee:
			TNT1 A 0
			{
				user_randompain = 44;
				user_randompain += (CallACS("MiscVarCheckDECORATE",10035) * 8);
				user_randompain += (CallACS("MiscVarCheckDECORATE",10036) * (8 * 5 / 2));
				user_randompain += (CallACS("MiscVarCheckDECORATE",10051) * random(7,9));
				user_randompain += (CallACS("MiscVarCheckDECORATE",10052) * (random(7,9) * 5 / 2));
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetPunchDamage",0,1),CallACS("MeleeImpactRadius",3),0);
				A_Quake(CallACS("QuakeMeleeIntensity",3),CallACS("QuakeMeleeDuration",3),0,CallACS("QuakeMeleeTremrad",3),"nosound/silent");
				if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		MeleeSparks:
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
		Crash:
			PUFF C 0
			{
				user_randompain = 44;
				user_randompain += (CallACS("MiscVarCheckDECORATE",10035) * 8);
				user_randompain += (CallACS("MiscVarCheckDECORATE",10036) * (8 * 5 / 2));
				user_randompain += (CallACS("MiscVarCheckDECORATE",10051) * random(7,9));
				user_randompain += (CallACS("MiscVarCheckDECORATE",10052) * (random(7,9) * 5 / 2));
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetPunchDamage",0,1),CallACS("MeleeImpactRadius",3),0);
				A_Quake(CallACS("QuakeMeleeIntensity",3),CallACS("QuakeMeleeDuration",3),0,CallACS("QuakeMeleeTremrad",3),"nosound/silent");
				if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserkwall",7); } else { A_PlaySound("FistHitWall",7); }
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		CrashSparks:
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
	}
}

actor UppercutPuff : FistPuff
{
	ProjectileKickback 0
	+NODAMAGETHRUST
	RenderStyle Translucent
	Alpha 0.875

	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				user_randompain = 32;
				if (CallACS("MiscVarCheckDECORATE",10035) == 1) { user_randompain += 4; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2) { user_randompain += 8; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3) { user_randompain += 16; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { user_randompain += 20; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 5) { user_randompain += 28; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 1) { user_randompain += 10; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 2) { user_randompain += 20; }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(3,5); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(6,10); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(12,20); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(16,24); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(21,35); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += random(8,12); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += random(16,24); }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetPunchDamage",1,1),CallACS("MeleeImpactRadius",4),0);
				A_Quake(CallACS("QuakeMeleeIntensity",4),CallACS("QuakeMeleeDuration",4),0,CallACS("QuakeMeleeTremrad",4),"nosound/silent");
				if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		SpawnSparks:
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
		Melee:
			TNT1 A 0
			{
				user_randompain = 32;
				if (CallACS("MiscVarCheckDECORATE",10035) == 1) { user_randompain += 4; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2) { user_randompain += 8; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3) { user_randompain += 16; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { user_randompain += 20; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 5) { user_randompain += 28; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 1) { user_randompain += 10; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 2) { user_randompain += 20; }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(3,5); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(6,10); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(12,20); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(16,24); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(21,35); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += random(8,12); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += random(16,24); }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetPunchDamage",1,1),CallACS("MeleeImpactRadius",4),0);
				A_Quake(CallACS("QuakeMeleeIntensity",4),CallACS("QuakeMeleeDuration",4),0,CallACS("QuakeMeleeTremrad",4),"nosound/silent");
				if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		MeleeSparks:
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
		Crash:
			PUFF C 0
			{
				user_randompain = 32;
				if (CallACS("MiscVarCheckDECORATE",10035) == 1) { user_randompain += 4; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2) { user_randompain += 8; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3) { user_randompain += 16; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { user_randompain += 20; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 5) { user_randompain += 28; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 1) { user_randompain += 10; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 2) { user_randompain += 20; }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(3,5); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(6,10); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(12,20); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(16,24); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(21,35); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += random(8,12); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += random(16,24); }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetPunchDamage",1,1),CallACS("MeleeImpactRadius",4),0);
				A_Quake(CallACS("QuakeMeleeIntensity",4),CallACS("QuakeMeleeDuration",4),0,CallACS("QuakeMeleeTremrad",4),"nosound/silent");
				if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserkwall",7); } else { A_PlaySound("FistHitWall",7); }
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		CrashSparks:
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
	}
}

actor KickPuff : AetheriusPuffZSC
{
	+NOBLOCKMAP
	+NOGRAVITY
	+ALLOWPARTICLES
	+RANDOMIZE
	+FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS 
	RenderStyle Translucent
	ProjectileKickback 1500
	Alpha 0.5
	VSpeed 1
	Mass 5
	damagetype "Kick"
	SeeSound "null" // "FistHit"
	AttackSound "null"

	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				user_randompain = 4;
				if (CallACS("MiscVarCheckDECORATE",10035) == 1) { user_randompain += 2; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2) { user_randompain += 4; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3) { user_randompain += 6; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { user_randompain += 8; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 5) { user_randompain += 12; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 1) { user_randompain += 5; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 2) { user_randompain += 10; }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,3); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,5); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,7); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,9); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(10,14); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,3) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,5) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetKickDamage",0,1),CallACS("MeleeImpactRadius",7),0);
				A_Quake(CallACS("QuakeMeleeIntensity",7),CallACS("QuakeMeleeDuration",7),0,CallACS("QuakeMeleeTremrad",7),"nosound/silent");
				if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		Spawn2:
			TNT1 A 2 A_RadiusThrust(1500,13,0,13)
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
		Melee:
			TNT1 A 0
			{
				user_randompain = 4;
				if (CallACS("MiscVarCheckDECORATE",10035) == 1) { user_randompain += 2; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2) { user_randompain += 4; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3) { user_randompain += 6; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { user_randompain += 8; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 5) { user_randompain += 12; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 1) { user_randompain += 5; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 2) { user_randompain += 10; }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,3); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,5); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,7); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,9); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(10,14); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,3) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,5) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetKickDamage",0,1),CallACS("MeleeImpactRadius",7),0);
				A_Quake(CallACS("QuakeMeleeIntensity",7),CallACS("QuakeMeleeDuration",7),0,CallACS("QuakeMeleeTremrad",7),"nosound/silent");
				if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		Melee2:
			TNT1 A 2 A_RadiusThrust(1500,13,0,13)
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
		Crash:
			PUFF C 0
			{
				user_randompain = 4;
				if (CallACS("MiscVarCheckDECORATE",10035) == 1) { user_randompain += 2; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2) { user_randompain += 4; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3) { user_randompain += 6; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { user_randompain += 8; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 5) { user_randompain += 12; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 1) { user_randompain += 5; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 2) { user_randompain += 10; }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,3); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,5); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,7); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,9); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(10,14); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,3) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,5) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetKickDamage",0,1),CallACS("MeleeImpactRadius",7),0);
				A_Quake(CallACS("QuakeMeleeIntensity",7),CallACS("QuakeMeleeDuration",7),0,CallACS("QuakeMeleeTremrad",7),"nosound/silent");
				if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserkwall",7); } else { A_PlaySound("FistHitWall",7); }
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		Crash2:
			TNT1 A 2 A_RadiusThrust(1500,13,0,13)
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
	}
}

actor KickPuffNoThrust : KickPuff
{
	ProjectileKickback 0
	+NODAMAGETHRUST
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				user_randompain = 4;
				if (CallACS("MiscVarCheckDECORATE",10035) == 1) { user_randompain += 2; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2) { user_randompain += 4; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3) { user_randompain += 6; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { user_randompain += 8; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 5) { user_randompain += 12; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 1) { user_randompain += 5; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 2) { user_randompain += 10; }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,3); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,5); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,7); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,9); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(10,14); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,3) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,5) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetKickDamage",0,1),CallACS("MeleeImpactRadius",7),0);
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		Spawn2:
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
		Melee:
			TNT1 A 0
			{
				user_randompain = 4;
				if (CallACS("MiscVarCheckDECORATE",10035) == 1) { user_randompain += 2; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2) { user_randompain += 4; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3) { user_randompain += 6; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { user_randompain += 8; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 5) { user_randompain += 12; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 1) { user_randompain += 5; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 2) { user_randompain += 10; }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,3); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,5); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,7); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,9); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(10,14); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,3) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,5) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetKickDamage",0,1),CallACS("MeleeImpactRadius",7),0);
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		Melee2:
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
		Crash:
			PUFF C 0
			{
				user_randompain = 4;
				if (CallACS("MiscVarCheckDECORATE",10035) == 1) { user_randompain += 2; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2) { user_randompain += 4; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3) { user_randompain += 6; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { user_randompain += 8; }
				if (CallACS("MiscVarCheckDECORATE",10035) == 5) { user_randompain += 12; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 1) { user_randompain += 5; }
				if (CallACS("MiscVarCheckDECORATE",10036) == 2) { user_randompain += 10; }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,3); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,5); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,7); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,9); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(10,14); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,3) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,5) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

				A_Explode(CallACS("GetKickDamage",0,1),CallACS("MeleeImpactRadius",7),0);
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		Crash2:
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			TNT1 A 2
			Stop
	}
}

// Base Melee Reticle
actor MeleeReticle-Silent : AetheriusPuffZSC
{
	VSpeed 0
	RenderStyle Translucent
	+NOINTERACTION
	+NOTIMEFREEZE

}
// Punch Attack Ghost Reticle
actor PunchPuff-Silent : MeleeReticle-Silent
{
	Scale 0.125
	Alpha 0.375
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Melee:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Crash:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1

		Finish1:
			PURT A 1 BRIGHT { A_Fadeout(alpha/6); }
			stop

		Finish2:
			PURT B 1 BRIGHT { A_Fadeout(alpha/6); }
			stop

		Finish3:
			PURT C 1 BRIGHT { A_Fadeout(alpha/6); }
			stop
	}
}

// AltPunch Attack Ghost Reticle
actor AltPunchPuff-Silent : MeleeReticle-Silent
{
	Scale 0.125
	Alpha 0.375
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Melee:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Crash:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1

		Finish1:
			APRT A 1 BRIGHT { A_Fadeout(alpha/2); }
			stop

		Finish2:
			APRT B 1 BRIGHT { A_Fadeout(alpha/2); }
			stop

		Finish3:
			APRT C 1 BRIGHT { A_Fadeout(alpha/2); }
			stop
	}
}

// Kick Attack Ghost Reticle
actor KickPuff-Silent : MeleeReticle-Silent
{
	Scale 0.125
	Alpha 0.375
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Melee:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Crash:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1

		Finish1:
			KIRT A 1 BRIGHT { A_Fadeout(alpha/6); }
			stop

		Finish2:
			KIRT A 1 BRIGHT { A_Fadeout(alpha/6); }
			stop

		Finish3:
			KIRT C 1 BRIGHT { A_Fadeout(alpha/6); }
			stop
	}
}
// Chainsaw Reticle
actor ChainsawPuff-Silent : MeleeReticle-Silent
{
	Scale 0.125
	Alpha 0.375
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				//if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Melee:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				//if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Crash:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				//if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1

		Finish1:
			CHSR A 1 BRIGHT { A_Fadeout(alpha/6); }
			stop

		Finish2:
			CHSR B 1 BRIGHT { A_Fadeout(alpha/6); }
			stop
	}
}
// Chainsaw Reticle
actor ChainsawPuff2-Silent : MeleeReticle-Silent
{
	Scale 0.125
	Alpha 0.375
	States
	{
		Spawn:
			TNT1 A 1 NoDelay
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				//if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Melee:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				//if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1
		Crash:
			TNT1 A 1 
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 0) { return state("Finish1"); }
				if (CallACS("CheckCharacterClass") == 1) { return state("Finish2"); }
				//if (CallACS("CheckCharacterClass") == 2) { return state("Finish3"); }
				return state("");
			}
			goto Finish1

		Finish1:
			CH2R A 1 BRIGHT { A_Fadeout(alpha/6); }
			stop

		Finish2:
			CH2R B 1 BRIGHT { A_Fadeout(alpha/6); }
			stop
	}
}

// Shield Parts [Melee]
actor ShieldPartPunchAttackNoReflect
{
	Species "Players"
	Health 2147483646
	Painchance 255
	Radius 32 // out of 32
	Height 32 // out of 32
	Scale 1
	RenderStyle Add // Add
	Alpha 0.0 // 0.003125
	+NOTARGET +NEVERTARGET
	+BUDDHA
	+DONTBLAST
	+SHOOTABLE
	+NOGRAVITY
	+NOTELEPORT
	+NODAMAGE
	+DONTRIP
	+NOBLOOD
	+NOBLOODDECALS
	+FLOORCLIP
	+NOTELESTOMP
	+NOTIMEFREEZE
	+THRUSPECIES +MTHRUSPECIES
	-REFLECTIVE
	States
	{
		Spawn:
			HEXA C 0 bright NoDelay	
			{
				if (GetCVar("dvdsdebug_shieldactorghosts") > 0) { A_FadeTo(0.125); }
				if (random(1,16) == 1) { A_ChangeFlag("REFLECTIVE", TRUE); A_ChangeFlag("AIMREFLECT", TRUE); } 
				if (CallACS("CheckCharacterClass") == 2)
				{
					if (CallACS("MiscVarCheckDECORATE",10035) == 0) { A_SetSize(32,32,0); A_SetScale(1.0); }
					if (CallACS("MiscVarCheckDECORATE",10035) == 1) { A_SetSize(33,33,0); A_SetScale(1.03125); }
					if (CallACS("MiscVarCheckDECORATE",10035) == 2) { A_SetSize(34,34,0); A_SetScale(1.0625); }
					if (CallACS("MiscVarCheckDECORATE",10035) == 3) { A_SetSize(36,36,0); A_SetScale(1.125); }
					if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_SetSize(38,38,0); A_SetScale(1.1875); }
					if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetSize(41,41,0); A_SetScale(1.28125); }
				}
				else
				{
					if (CallACS("MiscVarCheckDECORATE",10051) == 0) { A_SetSize(32,32,0); A_SetScale(1.0); }
					if (CallACS("MiscVarCheckDECORATE",10051) == 1) { A_SetSize(33,33,0); A_SetScale(1.03125); }
					if (CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetSize(34,34,0); A_SetScale(1.0625); }
					if (CallACS("MiscVarCheckDECORATE",10051) == 3) { A_SetSize(36,36,0); A_SetScale(1.125); }
					if (CallACS("MiscVarCheckDECORATE",10051) == 4) { A_SetSize(38,38,0); A_SetScale(1.1875); }
					if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetSize(41,41,0); A_SetScale(1.28125); }
				}
			}
			HEXA C 1 bright
			stop
		Pain:
			TNT1 A 0 bright { if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserkwall",7); } else { A_PlaySound("FistHitWall",7); } }
			stop
	}
}

actor ShieldPartPunchAttackReflect : ShieldPartPunchAttackNoReflect
{
	+REFLECTIVE +AIMREFLECT
}

actor FistPlayerBlock : PlaceholderItem { }
actor FistPlayerBlock2 : PlaceholderItem { }
actor FistPlayerBlock3 : PlaceholderItem { }
actor FistPlayerBlockExtra : PlaceholderItem { }
actor FistPlayerBlockItem : PlaceholderItem { }
actor FistPlayerBlockHold : PlaceholderItem { +INVENTORY.KEEPDEPLETED } 
actor FistPlayerSpeedFactor : FistPlayerBlockItem { }
actor FistPlayerSpeedFactor2 : FistPlayerBlockItem { }
actor FistPlayerSpeedFactor3 : FistPlayerBlockItem { }

actor FistDeggaris : MarineWeapon
{
	Game Doom
	Weapon.SelectionOrder 3700
	Weapon.Kickback 100
	+WEAPON.NOALERT
	+WEAPON.MELEEWEAPON
	+INVENTORY.UNDROPPABLE
	+INVENTORY.UNTOSSABLE
	Tag "Fist"
	Obituary "%o chewed on %k's fist."
	States
	{
		Ready:
			PUNG A 1
			{
				A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER4);
				if (random(1,100) <= 55) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
			}
			loop
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			PUNG A 1 A_Lower
			loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			PUNG A 1 A_Raise
			loop
		Fire:
			PUNG A 0 A_JumpIf(CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",0),2) == 1, "PunchSuccess")
			goto Ready
		PunchSuccess:
			TNT1 A 0 A_GiveInventory("UsingMeleeAttack",1)
			TNT1 A 0 A_Jump(128,"RightPunch")
			goto LeftPunch
		LeftPunch:
			PUNG B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
			}
			PUNG C 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
				if (random(1,256) <= 4) { A_AlertMonsters; }
				A_PlaySound("fistswingheavy",1);
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",CallACS("GetMeleeRange",0),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,16);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,48);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,16);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,48);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			PUNG D 5
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(3); }
			}
			PUNG C 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
			}
			PUNG B 5
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(3); }
				A_Refire;
			}
			PUNG B 0 A_TakeInventory("UsingMeleeAttack",0x7FFFFFFF)
			goto Ready

		RightPunch:
			PUNG F 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
			}
			PUNG G 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
				if (random(1,256) <= 4) { A_AlertMonsters; }
				A_PlaySound("fistswingheavy",1);
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",CallACS("GetMeleeRange",0),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,16);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,48);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,16);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,48);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			PUNG H 5
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(3); }
			}
			PUNG G 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
			}
			PUNG F 5
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(3); }
				A_Refire;
			}
			PUNG F 0 A_TakeInventory("UsingMeleeAttack",0x7FFFFFFF)
			goto Ready
		
		AltFire:
			TNT1 A 0
			{
				if (CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",4),2) == 0) { return state("Ready"); }
				return state(""); 
			}
			TNT1 A 0
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto UppercutStart
		// 23 Tics [18 (MAMlv1), 14 (MAMlv2), 11 (MAMlv3), 8 (MAMlv4), 6 (MAMlv5)]
		UppercutStart:
			MPU0 A 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 1 || CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); } }
			MPU0 B 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU0 C 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
			MPU0 D 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU0 E 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); A_UppercutBonus; } }
			MPU1 A 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
				if (random(1,256) <= 75) { A_PlaySound("*grunt",CHAN_VOICE); }
				A_PlaySound("fistswingheavy",1); // D [Left] or B [Right] 
			}
			MPU1 B 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
			MPU1 C 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU1 D 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(0); } }
			MPU1 E 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU1 F 1
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",CallACS("GetMeleeRange",1),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,10);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",52,10);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,42);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",52,42);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,10);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",52,10);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,42);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",52,42);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			MPU1 G 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU1 F 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 1 || CallACS("MiscVarCheckDECORATE",10051) == 2 || CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
			MPU1 E 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU1 D 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 1 || CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); } }
			MPU1 C 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU1 B 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(0); } }
			MPU1 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) == 1 || CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU1 A 0 { return state("UppercutEnd"); }
		UppercutEnd:
			TNT1 A 0
			{
				A_UppercutBonusTake; 
				A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1); 
			}
			MPU0 E 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU0 D 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); } }
			MPU0 C 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(0); } }
			MPU0 B 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 1 || CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); } }
			MPU0 A 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			TNT1 A 0
			{
				A_TakeInventory("MartArtsMaster1",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster2",0x7FFFFFFF);
				A_ReFire;
				return state("Ready");
			}
			goto Ready

		User1:
			TNT1 A 0
			{
				if (CallACS("UseStaminaAttack",CallACS("GetKickStaminaUse",0),2) == 0) 
				{
					if (CountInv("FistPlayerBlockHold",AAPTR_PLAYER1) > 0) { return state("User4Hold"); } 
					return state("Ready"); 
				}
				return state(""); 
			}
			TNT1 A 0
			{
				A_GunFlash("LightDone",GFF_NOEXTCHANGE); // A_ClearFlash;
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
				CallACS("StartTensionCountDown");
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_GiveInventory("KickAttackDEFLvl2",1); } else { A_GiveInventory("KickAttackDEFLvl1",1); }
				if (random(1,256) > 64) { A_GiveInventory("KickCritBonus1",1,AAPTR_PLAYER1); } else { A_GiveInventory("KickCritBonus2",1,AAPTR_PLAYER1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto KickStart
		KickEnd:
			TNT1 A 0
			{
				A_KickBonusOff;

				if (CountInv("FistPlayerBlockHold",AAPTR_PLAYER1) > 0) { return state("User4Hold"); } 
				return state("Ready");
			}
			goto Ready
		User4:
			DPDF A 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
			DPDF B 1
			{
				A_PFistBlockOn(10051);
			}
			DPDF C 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_GiveInventory("FistPlayerBlockItem",1);
				A_PFistBlockOn(10051);
			}
			DPDF D 1
			{
				A_PFistBlockOn(10051);
			}
			DPDF E 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
			DPDF F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
			DPDF G 1
			{
				A_PFistBlockOn(10051);
			}
			DPDF H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
			DPDF I 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
		User4Hold:
			DPDF J 1 // BRIGHT
			{
				A_PFistBlockOn(10051); 

				A_GiveInventory("FistPlayerBlockHold",1);
				A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER1|WRF_DISABLESWITCH);
				return state("");
			}
			EWS2 G 0 A_Refire("User4End")
			loop
		User4End:
			DPDF I 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			DPDF H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			DPDF G 1
			{
				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			DPDF F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			DPDF E 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			DPDF D 1
			{
				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			DPDF C 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }
				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			DPDF B 1
			{
				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			DPDF A 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			DPDF A 0
			{
				A_PFistBlockOff;
			}
			Goto Ready
	}
}

actor FistIllucia : MarineWeapon
{
	Game Doom
	Weapon.SelectionOrder 3700
	Weapon.Kickback 90
	+WEAPON.NOALERT
	+WEAPON.MELEEWEAPON
	+INVENTORY.UNDROPPABLE
	+INVENTORY.UNTOSSABLE
	Tag "Fist"
	Obituary "%o chewed on %k's fist."
	States
	{
		Ready:
			PUNI A 1
			{
				A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER4);
				if (random(1,100) <= 45) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
			}
			loop
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			PUNI A 1 A_Lower
			loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			PUNI A 1 A_Raise
			loop
		Fire:
			PUNI A 0 A_JumpIf(CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",0),2) == 1, "PunchSuccess")
			goto Ready
		PunchSuccess:
			TNT1 A 0 A_GiveInventory("UsingMeleeAttack",1)
			TNT1 A 0 A_Jump(128,"RightPunch")
		goto LeftPunch
		LeftPunch:
			PUNI B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
			}
			PUNI C 3
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
				if (random(1,256) <= 4) { A_AlertMonsters; }
				A_PlaySound("fistswingmedium",1);
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",CallACS("GetMeleeRange",0),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",26,16);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",26,48);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",26,16);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",26,48);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			PUNI D 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
			}
			PUNI C 3
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
			}
			PUNI B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
				A_ReFire;
			}
			PUNI B 0 A_TakeInventory("UsingMeleeAttack",0x7FFFFFFF)
			goto Ready

		RightPunch:
			PUNI F 3
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
			}
			PUNI G 3
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
				if (random(1,256) <= 4) { A_AlertMonsters; }
				A_PlaySound("fistswingmedium",1);
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",CallACS("GetMeleeRange",0),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",26,16);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",26,48);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",26,16);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",26,48);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			PUNI H 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
			}
			PUNI G 3
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
			}
			PUNI F 4
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
				A_ReFire;
			}
			PUNI F 0 A_TakeInventory("UsingMeleeAttack",0x7FFFFFFF)
			goto Ready
		
		
		AltFire:
			TNT1 A 0
			{
				if (CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",4),2) == 0) { return state("Ready"); }
				return state(""); 
			}
			TNT1 A 0
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto UppercutStart
		UppercutStart:
			MPU2 A 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 1 || CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); } }
			MPU2 B 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU2 C 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
			MPU2 D 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU2 E 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); A_UppercutBonus; } }
			MPU3 A 1 // FLUP F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
				if (random(1,256) <= 75) { A_PlaySound("GauntletIlluciaSwing",CHAN_VOICE); }
				A_PlaySound("fistswingheavy",1); // D [Left] or B [Right] 
			}
			MPU3 B 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
			MPU3 C 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU3 D 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(0); } }
			MPU3 E 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU3 F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
				if (CallACS("CheckCharacterClass") == 1) { A_SetTics(0); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",CallACS("GetMeleeRange",1),0,0,"","","");
	
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,10);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",52,10);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,42);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",52,42);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,10);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",52,10);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,42);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",52,42);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			MPU3 G 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU3 F 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 1 || CallACS("MiscVarCheckDECORATE",10051) == 2 || CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
			MPU3 E 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU3 D 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 1 || CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); } }
			MPU3 C 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU3 B 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(0); } }
			MPU3 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) == 1 || CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU3 A 0 { return state("UppercutEnd"); }
		UppercutEnd:
			TNT1 A 0
			{
				A_UppercutBonusTake; 
				A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1); 
			}
			MPU2 E 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			MPU2 D 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); } }
			MPU2 C 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(0); } }
			MPU2 B 1 { if (CallACS("MiscVarCheckDECORATE",10051) == 1 || CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetTics(0); } }
			MPU2 A 1 { if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
			TNT1 A 0
			{
				A_TakeInventory("MartArtsMaster1",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster2",0x7FFFFFFF);
				A_ReFire;
				return state("Ready");
			}
			goto Ready

		User1:
			TNT1 A 0
			{
				if (CallACS("UseStaminaAttack",CallACS("GetKickStaminaUse",0),2) == 0) 
				{
					if (CountInv("FistPlayerBlockHold",AAPTR_PLAYER1) > 0) { return state("User4Hold"); } 
					return state("Ready"); 
				}
				return state(""); 
			}
			TNT1 A 0
			{
				A_GunFlash("LightDone",GFF_NOEXTCHANGE); // A_ClearFlash;
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
				CallACS("StartTensionCountDown");
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_GiveInventory("KickAttackDEFLvl2",1); } else { A_GiveInventory("KickAttackDEFLvl1",1); }
				if (random(1,256) > 64) { A_GiveInventory("KickCritBonus1",1,AAPTR_PLAYER1); } else { A_GiveInventory("KickCritBonus2",1,AAPTR_PLAYER1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto KickStart
		KickEnd:
			TNT1 A 0
			{
				A_KickBonusOff;
	
				if (CountInv("FistPlayerBlockHold",AAPTR_PLAYER1) > 0) { return state("User4Hold"); } 
				return state("Ready");
			}
			goto Ready
		User4:
			IPDF A 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
			IPDF B 1
			{
				A_PFistBlockOn(10051);
			}
			IPDF C 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_GiveInventory("FistPlayerBlockItem",1);
				A_PFistBlockOn(10051);
			}
			IPDF D 1
			{
				A_PFistBlockOn(10051);
			}
			IPDF E 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
			IPDF F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
			IPDF G 1
			{
				A_PFistBlockOn(10051);
			}
			IPDF H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
			IPDF I 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10051);
			}
		User4Hold:
			IPDF J 1 // BRIGHT
			{
				A_PFistBlockOn(10051); 

				A_GiveInventory("FistPlayerBlockHold",1);
				A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER1|WRF_DISABLESWITCH);
				return state("");
			}
			EWS2 G 0 A_Refire("User4End")
			loop
		User4End:
			IPDF I 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			IPDF H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			IPDF G 1
			{
				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			IPDF F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			IPDF E 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			IPDF D 1
			{
				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			IPDF C 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }
				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			IPDF B 1
			{
				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			IPDF A 1
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); }

				A_PFistBlockOn(10051); 
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			IPDF A 0
			{
				A_PFistBlockOff;
			}
			Goto Ready
	}
}

actor FistFlora : FloraWeapon
{
	Game Doom
	Weapon.SelectionOrder 3700
	Weapon.Kickback 80
	+WEAPON.NOALERT
	+WEAPON.MELEEWEAPON
	+INVENTORY.UNDROPPABLE
	+INVENTORY.UNTOSSABLE
	Tag "Fist"
	Obituary "%o chewed on %k's fist."
	States
	{
		Ready:
			FLHN F 1
			{
				A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER4); // A [Left] or F [Right]
				if (random(1,100) <= 35) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
			}
			loop
		Deselect:
			FLHN F 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_Lower; }
			}
			FLHN F 0 A_Lower
			FLHN F 1 A_Lower
			loop
		Select: 
			FLHN F 0
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_Raise; }
			}
			FLHN F 0 A_Raise
			FLHN F 1 A_Raise
			loop
		Fire:
			TNT1 A 0 A_JumpIf(CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",0),2) == 0, "Ready")
			TNT1 A 0
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
			}
			TNT1 A 0
			{
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
			}
			TNT1 A 0
			{
				if (GetCVar("dvds_florahokutolol") > 0 && CallACS("MiscVarCheckDECORATE",10035) >= 4)
				{
					if (random(1,256) >= 1) { A_PlaySound("FloraHokutoLol",CHAN_VOICE); }
				}
				else
				{
					if (random(1,256) >= 224)
					{
						A_PlaySound("FloraKiaiFull",CHAN_VOICE);
					}
				}
			}
			TNT1 A 0 A_GiveInventory("UsingMeleeAttack",1)
			TNT1 A 0 A_Jump(128,"RightPunch")
			goto LeftPunch
		LeftPunch:
			// 13 Tics [10 (MAMlv2), 8 (MAMlv3), 5 (MAMlv4), 3 (MAMlv5)]
			FLHN G 3 // B [Left] or G [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
				
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_PlaySound("fistswingmedium0",1); } else { A_PlaySound("fistswinglight0",1); }
			}
			FLHN H 2 // C [Left] or H [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",CallACS("GetMeleeRange",0),0,0,"","","");
	
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10035) >= 5)
					{
						if (random(1,8) <= 3)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,16);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,48);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,16);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,48);
						}
					}
					else
					{
						if (random(1,8) <= 1)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,16);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,48);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,16);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,48);
						}
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			FLHN I 3 // D [Left] or I [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
			}
			FLHN H 2 // C [Left] or H [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
			}
			FLHN G 3 // B [Left] or G [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
				A_TakeInventory("MartArtsMaster1",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster2",0x7FFFFFFF);
				A_ReFire;
			}
			FLHN G 0 A_TakeInventory("UsingMeleeAttack",0x7FFFFFFF)
			goto Ready
		RightPunch:
			// 13 Tics [10 (MAMlv2), 8 (MAMlv3), 5 (MAMlv4), 3 (MAMlv5)]
			FLHN B 3 // B [Left] or G [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }

				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_PlaySound("fistswingmedium0",1); } else { A_PlaySound("fistswinglight0",1); }
			}
			FLHN C 2 // C [Left] or H [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",CallACS("GetMeleeRange",0),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10035) >= 5)
					{
						if (random(1,8) <= 3)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,16);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,48);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,16);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,48);
						}
					}
					else
					{
						if (random(1,8) <= 1)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,16);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,48);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,16);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,48);
						}
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			FLHN D 3 // D [Left] or I [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
			}
			FLHN C 2 // C [Left] or H [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
			}
			FLHN B 3 // B [Left] or G [Right]
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
				A_TakeInventory("MartArtsMaster1",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster2",0x7FFFFFFF);
				A_ReFire;
			}
			FLHN B 0 A_TakeInventory("UsingMeleeAttack",0x7FFFFFFF)
			goto Ready

		AltFire:
			TNT1 A 0
			{
				if (CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",4),2) == 0) { return state("Ready"); }
				return state(""); 
			}
			TNT1 A 0
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto UppercutStart
		UppercutStart:
			// 23 Tics [18 (MAMlv1), 14 (MAMlv2), 11 (MAMlv3), 8 (MAMlv4), 6 (MAMlv5)]
			FLUP A 1 { if (CallACS("MiscVarCheckDECORATE",10035) == 1 || CallACS("MiscVarCheckDECORATE",10035) == 2) { A_SetTics(0); } }
			FLUP B 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
			FLUP C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // -1
			FLUP D 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
			FLUP E 1 { if (CallACS("MiscVarCheckDECORATE",10035) == 2) { A_SetTics(0); } A_UppercutBonus; }
			FLU2 A 1 // FLUP F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
	
				if (GetCVar("dvds_florahokutolol") > 0 && CallACS("MiscVarCheckDECORATE",10035) >= 4)
				{
					if (random(1,256) >= 1) { A_PlaySound("FloraHokutoLol",CHAN_VOICE); }
				}
				else
				{
					if (random(1,256) <= 75) { A_PlaySound("FloraKiaiFull",CHAN_VOICE); }
				}
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_PlaySound("fistswingheavy0",1); } else { A_PlaySound("fistswingmedium0",1); }
			}
			FLU2 B 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // -1
			FLU2 C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
			FLU2 D 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // -1
			FLU2 E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // FLUP IJKL 1
			FLU2 F 1 // FLUP IJKL 1
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",CallACS("GetMeleeRange",1),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10035) >= 5)
					{
						if (random(1,8) <= 3)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,10);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",52,10);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,42);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",52,42);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,10);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",52,10);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,42);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",52,42);
						}
					}
					else
					{
						if (random(1,8) <= 1)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,10);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",52,10);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,42);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",52,42);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,10);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",52,10);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,42);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",52,42);
						}
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			FLU2 G 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // FLUP IJKL 1
			FLU2 F 1 { if (CallACS("MiscVarCheckDECORATE",10035) == 1 || CallACS("MiscVarCheckDECORATE",10035) == 2 || CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // -1
			FLU2 E 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
			FLU2 D 1 { if (CallACS("MiscVarCheckDECORATE",10035) == 1 || CallACS("MiscVarCheckDECORATE",10035) == 2) { A_SetTics(0); } }
			FLU2 C 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
			FLU2 B 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } } // -1
			FLU2 A 1 { if (CallACS("MiscVarCheckDECORATE",10035) == 1 || CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
			FLU2 A 0 { return state("UppercutEnd"); }
		UppercutEnd:
			TNT1 A 0
			{
				A_UppercutBonusTake; 
			}
			FLUP E 1 { if (CallACS("MiscVarCheckDECORATE",10035) == 2) { A_SetTics(0); } }
			FLUP D 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
			FLUP C 1 { if (CallACS("MiscVarCheckDECORATE",10035) == 1 || CallACS("MiscVarCheckDECORATE",10035) == 2) { A_SetTics(0); } }
			FLUP B 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
			FLUP A 1 { if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(0); } }
			TNT1 A 0
			{
				A_TakeInventory("MartArtsMaster1",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster2",0x7FFFFFFF);
				A_ReFire;
				return state("Ready");
			}
			goto Ready

		User1: // Kick - Flora Punch version
			TNT1 A 0
			{
				if (CallACS("UseStaminaAttack",CallACS("GetKickStaminaUse",0),2) == 0) 
				{
					if (CountInv("FistPlayerBlockHold",AAPTR_PLAYER1) > 0) { return state("User4Hold"); } 
					return state("Ready"); 
				}
				return state(""); 
			}
			TNT1 A 0
			{
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
				CallACS("StartTensionCountDown");
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("KickAttackDEFLvl2",1); } else { A_GiveInventory("KickAttackDEFLvl1",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
				if (random(1,256) > 64) { A_GiveInventory("KickCritBonus1",1,AAPTR_PLAYER1); } else { A_GiveInventory("KickCritBonus2",1,AAPTR_PLAYER1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto KickStart
		KickEnd:
			TNT1 A 0
			{
				A_KickBonusOff;
	
				if (CountInv("FistPlayerBlockHold",AAPTR_PLAYER1) > 0) { return state("User4Hold"); } 
				return state("Ready");
			}
			goto Ready
		User4:
			FLFG A 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
	
				A_PFistBlockOn(10035);
			}
			FLFG B 1
			{
				A_PFistBlockOn(10035);
			}
			FLFG C 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
	
				A_GiveInventory("FistPlayerBlockItem",1);
				A_PFistBlockOn(10035);
			}
			FLFG D 1
			{
				A_PFistBlockOn(10035);
			}
			FLFG E 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
	
				A_PFistBlockOn(10035);
			}
			FLFG F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
	
				A_PFistBlockOn(10035);
			}
			FLFG G 1
			{
				A_PFistBlockOn(10035);
			}
			FLFG H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
	
				A_PFistBlockOn(10035);
			}
			FLFG I 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
	
				A_PFistBlockOn(10035);
			}
		User4Hold:
			FLFG J 1 // BRIGHT
			{
				A_PFistBlockOn(10035);
	
				A_GiveInventory("FistPlayerBlockHold",1);
				A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER1|WRF_DISABLESWITCH);
				return state("");
			}
			EWS2 G 0 A_Refire("User4End")
			loop
		User4End:
			FLFG I 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10035);
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			FLFG H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
	
				A_PFistBlockOn(10035);
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			FLFG G 1
			{
				A_PFistBlockOn(10035);
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			FLFG F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10035);
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			FLFG E 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
	
				A_PFistBlockOn(10035);
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			FLFG D 1
			{
				A_PFistBlockOn(10035);
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			FLFG C 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }

				A_PFistBlockOn(10035);
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			FLFG B 1
			{
				A_PFistBlockOn(10035);
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			FLFG A 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
	
				A_PFistBlockOn(10035);
				A_TakeInventory("FistPlayerBlockHold",0x7FFFFFFF);
			}
			FLFG A 0
			{
				A_PFistBlockOff;
			}
			Goto Ready
	}
}

actor GauntletPuff : AetheriusPuffZSC
{
	VSpeed 0
	Scale 0.5
	Alpha 0.5
	RenderStyle Translucent
	decal "GauntletScorch"
	damagetype "Gauntlets"
	SeeSound "GauntletHit"
	AttackSound "GauntletHitWall"
	+FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS 

	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (random(1,25) >= 9) { A_ChangeFlag("FORCEPAIN", TRUE); }
				A_Explode(CallACS("GetPunchDamage",0,1),CallACS("MeleeImpactRadius",5),0);
				A_Quake(CallACS("QuakeMeleeIntensity",5),CallACS("QuakeMeleeDuration",5),0,CallACS("QuakeMeleeTremrad",5),"nosound/silent");
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		SpawnSparks:
			PUF4 A 2 BRIGHT
			PUF4 A 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 F 2 BRIGHT
			PUF4 F 2 BRIGHT
			Stop
		Melee:
			TNT1 A 0
			{
				if (random(1,25) >= 9) { A_ChangeFlag("FORCEPAIN", TRUE); }
				A_Explode(CallACS("GetPunchDamage",0,1),CallACS("MeleeImpactRadius",5),0);
				A_Quake(CallACS("QuakeMeleeIntensity",5),CallACS("QuakeMeleeDuration",5),0,CallACS("QuakeMeleeTremrad",5),"nosound/silent");
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		MeleeSparks:
			PUF4 A 2 BRIGHT
			PUF4 A 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 F 2 BRIGHT
			PUF4 F 2 BRIGHT
			Stop
		Crash:
			PUF4 A 0
			{
				if (random(1,25) >= 9) { A_ChangeFlag("FORCEPAIN", TRUE); }
				A_Explode(CallACS("GetPunchDamage",0,1),CallACS("MeleeImpactRadius",5),0);
				A_Quake(CallACS("QuakeMeleeIntensity",5),CallACS("QuakeMeleeDuration",5),0,CallACS("QuakeMeleeTremrad",5),"nosound/silent");
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		CrashSparks:
			PUF4 A 2 BRIGHT
			PUF4 A 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 F 2 BRIGHT
			PUF4 F 2 BRIGHT
			Stop
	}
}

actor GauntletAltPuff : GauntletPuff
{
	VSpeed 0
	Scale 0.5
	Alpha 0.5
	RenderStyle Translucent
	decal "GauntletScorch"
	damagetype "Gauntlets"
	SeeSound "GauntletHit"
	AttackSound "GauntletHitWall"
	+FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS 

	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				A_Explode(CallACS("GetPunchDamage",1,1),CallACS("MeleeImpactRadius",6),0);
				A_Quake(CallACS("QuakeMeleeIntensity",6),CallACS("QuakeMeleeDuration",6),0,CallACS("QuakeMeleeTremrad",6),"nosound/silent");
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		SpawnSparks:
			PUF4 A 2 BRIGHT
			PUF4 A 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 F 2 BRIGHT
			PUF4 F 2 BRIGHT
			Stop
		Melee:
			TNT1 A 0
			{
				A_Explode(CallACS("GetPunchDamage",1,1),CallACS("MeleeImpactRadius",6),0);
				A_Quake(CallACS("QuakeMeleeIntensity",6),CallACS("QuakeMeleeDuration",6),0,CallACS("QuakeMeleeTremrad",6),"nosound/silent");
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		MeleeSparks:
			PUF4 A 2 BRIGHT
			PUF4 A 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 F 2 BRIGHT
			PUF4 F 2 BRIGHT
			Stop
		Crash:
			PUF4 A 0
			{
				A_Explode(CallACS("GetPunchDamage",1,1),CallACS("MeleeImpactRadius",6),0);
				A_Quake(CallACS("QuakeMeleeIntensity",6),CallACS("QuakeMeleeDuration",6),0,CallACS("QuakeMeleeTremrad",6),"nosound/silent");
				
				user_hitsparkrand = random(1,12);
				if (user_hitsparkrand >= 1 && user_hitsparkrand <= 4) { A_SpawnItemEx("MeleeHitSpark1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 5 && user_hitsparkrand <= 7) { A_SpawnItemEx("MeleeHitSpark2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 8 && user_hitsparkrand <= 10) { A_SpawnItemEx("MeleeHitSpark3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
				if (user_hitsparkrand >= 11 && user_hitsparkrand <= 12) { A_SpawnItemEx("MeleeHitSpark4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERALPHA|SXF_TRANSFERRENDERSTYLE); }
			}
		CrashSparks:
			PUF4 A 2 BRIGHT
			PUF4 A 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 B 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 C 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 D 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 E 2 BRIGHT
			PUF4 F 2 BRIGHT
			PUF4 F 2 BRIGHT
			Stop
	}
}

actor SauronGauntlets : MarineWeapon 27330
{
	Scale 0.925
	Height 16
	Radius 16
	Tag "Sauron's Gauntlets"
	+BLOODSPLATTER
	+FLOATBOB
	+WEAPON.MELEEWEAPON
	+WEAPON.BFG
	+WEAPON.NOALERT
	Weapon.SelectionOrder 3400
	Weapon.KickBack 210
	Inventory.PickupMessage "'\cqWhat the feck are these things...?!\c-' \cx[Slot 1]\c-"
	Obituary "$o was decked to the curb by %k's gauntlets of Sauron."
	AttackSound "GauntletHit"

	States
	{
		DeggarisPickup:
			WGNT A 0 A_SpawnItemEX("SauronGauntlets")
			WGNT A 0 A_FadeOut(1.0)
			Loop
		IlluciaPickup:
			WGNT A 0 A_SpawnItemEX("SauronGauntletsIllucia")
			WGNT A 0 A_FadeOut(1.0)
			Loop
		FloraPickup:
			WGNT A 0 A_SpawnItemEX("SauronGauntletsFlora")
			WGNT A 0 A_FadeOut(1.0)
			Loop
		NoMore:
			WGNT A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			WGNT A 0
			WGNT AAA 1
			{
				if (CallACS("GauntletsCheckCharacter") == 2) { return state("IlluciaPickup"); }
				else if (CallACS("GauntletsCheckCharacter") == 3) { return state("FloraPickup"); }
				return state("");
			}
		SpawnSoundEmit:
			WGNT A 0 
			{
				A_Stopsound(CHAN_ITEM);
				A_Playsound("SauronGauntlets/Hum",CHAN_ITEM);
				A_SetInventory("ActorVar1",0);
			}
		SpawnPhase1:
			WGNT AA 1
			{
				if (CallACS("GauntletsCheckCharacter") == 2) { return state("IlluciaPickup"); }
				else if (CallACS("GauntletsCheckCharacter") == 3) { return state("FloraPickup"); }
				return state("");
			}
			WGNT A 0 
			{
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 70) { return state("SpawnSoundEmit"); }
				return state("");
			}
			loop

		Pickup:
			// Other Things
			TNT1 A 0 A_JumpIf(CallACS("CheckPlayerIfDead") == 1,2)
			TNT1 A 0 A_PlaySound("generalequip", 5)
			TNT1 A 0 
			Stop

		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			FPCH A 1 A_Lower
			Loop
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			FPCH A 1 A_Raise
			Loop
		Ready:
			FPCH A 1
			{
				A_WeaponReady(WRF_ALLOWUSER1);
				if (random(1,100) <= 70) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
			}
			Loop
		Fire:
			TNT1 A 0 A_Jump(244,2)
			TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
			TNT1 A 0 A_JumpIf(CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",1),2) == 1, "PunchSuccess")
			goto Ready
		PunchSuccess:
			DGPH A 5
			{
				A_GiveInventory("UsingMeleeAttack",1);
				A_PlaySound("GauntletSwing",CHAN_WEAPON);
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(3); }
			}
			DGPH B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",CallACS("GetMeleeRange",2),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,24);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,56);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,24);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,56);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			DGPH C 4
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH A 5
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(3); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				A_ReFire;
			}
			DGPH A 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
			Goto Ready

		AltFire:
			TNT1 A 0 A_Jump(200,2)
			TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
			TNT1 A 0 A_JumpIf(CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",2),2) == 1, "AltPunchSuccess")
			goto Ready
		AltPunchSuccess:
			DGPH A 5
			{
				A_GiveInventory("UsingMeleeAttack",1);
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(3); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				A_PlaySound("*grunt",CHAN_VOICE,10.0);
				A_PlaySound("GauntletSwing",CHAN_WEAPON);
			}
			DGPH B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",CallACS("GetMeleeRange",3),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,32);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,64);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,32);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,64);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			DGPH CD 4
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH E 1
			{
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH G 1
			{
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH I 1
			{
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH J 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH K 10
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(6); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			DGPH K 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
			Goto Ready
	}
}

// Illucia-specfic version with slightly less base damage but more attack speed
actor SauronGauntletsIllucia : MarineWeapon 27331
{
	Tag "Sauron's Gauntlets"
	Scale 0.875
	+BLOODSPLATTER
	+FLOATBOB
	+WEAPON.MELEEWEAPON
	+WEAPON.BFG
	+WEAPON.NOALERT
	Weapon.SelectionOrder 3400
	Weapon.KickBack 175
	Inventory.PickupMessage "'\cdThe hell are these things supposed to be?!\c-' \cx[Slot 1]\c-"
	Obituary "$o was decked to the curb by %k's gauntlets of Sauron."
	AttackSound "GauntletHit"

	States
	{
		DeggarisPickup:
			WGNT A 0 A_SpawnItemEX("SauronGauntlets")
			WGNT A 0 A_FadeOut(1.0)
			Loop
		IlluciaPickup:
			WGNT A 0 A_SpawnItemEX("SauronGauntletsIllucia")
			WGNT A 0 A_FadeOut(1.0)
			Loop
		FloraPickup:
			WGNT A 0 A_SpawnItemEX("SauronGauntletsFlora")
			WGNT A 0 A_FadeOut(1.0)
			Loop
		NoMore:
			WGNT A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0
			WGNT AAA 1
			{
				if (CallACS("GauntletsCheckCharacter") == 1) { return state("DeggarisPickup"); }
				else if (CallACS("GauntletsCheckCharacter") == 3) { return state("FloraPickup"); }
				return state("");
			}
		SpawnSoundEmit:
			WGNT A 0 
			{
				A_Stopsound(CHAN_ITEM);
				A_Playsound("SauronGauntlets/Hum",CHAN_ITEM);
				A_SetInventory("ActorVar1",0);
			}
		SpawnPhase1:
			WGNT AA 1
			{
				if (CallACS("GauntletsCheckCharacter") == 1) { return state("DeggarisPickup"); }
				else if (CallACS("GauntletsCheckCharacter") == 3) { return state("FloraPickup"); }
				return state("");
			}
			WGNT A 0 
			{
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 70) { return state("SpawnSoundEmit"); }
				return state("");
			}
			loop

		Pickup:
			// Other Things
			TNT1 A 0 A_JumpIf(CallACS("CheckPlayerIfDead") == 1,2)
			TNT1 A 0 A_PlaySound("generalequip", 5)
			TNT1 A 0 
			Stop
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			FPCH A 1 A_Lower
			Loop
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10051) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			FPCH A 1 A_Raise
			Loop
		Ready:
			FPCH A 1
			{
				A_WeaponReady(WRF_ALLOWUSER1);
				if (random(1,100) <= 60) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
			}
			Loop
		Fire:
			TNT1 A 0 A_Jump(244,2)
			TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
			TNT1 A 0 A_JumpIf(CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",1),2) == 1, "PunchSuccess")
			goto Ready
		PunchSuccess:
			ILPH A 4
			{
				A_GiveInventory("UsingMeleeAttack",1);
				A_PlaySound("GauntletSwing",CHAN_WEAPON);
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			ILPH B 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",CallACS("GetMeleeRange",2),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,24);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",28,56);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,24);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",28,56);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			ILPH C 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
			ILPH B 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
			ILPH A 4
			{
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				A_ReFire;
			}
			ILPH A 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
			Goto Ready

		AltFire:
			TNT1 A 0 A_Jump(200,2)
			TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
			TNT1 A 0 A_JumpIf(CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",2),2) == 1, "AltPunchSuccess")
			goto Ready
		AltPunchSuccess:
			ILPH A 4
			{
				A_GiveInventory("UsingMeleeAttack",1);
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				A_PlaySound("GauntletIlluciaSwing",CHAN_VOICE,10.0);
				A_PlaySound("GauntletSwing",CHAN_WEAPON);
			}
			ILPH B 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",CallACS("GetMeleeRange",3),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (random(1,8) <= 1)
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",26,32);
						A_MeleeShieldPiece("ShieldPartPunchAttackReflect",26,64);
					}
					else
					{
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",26,32);
						A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",26,64);
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			ILPH CD 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
			ILPH EFGHIJ 1 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
			ILPH K 8 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
			ILPH K 8 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
			ILPH K 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
			Goto Ready
	}
}

// Flora-specfic version with even less base damage but more attack speed
actor SauronGauntletsFlora : FloraWeapon 27332
{
	+BLOODSPLATTER
	Weapon.SelectionOrder 3400
	+WEAPON.MELEEWEAPON
	Weapon.KickBack 140
	Obituary "$o was decked to the curb by %k's gauntlets of Sauron."
	Tag "Sauron's Gauntlets"

	Scale 0.825
	+FLOATBOB
	+WEAPON.BFG
	+WEAPON.NOALERT
	Inventory.PickupMessage "'\cnHmmm... these look like they'll be of use...\c-' \cx[Slot 1]\c-"
	AttackSound "GauntletHit"

	States
	{
		DeggarisPickup:
			WGNT A 0 A_SpawnItemEX("SauronGauntlets")
			WGNT A 0 A_FadeOut(1.0)
			Loop
		IlluciaPickup:
			WGNT A 0 A_SpawnItemEX("SauronGauntletsIllucia")
			WGNT A 0 A_FadeOut(1.0)
			Loop
		FloraPickup:
			WGNT A 0 A_SpawnItemEX("SauronGauntletsFlora")
			WGNT A 0 A_FadeOut(1.0)
			Loop
		NoMore:
			WGNT A 0 A_FadeOut(1.0)
			Loop
		Spawn:
			TNT1 A 0
			WGNT AAA 1
			{
				if (CallACS("GauntletsCheckCharacter") == 1) { return state("DeggarisPickup"); }
				else if (CallACS("GauntletsCheckCharacter") == 2) { return state("IlluciaPickup"); }
				return state("");
			}
		SpawnSoundEmit:
			WGNT A 0 
			{
				A_Stopsound(CHAN_ITEM);
				A_Playsound("SauronGauntlets/Hum",CHAN_ITEM);
				A_SetInventory("ActorVar1",0);
			}
		SpawnPhase1:
			WGNT AA 1
			{
				if (CallACS("GauntletsCheckCharacter") == 1) { return state("DeggarisPickup"); }
				else if (CallACS("GauntletsCheckCharacter") == 2) { return state("IlluciaPickup"); }
				return state("");
			}
			WGNT A 0 
			{
				A_GiveInventory("ActorVar1",1);
				if (CountInv("ActorVar1") >= 70) { return state("SpawnSoundEmit"); }
				return state("");
			}
			loop

		Pickup:
			// Other Things
			TNT1 A 0 A_JumpIf(CallACS("CheckPlayerIfDead") == 1,2)
			TNT1 A 0 A_PlaySound("generalequip", 5)
			TNT1 A 0 
			Stop
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			GNTF A 1 A_Lower
			Loop
		Select:
			TNT1 A 0
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			GNTF A 1 A_Raise
			Loop
		Ready:
			GNTF A 1
			{
				A_WeaponReady(WRF_ALLOWUSER1);
				if (random(1,100) <= 50) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
			}
			Loop
		Fire:
			TNT1 A 0 A_Jump(244,2)
			TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
			TNT1 A 0 A_JumpIf(CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",1),2) == 1, "PunchSuccess")
			goto Ready
		PunchSuccess:
			TNT1 A 0
			{
				A_GiveInventory("UsingMeleeAttack",1);
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
			}
			TNT1 A 0 A_Jump(224,2)
			TNT1 A 0 A_PlaySound("FloraKiaiFull",CHAN_VOICE)
			GNTP B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(2); }
				A_PlaySound("GauntletSwing",CHAN_WEAPON);
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP C 3
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			TNT1 A 0 
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",CallACS("GetMeleeRange",2),0,0,"","","");
	
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10035) >= 5)
					{
						if (random(1,8) <= 3)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,56);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,56);
						}
					}
					else
					{
						if (random(1,8) <= 1)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,56);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,56);
						}
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			GNTP D 2
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP C 3
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(2); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				A_TakeInventory("MartArtsMaster1",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster2",0x7FFFFFFF);
				A_ReFire;
			}
			GNTP B 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
			Goto Ready

		AltFire:
			TNT1 A 0 A_Jump(200,2)
			TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
			TNT1 A 0 A_JumpIf(CallACS("UseStaminaAttack",CallACS("GetPunchStaminaUse",2),2) == 1, "AltPunchSuccess")
			goto Ready
		AltPunchSuccess:
			TNT1 A 0
			{
				A_GiveInventory("UsingMeleeAttack",1);
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
			}
			GNTP B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(2); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				A_PlaySound("GauntletFloraSwing",CHAN_VOICE,10.0);
				A_PlaySound("GauntletSwing",CHAN_WEAPON);
			}
			GNTP C 3
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			TNT1 A 0 
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraCustomPunch(CallACS("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",CallACS("GetMeleeRange",3),0,0,"","","");

				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
				if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10035) >= 5)
					{
						if (random(1,8) <= 3)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,32);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,64);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,32);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,64);
						}
					}
					else
					{
						if (random(1,8) <= 1)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,32);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,64);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,32);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,64);
						}
					}
				}
				A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
			}
			GNTP D 2
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP E 3
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(2); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP F 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP G 1
			{
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP I 1
			{
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP J 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP K 1
			{
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
			}
			GNTP L 7
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(4); }
				ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
				A_TakeInventory("MartArtsMaster1",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster2",0x7FFFFFFF);
			}
			GNTP L 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
			Goto Ready
	}
}

actor ChainsawPuff : AetheriusPuffZSC
{
	DamageType "Chainsaw"
	+NOBLOCKMAP
	+NOGRAVITY
	+ALLOWPARTICLES
	+RANDOMIZE
	RenderStyle Translucent
	Alpha 0.5
	VSpeed 1
	Mass 5
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				user_randompain = 32;
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,2); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,4); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,6); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,8); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(9,10); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,2) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,4) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
			}
			PUFF A 4 Bright
			PUFF B 4
			// Intentional fall-through
		Melee:
			TNT1 A 0
			{
				user_randompain = 32;
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,2); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,4); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,6); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,8); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(9,10); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,2) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,4) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
			}
			PUFF CD 4
			Stop
	}
}

actor Chainsaw2Puff : ChainsawPuff
{
	DamageType "Chainsaw"
	+NOBLOCKMAP
	+NOGRAVITY
	+ALLOWPARTICLES
	+RANDOMIZE
	RenderStyle Translucent
	Alpha 0.5
	VSpeed 1
	Mass 5
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				user_randompain = 16;
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,2); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,4); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,6); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,8); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(9,10); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,2) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,4) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
			}
			PUFF A 4 Bright
			PUFF B 4
			// Intentional fall-through
		Melee:
			TNT1 A 0
			{
				user_randompain = 16;
				if (CallACS("MiscVarCheckDECORATE",10051) == 1) { user_randompain += random(1,2); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 2) { user_randompain += random(3,4); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 3) { user_randompain += random(5,6); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 4) { user_randompain += random(7,8); }
				if (CallACS("MiscVarCheckDECORATE",10051) == 5) { user_randompain += random(9,10); }
				if (CallACS("MiscVarCheckDECORATE",10052) == 1) { user_randompain += (random(1,2) * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10052) == 2) { user_randompain += (random(3,4) * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
			}
			PUFF CD 4
			Stop
	}
}

// Marine Weapons
Actor Chainsaw2 : MarineWeapon
{ 
	Weapon.Kickback 0
	Weapon.SelectionOrder 2200
	Weapon.UpSound "weapons/sawup"
	Weapon.ReadySound "weapons/sawidle"
	Inventory.PickupMessage "$GOTCHAINSAW"
	Obituary "$OB_MPCHAINSAW"
	Tag "$TAG_CHAINSAW"
	Decal "BulletChip"
	+WEAPON.MELEEWEAPON
	Inventory.PickupMessage "A \caChainsaw\c-! Find some meat! \cx[Slot 1]\c-"
	States
	{
		Spawn:
			CSAW A -1
			Stop
		Ready:
			SAWG C 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Ready2");
				}
				else
				{
					return state("Ready1");
				}
				return state("");
			}
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Deselect2");
				}
				else
				{
					return state("Deselect1");
				}
				return state("");
			}
		Ready1:
			SAWG CD 4
			{
				A_WeaponReady(WRF_ALLOWUSER1);
				A_PlaySound("weapons/sawidle");
			}
			goto Ready
		Ready2:
			SAWG GH 4
			{
				A_WeaponReady(WRF_ALLOWUSER1);
				A_PlaySound("weapons/sawidle");
			}
			goto Ready
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
		Deselect1:
			SAWG A 1 A_Lower
			goto Deselect
		Deselect2:
			SAWG E 1 A_Lower
			goto Deselect
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Select2");
				}
				else
				{
					return state("Select1");
				}
				return state("");
			}
		Select1:
			SAWG A 1 A_Raise
			goto Select
		Select2:
			SAWG E 1 A_Raise
			goto Select
		Fire:
			TNT1 A 0 A_Jump(252,2)
			TNT1 A 0 A_AlertMonsters
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Fire2");
				}
				else
				{
					return state("Fire1");
				}
				return state("");
			}
		Fire1:
			SAWG AB 4
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraSaw("weapons/sawfull","weapons/sawhit",CallACS("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,SF_NORANDOM,CallACS("GetMeleeRange",5),2.8125,0,0,0,"");
			}
			SAWG B 0 A_ReFire
			goto Ready
		Fire2:
			SAWG EF 4
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraSaw("weapons/sawfull","weapons/sawhit",CallACS("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,SF_NORANDOM,CallACS("GetMeleeRange",5),2.8125,0,0,0,"");
			}
			SAWG D 0 A_ReFire
			goto Ready
		Spawn:
			CSAW A -1
			Stop
	}
}

Actor DoubleBladedChainsaw : MarineWeapon 27033
{
	Weapon.Kickback 0
	Weapon.SelectionOrder 2200
	Weapon.UpSound "weapons/saw2up"
	Weapon.ReadySound "weapons/saw2idle"
	Inventory.PickupMessage "A \cadouble-bladed Chainsaw\c-! This was obviously made with killing in mind! \cx[Slot 1]\c-"
	Tag "Double-Bladed Chainsaw"
	Obituary "%o was mowed twice-over by %k's double-bladed chainsaw."
	Decal "BulletChip"
	+WEAPON.MELEEWEAPON
	States
	{
		Spawn:
			2SAW A -1
			Stop
		Ready:
			SAW2 C 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Ready2");
				}
				else
				{
					return state("Ready1");
				}
				return state("");
			}
		Ready1:
			SAW2 CD 4
			{
				A_WeaponReady(WRF_ALLOWUSER1);
				A_PlaySound("weapons/sawidle");
				A_PlaySound("weapons/sawidle");
			}
			goto Ready
		Ready2:
			SAW2 GH 4
			{
				A_WeaponReady(WRF_ALLOWUSER1);
				A_PlaySound("weapons/sawidle");
				A_PlaySound("weapons/sawidle");
			}
			goto Ready
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_Lower; }
			}
			SAW2 C 0 A_Lower
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Deselect2");
				}
				else
				{
					return state("Deselect1");
				}
				return state("");
			}
		Deselect1:
			SAW2 A 1 A_Lower
			goto Deselect
		Deselect2:
			SAW2 E 1 A_Lower
			goto Deselect
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_Raise; }
			}
			SAW2 C 0 A_Raise
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Select2");
				}
				else
				{
					return state("Select1");
				}
				return state("");
			}
		Select1:
			SAW2 A 1 A_Raise
			Loop
		Select2:
			SAW2 E 1 A_Raise
			Loop
		Fire:
			TNT1 A 0 A_Jump(252,2)
			TNT1 A 0 A_AlertMonsters
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Fire2");
				}
				else
				{
					return state("Fire1");
				}
				return state("");
			}
		Fire1:
			SAW2 AB 4
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraSaw("weapons/sawfull","weapons/sawhit",CallACS("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,SF_NORANDOM,CallACS("GetMeleeRange",6),7.03125,0.125,0,0,"");
			}
			SAW2 B 0 A_ReFire
			goto Ready
		Fire2:
			SAW2 EF 4
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraSaw("weapons/sawfull","weapons/sawhit",CallACS("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,SF_NORANDOM,CallACS("GetMeleeRange",6),7.03125,0.125,0,0,"");
			}
			SAW2 B 0 A_ReFire
			goto Ready
	}
}

Actor ChainsawChecker : AetheriusCustomInventory replaces Chainsaw
{
	//$Sprite "CSAWA0"
	States
	{
				BecomeSceptre:
					TNT1 A 0 A_SpawnItemEx("SceptreOfEmpyrea",0,0,0,0,0,0,0,0,0)
					TNT1 A 0 A_FadeOut(1.0)
					Loop

		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_JumpIf(CallACS("SawCheckSceptre") == 1,"BecomeSceptre")
			TNT1 A 0 A_SpawnItemEx("MiniBerserk",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_JumpIf(CallACS("CheckChainsaw") == 1,"HaveSingle")
			TNT1 A 0 A_JumpIf(CallACS("CheckChainsaw") == 2,"HaveDouble")
			goto HaveNone
		HaveNone:
			TNT1 A 0 A_Jump(32,3)
			TNT1 A 0 A_SpawnItemEx("Chainsaw2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_Jump(256,2)
			TNT1 A 0 A_SpawnItemEx("DoubleBladedChainsaw",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
		HaveSingle:
			TNT1 A 0 A_Jump(32,3)
			TNT1 A 0 A_SpawnItemEx("Berserk2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_Jump(256,2)
			TNT1 A 0 A_SpawnItemEx("DoubleBladedChainsaw",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
		HaveDouble:
			TNT1 A 0 A_SpawnItemEx("Berserk2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

Actor DualPistols : MarineWeapon 27037
{
	Game Doom
	Weapon.SlotPriority 1
	Weapon.SelectionOrder 1900
	Weapon.AmmoUse 1
	Weapon.AmmoGive 20
	Weapon.AmmoType "Clip"
	Inventory.PickupMessage "You got an extra \cuPistol\c-! \cx[Slot 2]\c-"
	Obituary "%o got pecked by %k's twin peashooters!"
	Tag "Dual Pistols"
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			PIST C 1
			Loop
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",12,0,0,0,0,0,0,0,96)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",-12,0,0,0,0,0,0,0,254)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Ready:
			PISG A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Ready2");
				}
				else
				{
					return state("Ready1");
				}
				return state("");
			}
		Ready1:
			PISD A 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Ready2:
			PISD D 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Deselect2");
				}
				else
				{
					return state("Deselect1");
				}
				return state("");
			}
		Deselect1:
			PISD A 1 A_Lower
			goto Deselect
		Deselect2:
			PISD D 1 A_Lower
			goto Deselect
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Select2");
				}
				else
				{
					return state("Select1");
				}
				return state("");
			}
		Select1:
			PISD A 1 A_Raise
			goto Select
		Select2:
			PISD D 1 A_Raise
			goto Select

		Fire:
			PISD A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Fire2");
				}
				else
				{
					return state("Fire1");
				}
				return state("");
			}
		Fire1:
			PISD A 0
			{
				A_PlaySound("weapons/pistol", CHAN_WEAPON);
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(2,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",2), CallACS("GetHitScanYSpread",2), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
			}
			PISD B 3 A_GunFlash("Flash")
			PISD B 2
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(0); }
			}
			TNT1 A 0
			{
				A_PlaySound("weapons/pistol", CHAN_WEAPON);
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(2,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",2), CallACS("GetHitScanYSpread",2), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
			}
			PISD C 3 A_GunFlash
			PISD C 2
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(0); }
			}
			PISD A 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(1); }
				A_ReFire;
			}
			Goto Ready
		Fire2:
			PISD D 0
			{
				A_PlaySound("weapons/pistol", CHAN_WEAPON);
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(2,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",2), CallACS("GetHitScanYSpread",2), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
			}
			PISD E 3 A_GunFlash("Flash")
			PISD E 2
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(0); }
			}
			TNT1 A 0
			{
				A_PlaySound("weapons/pistol", CHAN_WEAPON);
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(2,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",2), CallACS("GetHitScanYSpread",2), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
			}
			PISD F 3 A_GunFlash
			PISD F 2
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(0); }
			}
			PISD D 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(1); }
				A_ReFire;
			}
			Goto Ready

		Flash:
			TNT1 A 0 Bright A_Light1
			Goto LightDone
		Flash2:
			TNT1 A 0 Bright A_Light1
			Goto LightDone
	}
}
Actor DualPistolsChecker : AetheriusCustomInventory
{
	//$Sprite "PISTC0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",12,0,0,0,0,0,0,0,96)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",-12,0,0,0,0,0,0,0,254)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("DualPistols",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			loop
	}
}


Actor Pistol2 : MarineWeapon
{
	Weapon.Kickback 100
	Weapon.SelectionOrder 1900
	Weapon.AmmoUse 1
	Weapon.AmmoGive 20
	Weapon.AmmoType "Clip"
	Obituary "$OB_MPPISTOL"
	+WEAPON.WIMPY_WEAPON
	Tag "$TAG_PISTOL"
	Inventory.PickupMessage "Picked up a \cupistol\c-! \cx[Slot 2]\c-"
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			PIST C 0
			{
				if (CountInv("Pistol2",AAPTR_PLAYER1) > 0)
				{
					A_SpawnItemEx("DualPistols");
					A_FadeOut(1,1);
				}
			}
		Idle:
			PIST C 1
			Loop
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",12,0,0,0,0,0,0,0,96)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",-12,0,0,0,0,0,0,0,254)
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Ready:
			PISG A 0
			{
				if (CallACS("CheckCharacterClass") == 1) { return state("Ready2"); } else { return state("Ready1"); }
				return state("");
			}
		Ready1:
			PISG A 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Ready2:
			PISG F 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1) { return state("Deselect2"); } else { return state("Deselect1"); }
				return state("");
			}
		Deselect1:
			PISG A 1 A_Lower
			goto Deselect
		Deselect2:
			PISG F 1 A_Lower
			goto Deselect
		Select:
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1) { return state("Select2"); } else { return state("Select1"); }
				return state("");
			}
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
		Select1:
			PISG A 1 A_Raise
			goto Select
		Select2:
			PISG F 1 A_Raise
			goto Select
		Fire:
			PISG A 0
			{
				if (CallACS("CheckCharacterClass") == 1) { return state("Fire2"); } else { return state("Fire1"); }
				return state("");
			}
		Fire1:
			PISG A 4
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
			}
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				A_PlaySound("weapons/pistol", CHAN_WEAPON);
				A_GetPlayerAttackDamage(1,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",1), CallACS("GetHitScanYSpread",1), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
			}
			PISG B 6 A_GunFlash("Flash")
			PISG C 4
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
			}
			PISG B 5 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(3); }
				A_ReFire;
			}
			Goto Ready
		Fire2:
			PISG F 4
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
			}
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				A_PlaySound("weapons/pistol", CHAN_WEAPON);
				A_GetPlayerAttackDamage(1,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",1), CallACS("GetHitScanYSpread",1), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
			}
			PISG G 6 A_GunFlash("Flash2")
			PISG H 4
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
			}
			PISG G 5 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(3); }
				A_ReFire;
			}
			Goto Ready
		Flash:
			PISF A 7 Bright A_Light1
			Goto LightDone
			PISF A 7 Bright A_Light1
			Goto LightDone
		Flash2:
			PISF B 7 Bright A_Light1
			Goto LightDone
			PISF B 7 Bright A_Light1
			Goto LightDone
	}
}
Actor PistolChecker : AetheriusCustomInventory replaces Pistol
{
	//$Sprite "PISTC0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",12,0,0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,96)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",-12,0,0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,254)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("Pistol2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			loop
	}
}

Actor Shotgun2 : MarineWeapon
{
	Weapon.Kickback 100
	Weapon.SelectionOrder 1300
	Weapon.AmmoUse 1
	Weapon.AmmoGive 8
	Weapon.AmmoType "Shell"
	Obituary "$OB_MPSHOTGUN"
	Tag "$TAG_SHOTGUN"
	Inventory.PickupMessage "Picked up a \cushotgun\c-! \cx[Slot 3]\c-"
	States
	{
		Spawn:
			SHOT A -1
			Stop
		Ready:
			SHTG A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Ready2");
				}
				else
				{
					return state("Ready1");
				}
				return state("");
			}
		Ready1:
			SHTG A 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Ready2:
			SHTG I 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Deselect2");
				}
				else
				{
					return state("Deselect1");
				}
				return state("");
			}
		Deselect1:
			SHTG A 1 A_Lower
			goto Deselect
		Deselect2:
			SHTG I 1 A_Lower
			goto Deselect
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Select2");
				}
				else
				{
					return state("Select1");
				}
				return state("");
			}
		Select1:
			SHTG A 1 A_Raise
			goto Select
		Select2:
			SHTG I 1 A_Raise
			goto Select
		Flash:
			SHTF A 4 Bright A_Light1
			SHTF B 3 Bright A_Light2
			Goto LightDone
		Flash2:
			SHTF C 4 Bright A_Light1
			SHTF D 3 Bright A_Light2
			Goto LightDone

		FireActual:
			SHTG A 0
			{
				A_PlaySound ("weapons/shotgf", CHAN_WEAPON);
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(3,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",3), CallACS("GetHitScanYSpread",3), 7, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Shell");
			}
			SHTG A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Fire2End");
				}
				else
				{
					return state("Fire1End");
				}
				return state("");
			}
			goto Fire1End

		Fire:
			SHTG A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Fire2");
				}
				else
				{
					return state("Fire1");
				}
				return state("");
			}
		Fire1:
			SHTG A 3
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
			}
			goto FireActual
		Fire1End:
			SHTG A 7 A_GunFlash("Flash")
			TNT1 A 0 A_JumpIf(CallACS("MiscVarCheckDECORATE",10021) >= 3, "Fire1EndAuto")
			SHTG BC 5
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 1) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(3); }
			}
			SHTG D 4
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(2); }
			}
			SHTG CB 5
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 1) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(3); }
			}
			SHTG A 3
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(2); }
			}
			SHTG A 7
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 1) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
				A_ReFire;
			}
			Goto Ready
		Fire1EndAuto:
			SHTG B 8 A_SetTics(
				/* The formula here is:
				*   let d = duration of this frame
				*   let p = perk level (up to 5)
				*   d = 8 + (4 * (3 - p))
				*
				* Hence, the durations of this frame will be:
				*   p  d
				*   3  8
				*   4  4
				*   5  0
				*/
				8 + (4 * (3 - min(CallACS("MiscVarCheckDECORATE",10021), 5)))
			)
			Goto Ready
		Fire2:
			SHTG I 3
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
			}
			goto FireActual
		Fire2End:
			SHTG I 7 A_GunFlash("Flash2")
			TNT1 A 0 A_JumpIf(CallACS("MiscVarCheckDECORATE",10021) >= 3, "Fire2EndAuto")
			SHTG JK 5
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 1) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(3); }
			}
			SHTG L 4
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(2); }
			}
			SHTG KJ 5
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 1) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(3); }
			}
			SHTG I 3
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(2); }
			}
			SHTG I 7
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 1) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
				A_ReFire;
			}
			Goto Ready
		Fire2EndAuto:
			SHTG J 8 A_SetTics(
				/* The formula here is:
				*   let d = duration of this frame
				*   let p = perk level (up to 5)
				*   d = 8 + (4 * (3 - p))
				*
				* Hence, the durations of this frame will be:
				*   p  d
				*   3  8
				*   4  4
				*   5  0
				*/
				8 + (4 * (3 - min(CallACS("MiscVarCheckDECORATE",10021), 5)))
			)
			Goto Ready
	}
}
Actor ShotgunChecker : AetheriusCustomInventory replaces Shotgun
{
	//$Sprite "SHOTA0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,248)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,254)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - Shotgun")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,248)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,254)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,248)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,254)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,248)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,254)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,255)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,255)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,254); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("Shotgun2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

Actor SuperShotgun2 : MarineWeapon 
{ 
	Weapon.Kickback 100
	Weapon.SelectionOrder 400
	Weapon.AmmoUse 2
	Weapon.AmmoGive 8
	Weapon.AmmoType "Shell"
	Obituary "$OB_MPSSHOTGUN"
	Tag "$TAG_SUPERSHOTGUN"
	Inventory.PickupMessage "Picked up a \cusuper shotgun\c-! \cx[Slot 3]\c-"
	States
	{
		Spawn:
			SGN2 A -1
			Stop
		Ready:
			SHT2 A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Ready2");
				}
				else
				{
					return state("Ready1");
				}
				return state("");
			}
		Ready1:
			SHT2 A 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Ready2:
			SHT2 K 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Deselect2");
				}
				else
				{
					return state("Deselect1");
				}
				return state("");
			}
		Deselect1:
			SHT2 A 1 A_Lower
			goto Deselect
		Deselect2:
			SHT2 K 1 A_Lower
			goto Deselect
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Select2");
				}
				else
				{
					return state("Select1");
				}
				return state("");
			}
		Select1:
			SHT2 A 1 A_Raise
			goto Select
		Select2:
			SHT2 K 1 A_Raise
			goto Select
		Flash:
			SHT2 I 4 Bright A_Light1
			SHT2 J 3 Bright A_Light2
			Goto LightDone
		Flash2:
			SHT2 S 4 Bright A_Light1
			SHT2 T 3 Bright A_Light2
			Goto LightDone

		FireActual:
			TNT1 A 0
			{
				A_PlaySound ("weapons/sshotf", CHAN_WEAPON);
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(4,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",4), CallACS("GetHitScanYSpread",4), 20, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,2,"Shell");
			}
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Fire2End");
				}
				else
				{
					return state("Fire1End");
				}
				return state("");
			}
			goto Fire1End

		Fire:
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Fire2");
				}
				else
				{
					return state("Fire1");
				}
				return state("");
			}
		Fire1:
			SHT2 A 3
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
			}
			goto FireActual
		Fire1End:
			SHT2 A 7 A_GunFlash
			SHT2 B 7
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
			}
			SHT2 C 7 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
				A_CheckReload;
			}
			SHT2 D 7 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
				A_OpenShotgun2;
			}
			SHT2 E 7
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
			}
			SHT2 F 7 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
				A_LoadShotgun2;
			}
			SHT2 G 6
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(4); }
			}
			SHT2 H 6 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(4); }
				A_CloseShotgun2;
			}
			SHT2 A 5 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(3); }
				A_ReFire;
			}
			Goto Ready
			// unused states
			SHT2 B 7
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
			}
			SHT2 A 3
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
			}
			Goto Deselect
		Fire2:
			SHT2 K 3
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
			}
		goto FireActual
		Fire2End:
			SHT2 K 7 A_GunFlash("Flash2")
			SHT2 L 7
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
			}
			SHT2 M 7 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
				A_CheckReload;
			}
			SHT2 N 7 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
				A_OpenShotgun2;
			}
			SHT2 O 7
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
			}
			SHT2 P 7 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
				A_LoadShotgun2;
			}
			SHT2 Q 6
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(4); }
			}
			SHT2 R 6 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(4); }
				A_CloseShotgun2;
			}
			SHT2 K 5 
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(3); }
				A_ReFire;
			}
			Goto Ready
			// unused states
			SHT2 L 7
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
			}
			SHT2 K 3
			{
				if (CallACS("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
			}
			Goto Deselect
	}
}
Actor SuperShotgunChecker : AetheriusCustomInventory replaces SuperShotgun
{
	//$Sprite "SGN2A0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,252)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - Super Shotgun")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,254)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,255)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,248)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,253); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("SuperShotgun2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

Actor Chaingun2 : MarineWeapon
{
	Weapon.Kickback 100
	Weapon.SelectionOrder 700
	Weapon.AmmoUse 1
	Weapon.AmmoGive 20
	Weapon.AmmoType "Clip"
	Obituary "$OB_MPCHAINGUN" // "%o was mowed down by %k's chaingun."
	Tag "$TAG_CHAINGUN"
	Inventory.PickupMessage "Picked up a \cuchaingun\c-! \cx[Slot 4]\c-"
	States
	{
		Spawn:
			MGUN A -1
			Stop
		Ready:
			CHGG A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CHGG A 1 A_Lower
			Loop
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CHGG A 1 A_Raise
			Loop

		Fire:
			CHGG A 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
				A_GunFlash("Flash");
				A_PlaySound("weapons/chngun", CHAN_WEAPON);
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(5,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",11), CallACS("GetHitScanYSpread",11), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
			}
			CHGG B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
				A_GunFlash("Flash2");
				A_PlaySound("weapons/chngun", CHAN_WEAPON);
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(5,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",11), CallACS("GetHitScanYSpread",11), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
			}
			CHGG B 0 A_ReFire
			Goto Ready
		Flash:
			CHGF A 4 Bright 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
				A_Light1;
			}
			Goto LightDone
		Flash2:
			CHGF B 4 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
				A_Light1;
			}
			Goto LightDone
	}
}
Actor ChaingunChecker : AetheriusCustomInventory replaces Chaingun
{
	//$Sprite "MGUNA0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,244)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - Chaingun")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,244)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,244)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,244)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,253)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,254)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,250)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,251); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_Jump(16,"SpawnMinigun")
			TNT1 A 0 A_SpawnItemEx("Chaingun2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
		SpawnMinigun:
			TNT1 A 0 A_SpawnItemEx("Minigun",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

// Skulltag's Minigun
actor Minigun : MarineWeapon 27036
{
	Weapon.AmmoType "Clip"
	Weapon.AmmoGive 20
	Weapon.AmmoUse 1
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "Picked up a \cuminigun\c-! \cx[Slot 4]\c-"
	Obituary "%o was shredded by %k's minigun."
	States
	{
		Spawn:
			MNGN A -1
			Loop
		Ready:
			MNG2 A 0
			{
				A_TakeInventory("MinigunHeat",9999,0,AAPTR_PLAYER1);
				A_TakeInventory("MinigunSlowdownWhenFiring",9999,0,AAPTR_PLAYER1);
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Ready2");
				}
				else
				{
					return state("Ready1");
				}
				return state("");
			}
		Ready1:
			MNG2 A 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Ready2:
			MNG2 G 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Deselect:
			TNT1 A 0 
			{
				A_TakeInventory("MinigunHeat",9999,0,AAPTR_PLAYER1);
				A_TakeInventory("MinigunSlowdownWhenFiring",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			MNG2 A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Deselect2");
				}
				else
				{
					return state("Deselect1");
				}
				return state("");
			}
		Deselect1:
			MNG2 A 1 A_Lower
			goto Deselect
		Deselect2:
			MNG2 G 1 A_Lower
			goto Deselect
		Select:
			TNT1 A 0 
			{
				A_TakeInventory("MinigunHeat",9999,0,AAPTR_PLAYER1);
				A_TakeInventory("MinigunSlowdownWhenFiring",9999,0,AAPTR_PLAYER1);
				if (CallACS("MiscVarCheckDECORATE",10019) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10019) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			MNG2 A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Select2");
				}
				else
				{
					return state("Select1");
				}
				return state("");
			}
		Select1:
			MNG2 A 1 A_Raise
			goto Select
		Select2:
			MNG2 G 1 A_Raise
			goto Select
		Fire:
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Fire2");
				}
				else
				{
					return state("Fire1");
				}
				return state("");
			}
		Fire1:
			TNT1 A 0
			{
				if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 100)
				{
					if (random(1,256) <= 8){ return state("HyperCooldown"); }
					else if (random(1,256) <= 32) { return state("FastCooldown"); }
					return state("SlowCooldown");
				}
				return state("");
			}
			MNG2 EF 2 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 5) { A_SetTics(1); }
				A_PlaySound("weapons/minigunfire", CHAN_WEAPON);
	
				if (CallACS("MiscVarCheckDECORATE",10019) == 5) { if (random(1,100) <= 66) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } }
				else if (CallACS("MiscVarCheckDECORATE",10019) == 4) { if (random(1,100) <= 72) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
				else if (CallACS("MiscVarCheckDECORATE",10019) == 3) { if (random(1,100) <= 78) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
				else if (CallACS("MiscVarCheckDECORATE",10019) == 2) { if (random(1,100) <= 84) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
				else if (CallACS("MiscVarCheckDECORATE",10019) == 1) { if (random(1,100) <= 90) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
				else { if (random(1,100) <= 96) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } }
				CallACS("CheckMinigunHeat",20);
	
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(6,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",12), CallACS("GetHitScanYSpread",12), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
				A_GiveInventory("MinigunSlowdownWhenFiring");
			}
			MNG2 F 0 A_ReFire("Fire")
			TNT1 A 0
			{
				if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 51 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 100)
				{
					if (random(1,256) <= 8){ return state("HyperCooldown"); }
					else if (random(1,256) <= 32) { return state("FastCooldown"); }
					return state("SlowCooldown");
				}
				else
				if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 21 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 50)
				{
					if (random(1,256) <= 32) { return state("HyperCooldown"); }
					return state("FastCooldown");
				}
				else
				if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 0 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 20)
				{
					return state("HyperCooldown");
				}
				return state("SlowCooldown");
			}
			goto SlowCoolDown
		Fire2:
			TNT1 A 0
			{
				if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 100)
				{
					if (random(1,256) <= 8){ return state("HyperCooldown2"); }
					else if (random(1,256) <= 32) { return state("FastCooldown2"); }
					return state("SlowCooldown2");
				}
				return state("");
			}
			MNG2 KL 2 
			{
				if (CallACS("MiscVarCheckDECORATE",10019) >= 5) { A_SetTics(1); }
				A_PlaySound("weapons/minigunfire", CHAN_WEAPON);
	
				if (CallACS("MiscVarCheckDECORATE",10019) == 5) { if (random(1,100) <= 66) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } }
				else if (CallACS("MiscVarCheckDECORATE",10019) == 4) { if (random(1,100) <= 72) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
				else if (CallACS("MiscVarCheckDECORATE",10019) == 3) { if (random(1,100) <= 78) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
				else if (CallACS("MiscVarCheckDECORATE",10019) == 2) { if (random(1,100) <= 84) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
				else if (CallACS("MiscVarCheckDECORATE",10019) == 1) { if (random(1,100) <= 90) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
				else { if (random(1,100) <= 96) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } }
				CallACS("CheckMinigunHeat",20);
	
				CallACS("StartTensionCountDown");
				A_GetPlayerAttackDamage(6,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",12), CallACS("GetHitScanYSpread",12), 1, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "BulletPuff",FBF_NORANDOM,FBF_USEAMMO|FBF_NORANDOM,0,"",0,0,1,"Clip");
				A_GiveInventory("MinigunSlowdownWhenFiring");
			}
			MNG2 L 0 A_ReFire("Fire")
			TNT1 A 0
			{
				if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 51 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 100)
				{
					if (random(1,256) <= 8){ return state("HyperCooldown2"); }
					else if (random(1,256) <= 32) { return state("FastCooldown2"); }
					return state("SlowCooldown2");
				}
				else
				if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 21 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 50)
				{
					if (random(1,256) <= 32) { return state("HyperCooldown2"); }
					return state("FastCooldown2");
				}
				else
				if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 0 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 20)
				{
					return state("HyperCooldown2");
				}
				return state("SlowCooldown2");
			}
			goto SlowCoolDown2

		SlowCooldown: // Up to 20 Tics
			TNT1 A 0 A_TakeInventory("MinigunSlowdownWhenFiring",9999,0,AAPTR_PLAYER1)
			MNG2 A 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 B 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 C 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }  
			MNG2 D 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 4 tics / 2
			MNG2 A 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 B 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 C 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 D 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			// 8 tics / 4 [12 so far]
			MNG2 A 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 B 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 C 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 D 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			// 12 tics [24 so far]
			MNG2 A 4 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 B 4 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 C 4 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 D 4 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			// 16 tics [40 so far]
			MNG2 A 5 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(3); } CallACS("CheckMinigunHeat",0); }
			MNG2 B 5 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 C 5 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(3); } CallACS("CheckMinigunHeat",0); }
			MNG2 D 5 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			// 20 tics [60 so far]
			goto Ready
		FastCooldown:
			TNT1 A 0 A_TakeInventory("MinigunSlowdownWhenFiring",9999,0,AAPTR_PLAYER1)
			MNG2 A 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 B 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 C 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 D 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 2 tics
			MNG2 A 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 B 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 C 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 D 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			// 4 tics [6 so far]
			MNG2 A 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 B 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 C 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 D 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			// 6 tics [12 so far]
			MNG2 A 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }  
			MNG2 B 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 C 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 D 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			// 8 tics [20 so far]
			MNG2 A 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); } 
			MNG2 B 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 C 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 D 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
		// 10 tics [30 so far]
			goto Ready
		HyperCooldown:
			TNT1 A 0 A_TakeInventory("MinigunSlowdownWhenFiring",9999,0,AAPTR_PLAYER1)
			MNG2 A 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 B 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }  
			MNG2 C 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 D 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 1 tics
			MNG2 A 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 B 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 C 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 D 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 2 tics [3 so far]
			MNG2 A 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 B 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 C 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(random(0,1)); } CallACS("CheckMinigunHeat",0); } 
			MNG2 D 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			// 3 tics [6 so far]
			MNG2 A 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 B 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 C 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 D 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 4 tics [10 so far]
			MNG2 A 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 B 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(random(0,1)); } CallACS("CheckMinigunHeat",0); }
			MNG2 C 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 D 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			// 5 tics [15 so far]
			goto Ready

		SlowCooldown2:
			TNT1 A 0 A_TakeInventory("MinigunSlowdownWhenFiring",9999,0,AAPTR_PLAYER1)
			MNG2 G 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 H 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 I 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }  
			MNG2 J 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 4 tics / 2
			MNG2 G 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 H 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 I 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 J 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			// 8 tics / 4 [12 so far]
			MNG2 G 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 H 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 I 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 J 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			// 12 tics [24 so far]
			MNG2 G 4 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 H 4 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 I 4 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 J 4 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			// 16 tics [40 so far]
			MNG2 G 5 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(3); } CallACS("CheckMinigunHeat",0); }
			MNG2 H 5 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			MNG2 I 5 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(3); } CallACS("CheckMinigunHeat",0); }
			MNG2 J 5 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
			// 20 tics [60 so far]
			goto Ready
		FastCooldown2:
			TNT1 A 0 A_TakeInventory("MinigunSlowdownWhenFiring",9999,0,AAPTR_PLAYER1)
			MNG2 G 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 H 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 I 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 J 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 2 tics
			MNG2 G 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 H 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 I 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 J 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			// 4 tics [6 so far]
			MNG2 G 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 H 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 I 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 J 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			// 6 tics [12 so far]
			MNG2 G 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }  
			MNG2 H 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 I 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 J 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			// 8 tics [20 so far]
			MNG2 G 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); } 
			MNG2 H 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 I 3 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 J 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			// 10 tics [30 so far]
			goto Ready
		HyperCooldown2:
			TNT1 A 0 A_TakeInventory("MinigunSlowdownWhenFiring",9999,0,AAPTR_PLAYER1)
			MNG2 G 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 H 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }  
			MNG2 I 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 J 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 1 tics
			MNG2 G 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 H 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 I 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			MNG2 J 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 2 tics [3 so far]
			MNG2 G 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
			MNG2 H 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 I 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(random(0,1)); } CallACS("CheckMinigunHeat",0); } 
			MNG2 J 0 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			// 3 tics [6 so far]
			MNG2 G 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 H 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 I 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 J 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
			// 4 tics [10 so far]
			MNG2 G 2 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			MNG2 H 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(random(0,1)); } CallACS("CheckMinigunHeat",0); }
			MNG2 I 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
			MNG2 J 1 { if (CallACS("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
			// 5 tics [15 so far]
			goto Ready
	}
}
Actor MinigunChecker : AetheriusCustomInventory
{
	//$Sprite "MNGNA0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,244)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - Minigun")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,244)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,244)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,244)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,253)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,254)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,244)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,251); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("Minigun",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}


Actor RocketLauncher2 : MarineWeapon
{
	Weapon.SelectionOrder 2500
	Weapon.AmmoUse 1
	Weapon.AmmoUse1 1
	Weapon.AmmoUse2 1
	Weapon.AmmoGive 2
	Weapon.AmmoType "RocketAmmo"
	Weapon.AmmoType1 "RocketAmmo"
	Weapon.AmmoType2 "RocketAmmo"
	+WEAPON.NOAUTOFIRE
	Tag "$TAG_ROCKETLAUNCHER"
	Inventory.PickupMessage "Picked up a \carocket launcher\c-! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			LAUN A -1
			Stop
		Ready:
			MISG A 1 A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER4)
			Loop
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			MISG A 1 A_Lower
			Loop
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			MISG A 1 A_Raise
			Loop
		Fire:
			// 20/15/10 Tics
			MISG B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
				A_GunFlash("Flash");
			}
			MISG B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
			}
			MISG B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
				CallACS("StartTensionCountDown");
				if (CountInv("RLMode",AAPTR_PLAYER1) == 0)
				{
					A_SpreadAuraFireProjectileAoE("RocketPlayerSeeking","RocketPlayerSeekingNoAOE",0,1,"RocketAmmo",0,0,0,0);
				}
				else
				if (CountInv("RLMode",AAPTR_PLAYER1) == 1)
				{
					A_SpreadAuraFireProjectileAoE("STGrenade","STGrenadeNoAOE",0,1,"RocketAmmo",0,0,0,-9.4921875);
				}
			}
			MISG B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
			}
			MISG B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
			}
			MISG B 0 A_ReFire
			Goto Ready

		AltFire:
			MISG B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(2); }
				A_GunFlash("AltFlash");
			}
			MISG B 2
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(2); }
				CallACS("StartTensionCountDown");
				if (CountInv("RLMode",AAPTR_PLAYER1) == 0)
				{
					A_SpreadAuraFireProjectileAoE("RocketPlayer","RocketPlayerNoAOE",frandom(-CallACS("GetHitScanXSpread",8),CallACS("GetHitScanXSpread",8)),1,"RocketAmmo",0,0,0,frandom(-CallACS("GetHitScanXSpread",8),CallACS("GetHitScanXSpread",8)));
				}
				else
				if (CountInv("RLMode",AAPTR_PLAYER1) == 1)
				{
					A_SpreadAuraFireProjectileAoE("STGrenade","STGrenadeNoAOE",frandom(-CallACS("GetHitScanXSpread",10),CallACS("GetHitScanXSpread",10)),1,"RocketAmmo",0,0,0,-9.4921875+frandom(-CallACS("GetHitScanXSpread",10),CallACS("GetHitScanXSpread",10)));
				}
			}
			MISG B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(0); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(1); }
			}
			MISG B 0 A_ReFire
			Goto Ready

		User4:
			MISG A 0
			{
				if (CountInv("RLMode",AAPTR_PLAYER1) == 0)
				{
					A_SetInventory("RLMode",1,AAPTR_PLAYER1);
					A_Print("Using Grenades");
					A_PlaySound("GetRockets",0);
				}
				else
				if (CountInv("RLMode",AAPTR_PLAYER1) == 1)
				{
					A_SetInventory("RLMode",0,AAPTR_PLAYER1);
					A_Print("Using Rockets");
					A_PlaySound("GetRockets",0);
				}
			}
			MISG A 8
			goto Ready

		Flash:
			// 15 tics
			MISF A 3 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(2); }
				A_Light1;
			}
			MISF B 4 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
			}
			MISF CD 4 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
				A_Light2;
			}
			Goto LightDone

		AltFlash:
			// 11 tics
			MISF A 1 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(0); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(0); }
				A_Light1;
			}
			MISF B 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(0); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(1); }
			}
			MISF CD 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(1); }
				A_Light2;
			}
			Goto LightDone
	}
}
Actor RocketLauncherChecker : AetheriusCustomInventory replaces RocketLauncher
{
	//$Sprite "LAUNA0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - Rocket Launcher")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,248)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,244)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,248); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("RocketLauncher2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

Actor Railgun2 : MarineWeapon
{
	Radius 20
	Height 16
	Weapon.Selectionorder 100
	Weapon.AmmoUse 0
	Weapon.AmmoGive 40
	Weapon.AmmoType "Cell"
	Weapon.KickBack 0
	Inventory.Pickupmessage "You got the railgun! \cx[Slot 6]\c-"
	Obituary "%o was railed by %k."
	Decal RailScorch
	Tag "Railgun"
	States
	{
		Ready:
			RLGG A 0 
			{
				if (CountInv("RailgunCharge") >= 100) { A_PlaySound("Railgun/IdlePulse",0,1.0); }
				else if (CountInv("RailgunCharge") >= 95) { A_PlaySound("Railgun/IdlePulse",0,0.95); }
				else if (CountInv("RailgunCharge") >= 90) { A_PlaySound("Railgun/IdlePulse",0,0.90); }
				else if (CountInv("RailgunCharge") >= 85) { A_PlaySound("Railgun/IdlePulse",0,0.85); }
				else if (CountInv("RailgunCharge") >= 80) { A_PlaySound("Railgun/IdlePulse",0,0.80); }
				else if (CountInv("RailgunCharge") >= 75) { A_PlaySound("Railgun/IdlePulse",0,0.75); }
				else if (CountInv("RailgunCharge") >= 70) { A_PlaySound("Railgun/IdlePulse",0,0.70); }
				else if (CountInv("RailgunCharge") >= 65) { A_PlaySound("Railgun/IdlePulse",0,0.65); }
				else if (CountInv("RailgunCharge") >= 60) { A_PlaySound("Railgun/IdlePulse",0,0.60); }
				else if (CountInv("RailgunCharge") >= 55) { A_PlaySound("Railgun/IdlePulse",0,0.55); }
				else if (CountInv("RailgunCharge") >= 50) { A_PlaySound("Railgun/IdlePulse",0,0.50); }
				else if (CountInv("RailgunCharge") >= 45) { A_PlaySound("Railgun/IdlePulse",0,0.45); }
				else if (CountInv("RailgunCharge") >= 40) { A_PlaySound("Railgun/IdlePulse",0,0.40); }
				else if (CountInv("RailgunCharge") >= 35) { A_PlaySound("Railgun/IdlePulse",0,0.35); }
				else if (CountInv("RailgunCharge") >= 30) { A_PlaySound("Railgun/IdlePulse",0,0.30); }
				else if (CountInv("RailgunCharge") >= 25) { A_PlaySound("Railgun/IdlePulse",0,0.25); }
				else if (CountInv("RailgunCharge") >= 20) { A_PlaySound("Railgun/IdlePulse",0,0.20); }
				else if (CountInv("RailgunCharge") >= 15) { A_PlaySound("Railgun/IdlePulse",0,0.15); }
				else if (CountInv("RailgunCharge") >= 10) { A_PlaySound("Railgun/IdlePulse",0,0.10); }
				else if (CountInv("RailgunCharge") >= 5) { A_PlaySound("Railgun/IdlePulse",0,0.05); }
			}
			RLGG AAAAAAAAAAAAAAAA 1 
			{
				if (CountInv("RailgunCharge") < 4 && CountInv("Cell") >= 5)
				{
					A_PlaySound("baby/chargerailgun");
					A_GiveInventory("RailgunCharge",5);
					A_TakeInventory("Cell",5,TIF_NOTAKEINFINITE);
					if (CountInv("RailgunCharge") >= 100) { A_SetInventory("RailgunCharge",100); }
				}
				A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER4);
			}
			Loop
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Lower; }
				A_ZoomFactor(1.0,ZOOM_INSTANT);
			}
			TNT1 A 0 A_Lower
			RLGG A 1 A_Lower
			Loop
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Raise; }

				if (CountInv("RailgunZoom") == 1) { A_ZoomFactor(2.0); A_Print("2x Zoom"); }
				else if (CountInv("RailgunZoom") == 2) { A_ZoomFactor(4.0); A_Print("4x Zoom"); }
				else if (CountInv("RailgunZoom") == 3) { A_ZoomFactor(8.0); A_Print("8x Zoom"); }
				else if (CountInv("RailgunZoom") == 4) { A_ZoomFactor(1.0); A_SetInventory("RailgunZoom",0); A_Print("No Zoom"); }
			}
			TNT1 A 0 A_Raise
			RLGG A 1 A_Raise
			Loop

		AltFire:
			RLGG A 0
			{
				if (CountInv("Cell") < 5)
				{
					A_PlaySound("inv_fail");
					return state("NoCharge");
				}
				else
				{
					if (CountInv("RailgunCharge") >= 100)
					{
						A_PlaySound("inv_fail");
						return state("NoCharge");
					}
					else
					{
						A_PlaySound("baby/chargerailgun");
						A_GiveInventory("RailgunCharge",5);
						A_TakeInventory("Cell",5,TIF_NOTAKEINFINITE);
						if (CountInv("RailgunCharge") >= 100) { A_SetInventory("RailgunCharge",100); }
					}
					return state("");
				}
				return state("");
			}
			RLGG A 12
			{
				A_SetTics(random(12,13));
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(random(9,10)); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(random(9,11)); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(random(10,11)); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(random(10,12)); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(random(11,12)); }
			}
			goto Ready

		Fire:
			RLGG E 0	
			{
				if (CountInv("RailgunCharge") < 5 && CountInv("Cell") < 5)
				{
					A_PlaySound("inv_fail");
					return state("NoCharge");
				}
				else
				{
					if (CountInv("RailgunCharge") <= 0)
					{
						A_PlaySound("inv_fail");
						return state("NoCharge");
					}
					return state("");
				}
				return state("");
			}
			RLGG E 12 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(7); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(9); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(10); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(11); }
	
				A_GunFlash("Flash");
				if (CountInv("RailgunCharge") >= 25) { A_PlaySound("weapons/railgf",5); }
				if (CountInv("RailgunCharge") >= 50) { A_PlaySound("weapons/railgf",6); }
				if (CountInv("RailgunCharge") >= 75) { A_PlaySound("weapons/railgf",7); }
				if (CountInv("RailgunCharge") >= 100) { A_PlaySound("weapons/railgf",8); }
				A_GetPlayerAttackDamage(58,0);
				A_SpreadAuraRailAttack((CountInv("FinalDamageDealt",AAPTR_PLAYER1)),0,0,"",6165ff,0005e0,0,0,"DBTRailPuff",0.0,0.0,8192,CallACS("GetRailgunPDuration"),CallACS("GetRailgunSparsity",29,6),CallACS("GetRailgunDriftSpeed"));
				A_SetInventory("RailgunCharge",0);
			}
			RLGG FGHIJKL 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(3); }
			}
			RLGG A 0
			{
				if (CountInv("Cell") >= 5)
				{
					if (CountInv("RailgunCharge") >= 100)
					{
						return state("NoCharge");
					}
					else
					{
						A_PlaySound("baby/chargerailgun");
						A_GiveInventory("RailgunCharge",5);
						A_TakeInventory("Cell",5,TIF_NOTAKEINFINITE);
						if (CountInv("RailgunCharge") >= 100) { A_SetInventory("RailgunCharge",100); }
						A_SetTics(random(12,13));
						if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(random(9,10)); }
						if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(random(9,11)); }
						if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(random(10,11)); }
						if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(random(10,12)); }
						if (CallACS("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(random(11,12)); }
					}
					return state("");
				}
				return state("");
			}
			RLGG A 0 A_ReFire
			Goto Ready
		NoCharge:
			RLGG A 12
			{
				A_SetTics(random(12,13));
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(random(9,10)); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(random(9,11)); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(random(10,11)); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(random(10,12)); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(random(11,12)); }
			}
			goto Ready
		Flash:
			TNT1 A 5 bright A_Light1
			TNT1 A 5 bright A_Light2
			TNT1 A 0 bright A_Light0
			Goto LightDone
		
		// Zoom :V
		User4:
			RLGG A 5
			{
				A_GiveInventory("RailgunZoom",1);
				if (CountInv("RailgunZoom") == 1) { A_ZoomFactor(2.0); A_Print("2x Zoom"); }
				else if (CountInv("RailgunZoom") == 2) { A_ZoomFactor(4.0); A_Print("4x Zoom"); }
				else if (CountInv("RailgunZoom") == 3) { A_ZoomFactor(8.0); A_Print("8x Zoom"); }
				else if (CountInv("RailgunZoom") == 4) { A_ZoomFactor(1.0); A_SetInventory("RailgunZoom",0); A_Print("No Zoom"); }
			}
			goto Ready

		Spawn:
			RAIL A -1
			Stop
	}
}
Actor RailgunChecker : AetheriusCustomInventory // replaces Railgun
{
	//$Sprite "RAILA0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - Rocket Launcher")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,248)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,244)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,248); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("Railgun2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

Actor PlasmaRifle2 : MarineWeapon
{
	Weapon.SelectionOrder 100
	Weapon.AmmoUse 1
	Weapon.AmmoUse1 1
	Weapon.AmmoUse2 1
	Weapon.AmmoGive 40
	Weapon.AmmoType "Cell"
	Weapon.AmmoType1 "Cell"
	Weapon.AmmoType2 "Cell"
	Tag "$TAG_PLASMARIFLE"
	Inventory.PickupMessage "Picked up a \cvplasma rifle\c-! \cx[Slot 6]\c-"
	States
	{
		Spawn:
			PLAS A -1
			Stop
		Ready:
			PLSG A 0
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Ready2");
				}
				else
				{
					return state("Ready1");
				}
				return state("");
			}
		Ready1:
			PLSG A 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Ready2:
			PLSG C 1 A_WeaponReady(WRF_ALLOWUSER1)
			goto Ready
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Deselect2");
				}
				else
				{
					return state("Deselect1");
				}
				return state("");
			}
		Deselect1:
			PLSG A 1 A_Lower
			goto Deselect
		Deselect2:
			PLSG C 1 A_Lower
			goto Deselect
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Select2");
				}
				else
				{
					return state("Select1");
				}
				return state("");
			}
		Select1:
			PLSG A 1 A_Raise
			goto Select
		Select2:
			PLSG C 1 A_Raise
			goto Select
		Fire:
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("PlasmaBallPlayer",0,1,"Cell",0,0,0,0);
			}
			TNT1 A 0 { CallACS("CheckWeaponFlash",2,1); }
			TNT1 A 0 A_JumpIf(CallACS("CheckWeaponFlash",2,0) == 1,"Flash1")
			TNT1 A 0 A_JumpIf(CallACS("CheckWeaponFlash",2,0) == 0,"Flash2")
		AltFire:
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				for (A_SetInventory("PlasmaBurstLevel",0,AAPTR_PLAYER1); CountInv("PlasmaBurstLevel",AAPTR_PLAYER1) < random(3,5); A_GiveInventory("PlasmaBurstLevel",1,AAPTR_PLAYER1))
				{
					A_SpreadAuraFireProjectile("PlasmaBallPlayer",frandom(-CallACS("GetHitScanXSpread",9),CallACS("GetHitScanXSpread",9)),1,"Cell",0,0,0,frandom(-CallACS("GetHitScanXSpread",9),CallACS("GetHitScanXSpread",9)));
				}
			}
			TNT1 A 0 { CallACS("CheckWeaponFlash",2,1); }
			TNT1 A 0 A_JumpIf(CallACS("CheckWeaponFlash",2,0) == 1,"Flash1")
			TNT1 A 0 A_JumpIf(CallACS("CheckWeaponFlash",2,0) == 0,"Flash2")
		Flash1:
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Flash1b");
				}
				else
				{
					return state("Flash1a");
				}
				return state("");
			}
			goto Flash1a
		Flash2:
			TNT1 A 0 
			{
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("Flash2b");
				}
				else
				{
					return state("Flash2a");
				}
				return state("");
			}
			goto Flash2a

		Flash1a:
			PLSG A 3
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(2); }
				A_GunFlash("FlashOne");
			}
			PLSG B 12
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(7); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(10); }
				A_ReFire;
			}
			Goto Ready
		Flash2a:
			PLSG A 3
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(2); }
				A_GunFlash("FlashTwo");
			}
			PLSG B 12
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(7); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(10); }
				A_ReFire;
			}
			Goto Ready
		Flash1b:
			PLSG A 3
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(2); }
				A_GunFlash("FlashOne2");
			}
			PLSG D 12
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(7); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(10); }
				A_ReFire;
			}
			Goto Ready
		Flash2b:
			PLSG A 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(2); }
				A_GunFlash("FlashTwo2");
			}
			PLSG D 12
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(7); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(10); }
				A_ReFire;
			}
			Goto Ready

		FlashOne:
			PLSF A 4 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(3); }
				A_Light1;
			}
			Goto LightDone
		FlashTwo:
			PLSF B 4 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(3); }
				A_Light1;
			}
			Goto LightDone
		FlashOne2:
			PLSF C 4 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(3); }
				A_Light1;
			}
			Goto LightDone
		FlashTwo2:
			PLSF D 4 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(3); }
				A_Light1;
			}
			Goto LightDone
	}
}
Actor PlasmaRifleChecker : AetheriusCustomInventory replaces PlasmaRifle
{
	//$Sprite "PLASA0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - Plasma Rifle")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,244)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,232)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,244); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("PlasmaRifle2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

Actor Repeater2 : MarineWeapon 27034
{
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You got a \cvplasma repeater\c-! \cx[Slot 6]\c-"
	Obituary "%o was disintegrated by %k's repeater."
	Weapon.AmmoType1 "Cell"
	Weapon.AmmoGive 8
	Weapon.AmmoUse 2
	+Weapon.Explosive
	+Weapon.NoAlert
	Tag "Plasma Repeater"
	States
	{
		Spawn:
			REPG I -1
			Loop
		Ready:
			REPG A 0 A_TakeInventory("RepeaterSpin", 3)
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			REPG A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect:
			REPG A 0 A_TakeInventory("RepeaterSpin", 3)
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Lower; }
			}
			REPG A 0 A_Lower
			REPG A 1 A_Lower
			Loop
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Raise; }
			}
			REPG A 0 A_Raise
			REPG A 1 A_Raise
			Loop
		Fire:
			//===========Spinup
			REPG A 0 A_PlaySound("Weapons/RepeaterSpinup")
			REPG A 0 A_JumpIfInventory("RepeaterSpin", 1, 8)
			REPG A 0 A_JumpIfInventory("RepeaterB", 1, 4)
			REPG A 0 A_JumpIfInventory("RepeaterC", 1, 4)
			REPG A 0 A_JumpIfInventory("RepeaterD", 1, 4)
			REPG ABCD 4
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(2); }
			}
			REPG A 0 A_GiveInventory("RepeaterFrameA")
			REPG A 0 A_JumpIfInventory("RepeaterSpin", 2, 9)
			REPG A 0 A_GiveInventory("RepeaterSpin", 1)
			REPG A 0 A_JumpIfInventory("RepeaterB", 1, 4)
			REPG A 0 A_JumpIfInventory("RepeaterC", 1, 4)
			REPG A 0 A_JumpIfInventory("RepeaterD", 1, 4)
			REPG ABCD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
			}
			REPG D 0 A_GiveInventory("RepeaterFrameA")
			REPG A 0 A_JumpIfInventory("RepeaterB", 1, 4)
			REPG A 0 A_JumpIfInventory("RepeaterC", 1, 4)
			REPG A 0 A_JumpIfInventory("RepeaterD", 1, 4)
			REPG ABCD 2
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
			}
			REPG D 0 A_GiveInventory("RepeaterFrameA")
			//===========Fire
			REPG A 0 A_Refire
			//===========Spindown
			REPG A 0 A_PlaySound("Weapons/RepeaterSpindown")
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			REPG AA 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
			REPG BB 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
			REPG CC 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
			REPG DD 1 A_WeaponReady(11)
			REPG A 0 A_TakeInventory("RepeaterSpin", 1)
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			REPG AAA 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
			REPG BBB 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
			REPG CCC 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
			REPG DDD 1 A_WeaponReady(11)
			REPG A 0 A_TakeInventory("RepeaterSpin", 1)
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			REPG AAAA 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
			REPG BBBB 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
			REPG CCCC 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
			REPG DDDD 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			REPG AAAA 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
			REPG BBBB 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
			REPG CCCC 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
			REPG DDDD 1 A_WeaponReady(11)
			Goto Ready
		Hold:
			//===========Fire
			REPG E 0 Bright 
			{
				A_Gunflash;
				A_AlertMonsters;
				CallACS("StartTensionCountDown");
				A_PlaySound("Weapons/RepeaterFire", CHAN_WEAPON);
				A_GetPlayerAttackDamage(7,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",5), CallACS("GetHitScanYSpread",5), 2, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)),"RepeaterPuffPlayer",FBF_NORANDOM,FBF_NORANDOM,10240,"",0,0,2,"Cell");
			}
			REPG E 2
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
			}
			REPG F 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
			}
			REPG G 0 Bright 
			{
				A_AlertMonsters;
				CallACS("StartTensionCountDown");
				A_PlaySound("Weapons/RepeaterFire", CHAN_WEAPON);
				A_GetPlayerAttackDamage(7,1);
				A_SpreadAuraFireBullets(CallACS("GetHitScanXSpread",5), CallACS("GetHitScanYSpread",5), 2, (CountInv("FinalDamageDealt",AAPTR_PLAYER1)), "RepeaterPuffPlayer",FBF_NORANDOM,FBF_NORANDOM,10240,"",0,0,2,"Cell");
			}
			REPG H 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
			}
			REPG A 0 A_Refire
			//===========Spindown
			REPG A 0 A_PlaySound("Weapons/RepeaterSpindown")
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			REPG AA 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
			REPG BB 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
			REPG CC 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
			REPG DD 1 A_WeaponReady(11)
			REPG A 0 A_TakeInventory("RepeaterSpin", 1)
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			REPG AAA 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
			REPG BBB 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
			REPG CCC 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
			REPG DDD 1 A_WeaponReady(11)
			REPG A 0 A_TakeInventory("RepeaterSpin", 1)
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			REPG AAAA 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
			REPG BBBB 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
			REPG CCCC 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
			REPG DDDD 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
			REPG AAAA 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
			REPG BBBB 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
			REPG CCCC 1 A_WeaponReady(11)
			REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
			REPG DDDD 1 A_WeaponReady(11)
			Goto Ready
		Flash:
			TNT1 A 2 A_Light2
			TNT1 A 2 A_Light1
			TNT1 A 0 A_Light0
			Stop
	}
}
Actor RepeaterChecker : AetheriusCustomInventory
{
	//$Sprite "REPGA0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - Repeater")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,244)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,224)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,244); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("Repeater2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

Actor RepeaterSpin : Inventory { Inventory.MaxAmount 2 }
Actor RepeaterB : Inventory { Inventory.MaxAmount 1 }
Actor RepeaterC : Inventory { Inventory.MaxAmount 1 }
Actor RepeaterD : Inventory { Inventory.MaxAmount 1 }

Actor RepeaterFrameA : AetheriusCustomInventory
{
	Inventory.MaxAmount 0
	+Inventory.AutoActivate
	States
	{
		Spawn:
			TNT1 A 1
			Stop
		Use:
			TNT1 A 0 A_TakeInventory("RepeaterB", 1)
			TNT1 A 0 A_TakeInventory("RepeaterC", 1)
			TNT1 A 0 A_TakeInventory("RepeaterD", 1)
			Stop
	}
}

Actor RepeaterFrameB : RepeaterFrameA
{
	States
	{
		Spawn:
			TNT1 A 1
			Stop
		Use:
			TNT1 A 0 A_GiveInventory("RepeaterB", 1)
			TNT1 A 0 A_TakeInventory("RepeaterC", 1)
			TNT1 A 0 A_TakeInventory("RepeaterD", 1)
			Stop
	}
}

Actor RepeaterFrameC : RepeaterFrameA
{
	States
	{
		Spawn:
			TNT1 A 1
			Stop
		Use:
			TNT1 A 0 A_TakeInventory("RepeaterB", 1)
			TNT1 A 0 A_GiveInventory("RepeaterC", 1)
			TNT1 A 0 A_TakeInventory("RepeaterD", 1)
			Stop
	}
}

Actor RepeaterFrameD : RepeaterFrameA
{
	States
	{
		Spawn:
			TNT1 A 1
			Stop
		Use:
			TNT1 A 0 A_TakeInventory("RepeaterB", 1)
			TNT1 A 0 A_TakeInventory("RepeaterC", 1)
			TNT1 A 0 A_GiveInventory("RepeaterD", 1)
			Stop
	}
}

Actor RepeaterPuff : AetheriusProjectileZSC
{
	Radius 3
	Height 3
	RenderStyle Add
	Alpha 0.75
	+AlwaysPuff
	+PuffOnActors
	+NoGravity
	+NoBlockMap
	+PuffGetsOwner
	+ForceRadiusDmg
	+BloodlessImpact
	-BloodSplatter
	Decal MummyScorch
	States
	{
		Spawn:
			RPUF A 1 Bright
			RPUF A 0 Bright A_PlaySound("Weapons/RepeaterHit")
			RPUF A 2 Bright A_Explode(7, 44, 0)
			RPUF BCDEFG 3 Bright
			Stop
	}
}

Actor RepeaterPuffPlayer : RepeaterPuff
{
	Radius 3
	Height 3
	RenderStyle Add
	Alpha 0.75
	+AlwaysPuff
	+PuffOnActors
	+NoGravity
	+NoBlockMap
	+PuffGetsOwner
	+ForceRadiusDmg
	+BloodlessImpact
	-BloodSplatter
	Decal MummyScorch
	States
	{
		Spawn:
			RPUF A 1 Bright
			RPUF A 0 Bright 
			{
				A_GetPlayerAttackDamage(10,0);
				A_PlaySound("Weapons/RepeaterHit");
			}
			RPUF A 2 Bright A_Explode((finaldamagedealt), 44, 0)
			RPUF BCDEFG 3 Bright
			Stop
	}
}

Actor RepeaterPuffCrisis : RepeaterPuff
{
	scale 1.25
	States
	{
		Spawn:
			RPUF A 1 Bright
			RPUF A 0 Bright A_PlaySound("Weapons/RepeaterHit")
			RPUF A 2 Bright A_Explode(210, 44, 0)
			RPUF BCDEFG 3 Bright
			Stop
	}
}


Actor KaraSawa2 : MarineWeapon 27035
{
	Inventory.PickupSound "Misc/W_PkUp"
	Inventory.PickupMessage "You got a \cv'Karasawa' High-Density Plasma Cannon\c-! \cx[Slot 6]\c-"
	Obituary "%o was fried by %k's Karasawa!"
	Tag "'Karasawa' High-Density Plasma Cannon"
	Weapon.AmmoType "Cell"
	Weapon.AmmoGive 32
	Weapon.AmmoUse 8 // changed due to attunement perk
	Weapon.KickBack 0
	states
	{
		Spawn:
			KSWP A -1
			loop
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Lower; }
			}
			KSAW C 0 A_Lower
			KSAW C 1 A_Lower
			loop
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Raise; }
			}
			KSAW C 0 A_Raise
			KSAW C 1 A_Raise
			loop
		Ready:
			KSAW A 0 A_PlaySound("Weapons/KarasawaIdle")
			KSAW ABCB 4 A_WeaponReady(WRF_ALLOWUSER1)
			loop
		Fire:
			TNT1 A 0
			{
				if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10027) >= 2) { return state("FireSuccess2"); }
					else if (CallACS("MiscVarCheckDECORATE",10027) == 1) { return state("FireSuccess1"); }
					else { return state("FireSuccess0"); }
					return state("");
				}
				else
				{
					if (CallACS("MiscVarCheckDECORATE",10027) >= 2)
					{
						if (CountInv("Cell",AAPTR_PLAYER1) >= 8) { return state("FireSuccess2"); } else { return state("DeSelect"); }
						return state("");
					}
					else
					if (CallACS("MiscVarCheckDECORATE",10027) == 1)
					{
						if (CountInv("Cell",AAPTR_PLAYER1) >= 12) { return state("FireSuccess1"); } else { return state("DeSelect"); }
						return state("");
					}
					else
					{
						if (CountInv("Cell",AAPTR_PLAYER1) >= 16) { return state("FireSuccess0"); } else { return state("DeSelect"); }
						return state("");
					}
					return state("");
				}
			}
		FireSuccess0:
			// 38 Tics
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				A_PlayWeaponSound("Weapons/KarasawaFire");
				A_SpreadAuraFireProjectile("KsawBoltPlayer",0,0,"",0,0,0,0);
			}
			KSAW D 1 Bright { if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",16,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } }
			KSAW E 1
			KSAW FGH 2 Bright A_Light2
			KSAW I 0 A_PlaySound("Weapons/KarasawaCharge",7,1)
			KSAW IA 4 A_Light1
			KSAW JKLMN 4
			KSAW A 0 A_Light0
			KSAW N 6
			Goto Ready
		FireSuccess1:
			// 30 Tics [-8]
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				A_PlayWeaponSound("Weapons/KarasawaFire");
				A_SpreadAuraFireProjectile("KsawBoltPlayer",0,0,"",0,0,0,0);
			}
			KSAW D 1 Bright { if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",12,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } }
			KSAW E 1
			KSAW FGH 2 Bright A_Light2
			KSAW I 0 A_PlaySound("Weapons/KarasawaCharge",7,1)
			KSAW IA 3 A_Light1
			KSAW JKLMN 3
			KSAW A 0 A_Light0
			KSAW N 5
			Goto Ready
		FireSuccess2:
			// 22 Tics [-16]
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				A_PlayWeaponSound("Weapons/KarasawaFire");
				A_SpreadAuraFireProjectile("KsawBoltPlayer",0,0,"",0,0,0,0);
			}
			KSAW D 1 Bright { if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",8,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } }
			KSAW E 1
			KSAW FGH 2 Bright A_Light2
			KSAW I 0 A_PlaySound("Weapons/KarasawaCharge",7,1)
			KSAW IA 2 A_Light1
			KSAW JKLMN 2
			KSAW A 0 A_Light0
			KSAW N 4
			Goto Ready
	}
}
Actor KaraSawaChecker : AetheriusCustomInventory
{
	//$Sprite "KSWPA0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - Karasawa")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,244)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,216)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,244); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("KaraSawa2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

Actor KsawBolt : AetheriusProjectileZSC
{
	Projectile
	+Ripper
	+BloodSplatter
	+StrifeDamage
	+HexenBounce
	+CanBounceWater
	+SkyExplode
	BounceType "Hexen"
	BounceFactor 0.975
	WallBounceFactor 0.975
	Radius 6
	Height 4
	Speed 16 // 80
	Damage 15
	Alpha 1.0
	XScale 1.5
	YScale 0.4
	RenderStyle Add
	Reactiontime 280
	BounceSound "Weapons/KarasawaHit"
	SeeSound ""
	DeathSound "Weapons/KarasawaHit"
	States
	{
		Spawn:
			KWBB A 0 Bright A_PlaySound("KsawBoltFly")
			KWBB ABCD 1 Bright 
			{
				A_SpawnItemEx("BoltBlur", 0, 0, 0, 1, 0, 0, 180, 128);
				A_CountDown;
			}
			KWBB A 0 Bright 
			goto Spawn+1
		Death:
			KWBD ABCDEF 2 Bright
			Stop
	}
}

Actor KsawBoltPlayer : KsawBolt
{
	var float user_seekRate;
	Damage (finaldamagedealt)
	States
	{
		Spawn:
			KWBB A 0 Bright NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",10027) >= 2)
				{
					//A_PrintBold("Sawa Attunement 2");
					A_ScaleVelocity(0.625);
					A_SetScale(1.3);
					reactiontime = 420;
					user_seekRate = 4;
				}
				else
				if (CallACS("MiscVarCheckDECORATE",10027) == 1)
				{
					//A_PrintBold("Sawa Attunement 1");
					A_ScaleVelocity(0.8125);
					A_SetScale(1.115);
					reactiontime = 350;
					user_seekRate = 2;
				}
				else
				{
					A_ScaleVelocity(1);
					A_SetScale(1);
					reactiontime = 420;
					user_seekRate = 0.0125;
				}
				A_PlaySound("KsawBoltFly");
			}
			KWBB ABCD 1 Bright 
			{
				A_GetPlayerAttackDamage(16,0);
				A_SpawnItemEx("BoltBlur", 0, 0, 0, 1, 0, 0, 180, 128);
				if (user_seekRate > 0.0)
				{
					if (random(1, 8) == 1)
					{
						// Randomly forget the tracer (the actor being sought) and seek another one, for maximum chaos.
						A_RearrangePointers(AAPTR_DEFAULT, AAPTR_DEFAULT, AAPTR_NULL);
					}
					A_NFSeekerMissile(0, user_seekRate, SMF_LOOK|SMF_PRECISE|SMF_CURSPEED);
				}
				A_CountDown;
			}
			goto Spawn+1
		Death:
			KWBD ABCDEF 2 Bright
			Stop
	}
}

Actor KsawBoltCrisis : KsawBolt
{
	Damage (18*random(1,8) * CallACS("CrisisMultiplier"))

	States
	{
		Spawn:
			KWBB A 0 Bright A_PlaySound("KsawBoltFly")
			KWBB ABCD 1 Bright 
			{
				A_SpawnItemEx("BoltBlurCrisis", 0, 0, 0, 1, 0, 0, 180, 128);
				A_CountDown;
			}
			goto Spawn+1
		Death:
			KWBD ABCDEF 2 Bright
			Stop
	}
}

Actor BoltBlur
{
	Height 2
	Radius 6
	Damage 0
	Speed 0.2
	RenderStyle Add
	Alpha 0.9
	XScale 1.3
	YScale 0.3
	+NoGravity
	+DropOff
	+NoTeleport
	states
	{
		Spawn:
			KWBR AB 2 Bright A_FadeOut(0.3)
			Loop
	}
}
Actor BoltBlurCrisis
{
	Height 2
	Radius 6
	Damage 0
	Speed 0.2
	RenderStyle Add
	Alpha 0.9
	XScale 1.3
	YScale 0.3
	+NoGravity
	+DropOff
	+NoTeleport
	states
	{
		Spawn:
			KWBR A 0 NoDelay A_SpawnItemEx("KsawBoltCrisisParticle",0,0,0,0,0,1.28)
		Active:
			KWBR A 2 Bright A_FadeOut(0.3)
			KWBR B 2 Bright A_FadeOut(0.3)
			Loop
	}
}

Actor BFG90002 : MarineWeapon
{ 
	Height 20
	Weapon.Kickback 100
	Weapon.SelectionOrder 2800
	Weapon.AmmoUse 40
	Weapon.AmmoGive 40
	Weapon.AmmoType "Cell"
	+WEAPON.NOAUTOFIRE
	Tag "$TAG_BFG9000"
	Weapon.AmmoType1 "Cell"
	Weapon.AmmoType2 "Cell"
	Weapon.AmmoUse1 24 // 40
	Weapon.AmmoUse2 24
	Inventory.PickupMessage "Picked up a \cvBFG9000\c-! \cx[Slot 7]\c-"
	States
	{
		Spawn:
			BFUG A -1
			Stop
		Ready:
			BFGG A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			BFGG A 1 A_Lower
			Loop
		Select:
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10023) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10023) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			BFGG A 1 A_Raise
			Loop

		Fire:
			TNT1 A 0
			{
				if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { return state("FireSuccess"); }
					else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { return state("FireSuccess"); }
					else { return state("FireSuccess"); }
					return state("");
				}
				else
				{
					if (CallACS("MiscVarCheckDECORATE",10029) >= 2)
					{
						if (CountInv("Cell",AAPTR_PLAYER1) >= 24) { return state("FireSuccess"); } else { return state("DeSelect"); }
						return state("");
					}
					else
					if (CallACS("MiscVarCheckDECORATE",10029) == 1)
					{
						if (CountInv("Cell",AAPTR_PLAYER1) >= 32) { return state("FireSuccess"); } else { return state("DeSelect"); }
						return state("");
					}
					else
					{
						if (CountInv("Cell",AAPTR_PLAYER1) >= 40) { return state("FireSuccess"); } else { return state("DeSelect"); }
						return state("");
					}
					return state("");
				}
			}
		FireSuccess:
			// 60/50/40 tics
			BFGG A 20 
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(14); }
				else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(17); }
				A_BFGSound;
			}
			BFGG B 10 
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(6); }
				else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(8); }
				A_GunFlash("Flash");
			}
			TNT1 A 0
			{
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("BFGBallPlayer",0,0,"",0,0,0,0);
			}
			BFGG B 10 
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) 
				{
					A_SetTics(6); 
					if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",24,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
				}
				else 
				if (CallACS("MiscVarCheckDECORATE",10029) == 1) 
				{
					A_SetTics(8); 
					if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",32,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
				}
				else
				{
					if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",40,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
				}
			}
			BFGG B 20 
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(14); }
				else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(17); }
				A_ReFire;
			}
			Goto Ready

		Flash:
			// 17/14/11 tics
			BFGF A 11 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(7); }
				else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(9); }
				A_Light1;
			}
			BFGF B 6 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(4); }
				else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(5); }
				A_Light2;
			}
			Goto LightDone

		AltFlash:
			// 49/40/41 tics
			BFGF A 32 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(20); }
				else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(26); }
				A_Light1;
			}
			BFGF B 17 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(11); }
				else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(14); }
				A_Light2;
			}
			Goto LightDone

		AltFire:
			TNT1 A 0
			{
				if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { return state("AltFireSuccess"); }
					else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { return state("AltFireSuccess"); }
					else { return state("AltFireSuccess"); }
					return state("");
				}
				else
				{
					if (CallACS("MiscVarCheckDECORATE",10029) >= 2)
					{
						if (CountInv("Cell",AAPTR_PLAYER1) >= 24) { return state("AltFireSuccess"); } else { return state("DeSelect"); }
						return state("");
					}
					else
					if (CallACS("MiscVarCheckDECORATE",10029) == 1)
					{
						if (CountInv("Cell",AAPTR_PLAYER1) >= 32) { return state("AltFireSuccess"); } else { return state("DeSelect"); }
						return state("");
					}
					else
					{
						if (CountInv("Cell",AAPTR_PLAYER1) >= 40) { return state("AltFireSuccess"); } else { return state("DeSelect"); }
						return state("");
					}
					return state("");
				}
			}
		AltFireSuccess:
			// 43/35/27 tics [2 firing]
			TNT1 A 0 A_JumpIf(CallACS("CheckBFG2704") == 0,"Ready")
			BFGG A 14 
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(8); }
				else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(11); }
				A_BFGSound;
			}
			BFGG B 7 
			{
				A_GunFlash("AltFlash");
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) 
				{
					A_SetTics(4); 
					A_GiveInventory("BFG2704Array",28,AAPTR_PLAYER1);
					if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",24,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
				}
				else 
				if (CallACS("MiscVarCheckDECORATE",10029) == 1) 
				{
					A_SetTics(5); 
					A_GiveInventory("BFG2704Array",24,AAPTR_PLAYER1);
					if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",32,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
				}
				else
				{
					A_GiveInventory("BFG2704Array",20,AAPTR_PLAYER1);
					if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",40,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
				}
			}
			TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
		AltFireNormal:
			BFGG B 0 A_TakeInventory("BFG2704Array",1,0,AAPTR_PLAYER1)
			BFGG B 1
			{
				A_SpreadAuraFireProjectile("PlasmaBall1Player",frandom(-10,10),0,"",0,0,0,frandom(-10,10));
			}
			BFGG B 1
			{
				A_SpreadAuraFireProjectile("PlasmaBall2Player",frandom(-10,10),0,"",0,0,0,frandom(-10,10));
			}
			BFGG B 0 A_JumpIfInventory("BFG2704Array", 1, "AltFireNormal")
			goto AltFireEnd
		AltFireEnd:
			BFGG B 0 A_Light0
			BFGG B 20 
			{
				if (CallACS("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(14); }
				else if (CallACS("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(17); }
				A_ReFire;
			}
			Goto Ready
	}
}
Actor BFG9000Checker : AetheriusCustomInventory replaces BFG9000
{
	//$Sprite "BFUGA0"
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,36)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,208)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)

			TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
			//TNT1 A 0 A_PrintBold("Not Dropped - BFG9000")
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,36)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,208)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)

			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,36)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,208)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)

			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,12)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,24)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,36)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,48)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,64)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,68)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,72)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,192)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,208)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,224)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("HealthBonus",frandom(-12.0,12.0),frandom(-12.0,12.0),0,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,240)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,252)

			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,232)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,236)
			TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,236)
			TNT1 A 0 A_SpawnItemEx("Backpack",frandom(-3.0,3.0),frandom(-3.0,3.0),0,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,192)

		FloraDetectedEnd:
			TNT1 A 0 
			TNT1 A 0 { if (GetCVar("dvds_floralongbowcandrop") > 0) { A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,224); } }
			TNT1 A 0 { if (random(1,256) == 1 && GetCVar("dvds_florawandscandrop") > 0) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			TNT1 A 0 A_SpawnItemEx("BFG90002",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop
	}
}

Actor ClipNew : Clip // replaces Clip
{
	Inventory.Pickupsound "getbulletclip"
	Inventory.PickupMessage "Picked up \cua clip of bullets\c-!"
	Inventory.Amount 10
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0
			{
				if (random(1,256) <= 3)
				{
					A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0);
				}
				if (random(1,256) <= 128)
				{
					A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0);
				}
				A_FadeOut(1.0);
			}
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			CLIP A 2 A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			loop
	}
}

actor ClipSpawner replaces Clip
{
	//$Sprite "CLIPA0"
	Radius 16
	Height 16
	Scale 1
	RenderStyle None
	Alpha 0
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (Random(1,1000) <= 1000) { A_SpawnItemEx("ClipNew",0,0,0,0,0,0,0,0,0); }
				if (Random(1,1000) <=  200) { A_SpawnItemEx("ClipNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (Random(1,1000) <=   50) { A_SpawnItemEx("ClipNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
	
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
					if (Random(1,1000) <=   25) { A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
				}
			}
		Idle:
			TNT1 A 0
			stop
		}
}

Actor ClipBoxNew : ClipBox // replaces ClipBox
{
	Inventory.Pickupsound "getbulletbox"
	Inventory.PickupMessage "Picked up \cua box of bullets\c-!"
	Inventory.Amount 50
	States
	{
		FloraDetected: // bonus will be turned into something else
			TNT1 A 0
			{
				if (random(1,256) <= 3)
				{
					A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0);
				}
				if (random(1,256) <= 128)
				{
					A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0);
				}
				A_FadeOut(1.0);
			}
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			AMMO A 2 A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			loop
	}
}

actor ClipBoxSpawner replaces ClipBox
{
	//$Sprite "AMMOA0"
	Radius 16
	Height 16
	Scale 1
	RenderStyle None
	Alpha 0
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (Random(1,1000) <= 1000) { A_SpawnItemEx("ClipBoxNew",0,0,0,0,0,0,0,0,0); }
				if (Random(1,1000) <=  200) { A_SpawnItemEx("ClipBoxNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (Random(1,1000) <=   50) { A_SpawnItemEx("ClipBoxNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
	
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
					if (Random(1,1000) <=   25) { A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
				}
			}
		Idle:
			TNT1 A 0
			stop
	}
}

Actor ShellNew : Shell // replaces Shell
{
	Inventory.Pickupsound "getfourshells"
	Inventory.PickupMessage "Picked up \cusome shotgun shells\c-!"
	Inventory.Amount 4
	States
	{
		SpawnDiarisQuiver:
			TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnDiarisArrow:
			TNT1 A 0 A_Jump(6, "SpawnDiarisQuiver")
			TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnMedMana:
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_Jump(6, "SpawnDiarisArrow")
			TNT1 A 0 A_Jump(3, "SpawnMedMana")
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			SHEL A 2 A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			loop
	}
}

actor ShellSpawner replaces Shell
{
	//$Sprite "SHELA0"
	Radius 16
	Height 16
	Scale 1
	RenderStyle None
	Alpha 0
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (Random(1,1000) <= 1000) { A_SpawnItemEx("ShellNew",0,0,0,0,0,0,0,0,0); }
				if (Random(1,1000) <=  200) { A_SpawnItemEx("ShellNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (Random(1,1000) <=   50) { A_SpawnItemEx("ShellNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
	
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
					if (Random(1,1000) <=   25) { A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
				}
			}
		Idle:
			TNT1 A 0
			stop
	}
}

Actor ShellBoxNew : ShellBox // replaces ShellBox
{
	Inventory.Pickupsound "getshellbox"
	Inventory.PickupMessage "Picked up a \cubox of shotgun shells\c-!"
	Inventory.Amount 20
	States
	{
		SpawnDiarisQuiver:
			TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnDiarisArrow:
			TNT1 A 0 A_Jump(12, "SpawnDiarisQuiver")
			TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnHighMana:
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_Jump(12, "SpawnDiarisArrow")
			TNT1 A 0 A_Jump(3, "SpawnHighMana")
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			SBOX A 2 A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			loop
	}
}

actor ShellBoxSpawner replaces ShellBox
{
	//$Sprite "SBOXA0"
	Radius 16
	Height 16
	Scale 1
	RenderStyle None
	Alpha 0
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (Random(1,1000) <= 1000) { A_SpawnItemEx("ShellBoxNew",0,0,0,0,0,0,0,0,0); }
				if (Random(1,1000) <=  200) { A_SpawnItemEx("ShellBoxNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (Random(1,1000) <=   50) { A_SpawnItemEx("ShellBoxNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
	
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
					if (Random(1,1000) <=   25) { A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
				}
			}
		Idle:
			TNT1 A 0
			stop
	}
}

Actor RocketAmmoNew : RocketAmmo // replaces RocketAmmo
{
	Inventory.Pickupsound "getsinglerocket"
	Inventory.PickupMessage "Picked up \cua single rocket\c-!"
	Inventory.Amount 1
	States
	{
		SpawnDiarisQuiver:
			TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnDiarisArrow:
			TNT1 A 0 A_Jump(6, "SpawnDiarisQuiver")
			TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnMedMana:
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0
			{
				if (random(1,256) <= 112) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 37) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
			}
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_Jump(6, "SpawnDiarisArrow")
			TNT1 A 0 A_Jump(3, "SpawnMedMana")
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0)
			TNT1 A 0
			{
				if (random(1,256) <= 72) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 24) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
			}
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			ROCK A 2 A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			loop
	}
}

actor RocketSpawner replaces RocketAmmo
{
	//$Sprite "ROCKA0"
	Radius 16
	Height 16
	Scale 1
	RenderStyle None
	Alpha 0
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (Random(1,1000) <= 1000) { A_SpawnItemEx("RocketAmmoNew",0,0,0,0,0,0,0,0,0); }
				if (Random(1,1000) <=  200) { A_SpawnItemEx("RocketAmmoNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (Random(1,1000) <=   50) { A_SpawnItemEx("RocketAmmoNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
	
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
					if (Random(1,1000) <=   25) { A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
				}
		}
		Idle:
			TNT1 A 0
			stop
	}
}

Actor RocketBoxNew : RocketBox // replaces RocketBox
{
	Inventory.Pickupsound "getrocketbox"
	Inventory.PickupMessage "Picked up \cua box of rockets\c-!"
	Inventory.Amount 5
	States
	{
		SpawnDiarisQuiver:
			TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnDiarisArrow:
			TNT1 A 0 A_Jump(12, "SpawnDiarisQuiver")
			TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnHighMana:
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0)
			TNT1 A 0
			{
				if (random(1,256) <= 128) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 43) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 126) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 42) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 112) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 37) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 72) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 24) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
			}
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_Jump(12, "SpawnDiarisArrow")
			TNT1 A 0 A_Jump(3, "SpawnHighMana")
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,0,0,0,0,0,0)
			TNT1 A 0
			{
				if (random(1,256) <= 64) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 21) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 63) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 21) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 56) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 19) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 36) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (random(1,256) <= 12) { A_SpawnItemEx("RockBombShard",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
			}
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			BROK A 2 A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			loop
	}
}

actor RocketBoxSpawner replaces RocketBox
{
	//$Sprite "BROKA0"
	Radius 16
	Height 16
	Scale 1
	RenderStyle None
	Alpha 0
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (Random(1,1000) <= 1000) { A_SpawnItemEx("RocketBoxNew",0,0,0,0,0,0,0,0,0); }
				if (Random(1,1000) <=  200) { A_SpawnItemEx("RocketBoxNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (Random(1,1000) <=   50) { A_SpawnItemEx("RocketBoxNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
	
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
					if (Random(1,1000) <=   25) { A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
				}
			}
		Idle:
			TNT1 A 0
			stop
	}
}

Actor CellNew : Cell // replaces Cell
{
	Inventory.Pickupsound "getsmallcells"
	Inventory.PickupMessage "Picked up \cua small energy cell\c-!"
	Inventory.Amount 20
	States
	{
		SpawnDiarisQuiver:
			TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnDiarisArrow:
			TNT1 A 0 A_Jump(6, "SpawnDiarisQuiver")
			TNT1 A 0 A_SpawnItemEx("DiarisArrow",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnMedMana:
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_Jump(6, "SpawnDiarisArrow")
			TNT1 A 0 A_Jump(3, "SpawnMedMana")
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			CELL A 2 A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			loop
	}
}

actor CellSpawner replaces Cell
{
	//$Sprite "CELLA0"
	Radius 16
	Height 16
	Scale 1
	RenderStyle None
	Alpha 0
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (Random(1,1000) <= 1000) { A_SpawnItemEx("CellNew",0,0,0,0,0,0,0,0,0); }
				if (Random(1,1000) <=  200) { A_SpawnItemEx("CellNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (Random(1,1000) <=   50) { A_SpawnItemEx("CellNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
	
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
					if (Random(1,1000) <=   25) { A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
				}
			}
		Idle:
			TNT1 A 0
			stop
	}
}

Actor CellPackNew : CellPack // replaces CellPack
{
	Inventory.Pickupsound "getcellpack"
	Inventory.PickupMessage "Picked up \cua large energy cell\c-!"
	Inventory.Amount 100
	States
	{
		SpawnDiarisQuiver:
			TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnDiarisArrow:
			TNT1 A 0 A_Jump(12, "SpawnDiarisQuiver")
			TNT1 A 0 A_SpawnItemEx("DiarisArrow",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		SpawnHighMana:
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		FloraDetected: // bonus will be turned into something else
			TNT1 A 0 A_Jump(12, "SpawnDiarisArrow")
			TNT1 A 0 A_Jump(3, "SpawnHighMana")
			TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0)
			TNT1 A 0 A_FadeOut(1.0)
			Loop

		Spawn:
			TNT1 A 0 NoDelay A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
		Idle:
			CELP A 2 A_JumpIf(CallACS("CheckCharacterClass") == 2, "FloraDetected")
			loop
	}
}

actor CellPackSpawner replaces CellPack
{
	//$Sprite "CELPA0"
	Radius 16
	Height 16
	Scale 1
	RenderStyle None
	Alpha 0
	+NOTIMEFREEZE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (Random(1,1000) <= 1000) { A_SpawnItemEx("CellPackNew",0,0,0,0,0,0,0,0,0); }
				if (Random(1,1000) <=  200) { A_SpawnItemEx("CellPackNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
				if (Random(1,1000) <=   50) { A_SpawnItemEx("CellPackNew",frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(-2.0,2.0),0,0,0); }
	
				if (CallACS("CheckCharacterClass") == 0 || CallACS("CheckCharacterClass") == 1)
				{
					if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
					if (Random(1,1000) <=   25) { A_SpawnItemEx("DoomSpellMana2",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,0); }
				}
			}
		Idle:
			TNT1 A 0
			stop
	}
}

// Diaris Bow Weapon - Magic Weapon #1
actor DiarisHolyArrow : SingleDamageFastRipper
{
	Scale 0.25
	Damage (finaldamagedealt)
	+SPECTRAL
	+MISSILE
	+PIERCEARMOR
	+FORCERADIUSDMG
	+FORCEPAIN
	+NODAMAGETHRUST
	+CANNOTPUSH
	+RIPPER
	+MTHRUSPECIES
	+THRUSPECIES
	+GETOWNER
	Species "Players"
	DamageType "Holy"
	Alpha 1
	Speed 320
	Radius 4
	Height 4
	FastSpeed 320
	SeeSound "null"
	DeathSound "null"
	decal "BulletChip"
	MissileType "DiarisHolyArrowGlitter1"

	States
	{
		Spawn:
			DIAH A 0 NoDelay // { A_GetPlayerAttackDamage(18,0); }
		Idle:
			DIAH AAAAAAAA 1 { A_GetPlayerAttackDamage(18,0); }
			loop
		Death:
			TNT1 A 0 
			{
				A_Playsound("ArrowHit");
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
			}
			stop
	}
}

actor DiarisHolyArrow2XDmg : DiarisHolyArrow
{
	Damage (finaldamagedealt)
	MissileType "DiarisHolyArrowGlitter2"

	States
	{
		Spawn:
			DIAH A 0 NoDelay // { A_GetPlayerAttackDamage(19,0); }
		Idle:
			DIAH AAAAAAAAA 1 { A_GetPlayerAttackDamage(19,0); }
			loop
		Death:
			TNT1 A 0 
			{
				A_Playsound("ArrowHit");
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
			}
			stop
	}
}

actor DiarisHolyArrow3XDmg : DiarisHolyArrow
{
	Damage (finaldamagedealt)
	MissileType "DiarisHolyArrowGlitter3"

	States
	{
		Spawn:
			DIAH A 0 NoDelay // { A_GetPlayerAttackDamage(20,0); }
		Idle:
			DIAH AAAAAAAA 1 { A_GetPlayerAttackDamage(20,0); }
			loop
		Death:
			TNT1 A 0 
			{
				A_Playsound("ArrowHit");
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
			}
			stop
	}
}

actor DiarisHolyArrowGlitter1 : AetheriusProjectileZSC // TeleGlitter1
{
	RenderStyle Add
	Alpha 0.333
	Scale 0.5
	+SPECTRAL
	+PIERCEARMOR
	+FORCERADIUSDMG
	+NODAMAGETHRUST
	+CANNOTPUSH
	+MTHRUSPECIES
	+THRUSPECIES
	Species "Players"
	DamageType "Holy"

	States
	{
		Spawn:
			AHGT A 0 NoDelay
			{
				A_GetPlayerAttackDamage(18,0);
				A_Explode((finaldamagedealt/32),24,0,false,12);
				if (random(1,4) == 1)
				{
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-2.0,2.0), frandom(-2.0,2.0), frandom(-2.0,2.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-2.0,2.0), frandom(-2.0,2.0), frandom(-2.0,2.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				}
			}
		Idle:
			AHGT AABBCCDDEE 1 BRIGHT A_FadeOut(0.034)
			loop
	}
}

actor DiarisHolyArrowGlitter2 : DiarisHolyArrowGlitter1
{
	RenderStyle Add
	Alpha 0.667
	Scale 1
	States
	{
		Spawn:
			AHGT A 0 NoDelay
			{
				A_GetPlayerAttackDamage(19,0);
				A_Explode((finaldamagedealt/32),32,0,false,16);
				if (random(1,3) == 1)
				{
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-3.0,3.0), frandom(-3.0,3.0), frandom(-3.0,3.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-3.0,3.0), frandom(-3.0,3.0), frandom(-3.0,3.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-3.0,3.0), frandom(-3.0,3.0), frandom(-3.0,3.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-3.0,3.0), frandom(-3.0,3.0), frandom(-3.0,3.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				}
			}
		Idle:
			AHGT AABBCCDDEE 1 BRIGHT A_FadeOut(0.067)
			loop
	}
}

actor DiarisHolyArrowGlitter3 : DiarisHolyArrowGlitter1
{
	RenderStyle Add
	Alpha 1
	Scale 1.5
	States
	{
		Spawn:
			AHGT A 0 NoDelay
			{
				A_GetPlayerAttackDamage(20,0);
				A_Explode((finaldamagedealt/32),40,0,false,20);
				if (random(1,2) == 1)
				{
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(0.1,180.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
					A_SpawnItemEx("ArmorGlitter", 0, 0, 0, frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(-4.0,4.0), frandom(180.1,360.0), SXF_ABSOLUTEANGLE|SXF_ABSOLUTEVELOCITY, 16);
				}
			}
		Idle:
			AHGT AABBCCDDEE 1 BRIGHT A_FadeOut(0.1)
			loop
	}
}

actor DiarisLongBow : FloraWeapon 27328
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Normal"
	ConversationID 363 // 345+ are unused by Strife, this is for use in DIALOUxx/SCRIPTxx references
	+WEAPON.NOALERT
	+FLOATBOB
	+NOAUTOAIM
	Scale 0.30
	Inventory.ForbiddenTo FighterPlayer, MagePlayer, ClericPlayer, StrifePlayer, HereticPlayer, DeggarisMontegger, IlluciaHenderShot
	Inventory.PickupMessage "You got the \cjDiaris Longbow\c-! \cx[Slot 3]\c-"
	Obituary "%o was purified by %k's \cjDiaris Longbow\c-."
	Tag "Diaris Longbow"
	Weapon.AmmoType1 "DiarisArrow"
	Weapon.AmmoGive 6
	States
	{
		Spawn:
			TNT1 A 0 NoDelay ACS_NamedExecuteAlways("CheckFloraItems",0,0,0,0)
		Idle:
			DIBO A 2
			{
				if (GetCVar("dvds_floralongbowcandrop") <= 0)
				{
					A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0);
					A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,56);
					A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,206);
					A_SpawnItemEx("DoomSpellMana",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,243);
					A_FadeOut(1,1);
				}
			}
			loop

		User1: // Kick - Diaris Longbow version
			TNT1 A 0
			{
				if (CallACS("UseStaminaAttack",CallACS("GetKickStaminaUse",0),2) == 0) 
				{
					if (CountInv("DrawingDiarisBow",AAPTR_PLAYER1) > 0) { return state("Hold"); }
					return state("Ready"); 
				}
				return state(""); 
			}
			TNT1 A 0
			{
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
				CallACS("StartTensionCountDown");
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("KickAttackDEFLvl2",1); } else { A_GiveInventory("KickAttackDEFLvl1",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
				if (random(1,256) > 64) { A_GiveInventory("KickCritBonus1",1,AAPTR_PLAYER1); } else { A_GiveInventory("KickCritBonus2",1,AAPTR_PLAYER1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto KickStart
		KickEnd:
			TNT1 A 0
			{
				A_TakeInventory("KickCritBonus1",0x7FFFFFFF);
				A_TakeInventory("KickCritBonus2",0x7FFFFFFF);
				A_TakeInventory("KickAttackDEFLvl1",0x7FFFFFFF);
				A_TakeInventory("KickAttackDEFLvl2",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster1",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster2",0x7FFFFFFF);
				if (CountInv("DrawingDiarisBow",AAPTR_PLAYER1) > 0) { return state("Hold"); }
				return state("");
			}
			goto Ready

		Ready: 
			DBOW A 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
			DBOW A 0 A_JumpIfInventory("DiarisArrow",1,1)
			Goto ReadyEmpty
			DBOW A 1 A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER4)
			Loop
		ReadyEmpty: 
			DBOW Z 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
			DBOW Z 1 A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER4)
			DBOW Z 0 A_JumpIfInventory("DiarisArrow",1,1)
			Loop
			DBOW A 0
			Goto Ready
		Deselect: 
			DBOW A 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
			DBOW A 0 A_JumpIfInventory("DiarisArrow",1,1)
			Goto DeselectEmpty
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			DBOW A 1 A_Lower
			Loop
		DeselectEmpty: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			DBOW Z 1 A_Lower
			DBOW Z 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
			DBOW Z 0 A_JumpIfInventory("DiarisArrow",1,1)
			Loop
			DBOW A 0
			Goto Deselect
		Select: 
			DBOW A 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
			DBOW A 0 
			{
				if (CountInv("LongbowZoom") == 1) { A_ZoomFactor(2.0); A_Print("2x Zoom"); }
				else if (CountInv("LongbowZoom") == 2) { A_ZoomFactor(4.0); A_Print("4x Zoom"); }
				else if (CountInv("LongbowZoom") == 3) { A_ZoomFactor(8.0); A_Print("8x Zoom"); }
				else if (CountInv("LongbowZoom") == 4) { A_ZoomFactor(1.0); A_SetInventory("LongbowZoom",0); A_Print("No Zoom"); }
			}
			DBOW A 0 A_JumpIfInventory("DiarisArrow",1,1)
			Goto SelectEmpty
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 4) { A_Raise; }
			}
			DBOW A 0 A_Raise
			DBOW A 1 A_Raise
			Loop
		SelectEmpty: 
			DBOW A 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
			DBOW A 0 A_JumpIfInventory("DiarisArrow",1,1)
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 4) { A_Raise; }
			}
			DBOW A 0 A_Raise
			DBOW Z 1 A_Raise
			Loop
			DBOW A 0
			Goto Select

		Fire: 
			DBOW A 0 A_JumpIfInventory("DiarisArrow",1,"FireMain",AAPTR_PLAYER1)
			Goto ReadyEmpty
		FireMain:
			DBOW A 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
			}
			DBOW B 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
			}
			DBOW C 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
			}
			DBOW D 3 
			{
				A_Playsound("DrawDiarisBow",CHAN_WEAPON);
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
			}
			DBOW E 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
			}
			DBOW F 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
			}
			DBOW G 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
			}
			goto Hold

		Hold:
			DBOW H 3
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
				A_GiveInventory("DrawingDiarisBow",1);
				ACS_NamedExecuteAlways("DrawBow",0,1,0,0); // Executes the script to slow you down based on your bow-level
				A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER1|WRF_ALLOWUSER4|WRF_DISABLESWITCH);
			}
			DBOW H 0 A_JumpIf(CallACS("BowAntics") == 0, "ReleaseArrow")
			DBOW H 0 A_JumpIf(CallACS("BowAntics") == 1, "DeleaseArrow")
			DBOW H 0 A_JumpIf(CallACS("BowAntics") == 2, "Hold")
			loop

		ReleaseArrow:
			DBOW I 0
			{
				ACS_NamedExecuteAlways("DrawBow",0,0,0,0);
				A_TakeInventory("DrawingDiarisBow",0x7FFFFFFF);
				A_TakeInventory("DiarisArrow",1);
				CallACS("StartTensionCountDown");
				A_SetInventory("ArrowRandomizer",random(1,260));
				if (CountInv("ArrowRandomizer") <= 180) { A_SpreadAuraFireProjectile("DiarisHolyArrow",0,0,"",0,0,0,0); A_Playsound("BowFired",CHAN_WEAPON); A_Playsound("crisisattack2",CHAN_ITEM,frandom(0.1230,0.1582)); }
				else if (CountInv("ArrowRandomizer") <= 240) { A_SpreadAuraFireProjectile("DiarisHolyArrow2XDmg",0,0,"",0,0,0,0); A_Playsound("BowFired2",CHAN_WEAPON); A_Playsound("crisisattack2",CHAN_ITEM,frandom(0.3281,0.4218)); }
				else { A_SpreadAuraFireProjectile("DiarisHolyArrow3xDmg",0,0,"",0,0,0,0); A_Playsound("BowFired3",CHAN_WEAPON); A_Playsound("crisisattack2",CHAN_ITEM,frandom(0.8750,1.1250)); }
			}
			DBOW I 3
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
				if (random(1,256) <= 4) { A_AlertMonsters; }
			}
			DBOW I 12
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(11); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 2) { A_SetTics(10); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(9); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 4) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(7); }
			}
			Goto Ready

		DeleaseArrow:
			DBOW G 3
			{
				A_TakeInventory("DrawingDiarisBow",0x7FFFFFFF);
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
			}
			DBOW F 3
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
			}
			DBOW E 3
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
			}
			DBOW D 3
			{
				A_Playsound("DrawDiarisBow",CHAN_WEAPON);
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
			}
			DBOW I 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
			DBOW C 3
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
			}
			DBOW B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
			}
			DBOW A 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
			}
			Goto Ready

			// Zoom :V
		User4:
			DBOW A 0
			{
				if (CountInv("DrawingDiarisBow",AAPTR_PLAYER1) > 0) { return state("User4Hold"); }
				else if (CountInv("DiarisArrow",AAPTR_PLAYER1) < 1) { return state("User4Empty"); }
				return state("");
			}
			DBOW A 5
			{
				A_GiveInventory("LongbowZoom",1);
				if (CountInv("LongbowZoom") == 1) { A_ZoomFactor(2.0); A_Print("2x Zoom"); }
				else if (CountInv("LongbowZoom") == 2) { A_ZoomFactor(4.0); A_Print("4x Zoom"); }
				else if (CountInv("LongbowZoom") == 3) { A_ZoomFactor(8.0); A_Print("8x Zoom"); }
				else if (CountInv("LongbowZoom") == 4) { A_ZoomFactor(1.0); A_SetInventory("LongbowZoom",0); A_Print("No Zoom"); }
			}
			goto Ready
		User4Empty:
			DBOW Z 5
			{
				A_GiveInventory("LongbowZoom",1);
				if (CountInv("LongbowZoom") == 1) { A_ZoomFactor(2.0); A_Print("2x Zoom"); }
				else if (CountInv("LongbowZoom") == 2) { A_ZoomFactor(4.0); A_Print("4x Zoom"); }
				else if (CountInv("LongbowZoom") == 3) { A_ZoomFactor(8.0); A_Print("8x Zoom"); }
				else if (CountInv("LongbowZoom") == 4) { A_ZoomFactor(1.0); A_SetInventory("LongbowZoom",0); A_Print("No Zoom"); }
			}
			goto Ready
		User4Hold:
			DBOW H 5
			{
				A_GiveInventory("LongbowZoom",1);
				if (CountInv("LongbowZoom") == 1) { A_ZoomFactor(2.0); A_Print("2x Zoom"); }
				else if (CountInv("LongbowZoom") == 2) { A_ZoomFactor(4.0); A_Print("4x Zoom"); }
				else if (CountInv("LongbowZoom") == 3) { A_ZoomFactor(8.0); A_Print("8x Zoom"); }
				else if (CountInv("LongbowZoom") == 4) { A_ZoomFactor(1.0); A_SetInventory("LongbowZoom",0); A_Print("No Zoom"); }
			}
			goto Hold
	}
}

// Magic Boomerrang Weapon - Magic Weapon #2
// TODO


// Imp's Claw Weapon - Hellcore Weapon #1
Actor DoomImpBall-Claw : DoomImpBallNew
{
	+SPECTRAL
	DamageType "ImpClaw" 
	States
	{
		Spawn:
			BAL1 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",96) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",96) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",96) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",96) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",96) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",96) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",96) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",96) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AB 4 Bright
			Loop
	}
}
Actor DoomImpBallCrisis-Claw : DoomImpBallCrisis 
{
	+SPECTRAL
	DamageType "ImpClaw" 
	States
	{
		Spawn:
			BAL1 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",96) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",96) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",96) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",96) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",96) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",96) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",96) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",96) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright A_SpawnItemEx("DoomImpBallCrisisParticle",0,0,0,0,0,1.28)
			Loop
	}
}

actor ImpClaw : FloraWeapon
{
	//$Sprite "HLC2A0"
	Scale 0.625
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Imp's Claw! \cx[Slot 4]\c-"
	Tag "Imp's Claw"
	States
	{
		Spawn:
			HLC2 A 1 bright NoDelay ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,0,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("imp/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,100,1,0); // +1.0% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("DoomImpBallCrisis-Claw",0,0,"",8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("DoomImpBall-Claw",0,0,"",8,0,0,0); 
				}
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor ImpClawCI : AetheriusCustomInventory 32222
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	//$Sprite "HLC2A0"
	Tag "Imp's Claw: [Hellcore] Launches Imp Fireballs"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Imp's Claw! \cx[Slot 4]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,0,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,0,0,0)
		SpawnLoop:
			HLC2 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,0,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("ImpClaw", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,1,0,0)
			Stop
	}
}

// Dark Imp's Claw Weapon - Hellcore Weapon #2 [placeholder sprites]
Actor DarkSeeker-Claw : DarkSeeker 
{
	+SPECTRAL 
	DamageType "DarkImpClaw" 
	States
	{
		Spawn:
			DKB1 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",97) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",97) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",97) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",97) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",97) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",97) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",97) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",97) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" A 2 Bright A_SeekerMissile (5,10)
			"####" ABB 2 Bright
			Loop
 }
}
Actor DarkSeekerCrisis-Claw : DarkSeekerCrisis 
{
	+SPECTRAL 
	DamageType "DarkImpClaw"  
	States
	{
		Spawn:
			BAL4 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",97) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",97) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",97) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",97) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",97) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",97) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",97) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",97) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" A 0 Bright A_SpawnItemEx("DarkSeekerCrisisParticle",0,0,0,0,0,1.28)
			"####" A 2 Bright A_SeekerMissile (10,20)
			"####" ABB 2 Bright A_SpawnItemEx("DarkSeekerCrisisParticle",0,0,0,0,0,1.28)
			"####" A 2 Bright
			Loop
	}
}
actor DarkImpClaw : FloraWeapon
{
	//$Sprite "HLC2B0"
	Scale 0.625
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Tag "Dark Imp's Claw"
	Inventory.PickupMessage "You got the Dark Imp's Claw! \cx[Slot 4]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
		SpawnLoop:
			HLC2 B 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop

		Fire: 
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("imp/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,1,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("DarkSeekerCrisis-Claw",0,0,"",8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("DarkSeeker-Claw",0,0,"",8,0,0,0); 
				}
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor DarkImpClawCI : AetheriusCustomInventory 32223
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	//$Sprite "HLC2B0"
	Tag "Dark Imp's Claw: [Hellcore] Launches Dark Imp Fireballs"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Dark Imp's Claw! \cx[Slot 4]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
		SpawnLoop:
			HLC2 B 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("DarkImpClaw", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,2,0,0)
			Stop
	}
}

// Cacodemon's Eye Weapon - Hellcore Weapon #3 [placeholder sprites]
actor CacodemonBall-Claw : CacodemonBallNew 
{
	+SPECTRAL 
	DamageType "CacodemonEye" 
	States
	{
		Spawn:
			BAL2 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",98) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",98) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",98) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",98) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",98) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",98) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",98) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",98) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			BAL2 AB 4 Bright
			Loop
	}
}
actor CacodemonBallCrisis-Claw : CacodemonBallCrisis 
{
	+SPECTRAL
	DamageType "CacodemonEye" 
	States
	{
		Spawn:
			BAL2 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",98) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",98) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",98) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",98) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",98) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",98) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",98) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",98) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright A_SpawnItemEx("CacodemonBallCrisisParticle",0,0,0,0,0,1.28)
			Loop
	}
}
actor CacodemonEye : FloraWeapon
{
	//$Sprite "HLC2C0"
	Scale 0.625
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Cacodemon's Eye! \cx[Slot 4]\c-"
	Tag "Cacodemon's Eye"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
		SpawnLoop:
			HLC2 C 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("caco/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,150,1,0); // +1.5% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("CacodemonBallCrisis-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",98) >= 4) 
					{
						A_SpreadAuraFireProjectile("CacodemonBallCrisis-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("CacodemonBallCrisis-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",98) >= 7) 
					{
						A_SpreadAuraFireProjectile("CacodemonBallCrisis-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("CacodemonBallCrisis-Claw",0+30,0,"",8,0,0,0); 
					}
				}
				else
				{
					A_SpreadAuraFireProjectile("CacodemonBall-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",98) >= 4) 
					{
						A_SpreadAuraFireProjectile("CacodemonBall-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("CacodemonBall-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",98) >= 7) 
					{
						A_SpreadAuraFireProjectile("CacodemonBall-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("CacodemonBall-Claw",0+30,0,"",8,0,0,0); 
					}
				}
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor CacodemonEyeCI : AetheriusCustomInventory 32224
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	//$Sprite "HLC2C0"
	Tag "Cacodemon's Eye: [Hellcore] Launches Cacodemon Lightning Balls"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Cacodemon's Eye! \cx[Slot 4]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
		SpawnLoop:
			HLC2 C 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("CacodemonEye", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,3,0,0)
			Stop
	}
}

// Cacolantern's Eye Weapon - Hellcore Weapon #4 [placeholder sprites]
actor CacolanternBall-Claw : CacolanternBall 
{
	+SPECTRAL
	DamageType "CacolanternEye" 
	States
	{
		Spawn:
			BAL8 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",99) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",99) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",99) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",99) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",99) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",99) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",99) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",99) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			BAL8 AB 4 Bright
			loop
	}
}
actor CacolanternBallCrisis-Claw : CacolanternBallCrisis 
{
	+SPECTRAL
	DamageType "CacolanternEye" 
	States
	{
		Spawn:
			BAL8 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",99) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",99) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",99) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",99) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",99) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",99) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",99) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",99) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright A_SpawnItemEx("CacolanternBallCrisisParticle",0,0,0,0,0,1.28)
			Loop
	}
}
actor CacolanternEye : FloraWeapon
{
	//$Sprite "HLC2D0"
	Tag "Cacolantern's Eye"
	Scale 0.625
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Cacolantern's Eye! \cx[Slot 4]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
		SpawnLoop:
			HLC2 D 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("caco/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,200,1,0); // +2% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("CacolanternBallCrisis-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",99) >= 4) 
					{
						A_SpreadAuraFireProjectile("CacolanternBallCrisis-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("CacolanternBallCrisis-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",99) >= 7) 
					{
						A_SpreadAuraFireProjectile("CacolanternBallCrisis-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("CacolanternBallCrisis-Claw",0+30,0,"",8,0,0,0); 
					}
				}
				else
				{
					A_SpreadAuraFireProjectile("CacolanternBall-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",99) >= 4) 
					{
						A_SpreadAuraFireProjectile("CacolanternBall-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("CacolanternBall-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",99) >= 7) 
					{
						A_SpreadAuraFireProjectile("CacolanternBall-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("CacolanternBall-Claw",0+30,0,"",8,0,0,0); 
					}
				}
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor CacolanternEyeCI : AetheriusCustomInventory 32225
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	//$Sprite "HLC2D0"
	Tag "Cacolantern's Eye: [Hellcore] Launches Cacolantern Lightning Balls"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Cacolantern's Eye! \cx[Slot 4]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
		SpawnLoop:
			HLC2 D 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("CacolanternEye", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,4,0,0)
			Stop
	}
}

// Abaddon's Eye Weapon - Hellcore Weapon #5 [placeholder sprites]
actor AbaddonBall-Claw : AbaddonBall 
{
	+SPECTRAL
	DamageType "AbaddonEye" 
	States
	{
		Spawn:
			BAL3 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",100) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",100) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",100) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",100) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",100) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",100) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",100) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",100) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			BAL3 AB 4 Bright
			loop
	}
}
actor AbaddonBallCrisis-Claw : AbaddonBallCrisis 
{
	+SPECTRAL
	DamageType "AbaddonEye" 
	States
	{
		Spawn:
			BAL3 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",100) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",100) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",100) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",100) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",100) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",100) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",100) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",100) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright A_SpawnItemEx("AbaddonBallCrisisParticle",0,0,0,0,0,1.28)
			Loop
	}
}
actor AbaddonEye : FloraWeapon
{
	//$Sprite "HLC2E0"
	Tag "Abaddon's Eye"
	Scale 0.625
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Abaddon's Eye! \cx[Slot 4]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
		SpawnLoop:
			HLC2 E 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("caco/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,125,1,0); // +1.25% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",100) >= 4) 
					{
						A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",100) >= 7) 
					{
						A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0+30,0,"",8,0,0,0); 
					}
				}
				else
				{
					A_SpreadAuraFireProjectile("AbaddonBall-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",100) >= 4) 
					{
						A_SpreadAuraFireProjectile("AbaddonBall-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("AbaddonBall-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",100) >= 7) 
					{
						A_SpreadAuraFireProjectile("AbaddonBall-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("AbaddonBall-Claw",0+30,0,"",8,0,0,0); 
					}
				}
			}
			CLAW B 6
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(3); }
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("caco/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,125,1,0); // +1.25% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",100) >= 4) 
					{
						A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",100) >= 7) 
					{
						A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("AbaddonBallCrisis-Claw",0+30,0,"",8,0,0,0); 
					}
				}
				else
				{
					A_SpreadAuraFireProjectile("AbaddonBall-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",100) >= 4) 
					{
						A_SpreadAuraFireProjectile("AbaddonBall-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("AbaddonBall-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",100) >= 7) 
					{
						A_SpreadAuraFireProjectile("AbaddonBall-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("AbaddonBall-Claw",0+30,0,"",8,0,0,0); 
					}
				}
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor AbaddonEyeCI : AetheriusCustomInventory 32226
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	//$Sprite "HLC2E0"
	Tag "Abaddon's Eye: [Hellcore] Launches Abaddon Fireballs"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Abaddon's Eye! \cx[Slot 4]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
		SpawnLoop:
			HLC2 E 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("AbaddonEye", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,5,0,0)
			Stop
	}
}


// Hell Knight's Fist Weapon - Hellcore Weapon #6 [placeholder sprites]
Actor HellKnightBall-Claw : HellKnightBall 
{
	+SPECTRAL
	DamageType "KnightFist" 
	States
	{
		Spawn:
			BAL7 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",101) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",101) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",101) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",101) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",101) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",101) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",101) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",101) >= 8) { A_ScaleVelocity(2.05); }
	
				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright
			Loop
	}
}
Actor HellKnightBallCrisis-Claw : HellKnightBallCrisis 
{
	+SPECTRAL
	DamageType "KnightFist" 
	States
	{
		Spawn:
			BAL7 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",101) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",101) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",101) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",101) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",101) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",101) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",101) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",101) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright A_SpawnItemEx("HellKnightBallCrisisParticle",0,0,0,0,0,1.28)
			Loop
	}
}
actor KnightFist : FloraWeapon
{
	//$Sprite "HLC2F0"
	var int user_theta;
	Tag "Hell Knight's Fist"
	Scale 0.625
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Hell Knight's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
		SpawnLoop:
			HLC2 F 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("baron/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,225,1,0); // +2.25% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("HellKnightBallCrisis-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",101) >= 4) 
					{
						A_SpreadAuraFireProjectile("HellKnightBallCrisis-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("HellKnightBallCrisis-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",101) >= 7) 
					{
						A_SpreadAuraFireProjectile("HellKnightBallCrisis-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("HellKnightBallCrisis-Claw",0+30,0,"",8,0,0,0); 
					}
				}
				else
				{
					A_SpreadAuraFireProjectile("HellKnightBall-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",101) >= 4) 
					{
						A_SpreadAuraFireProjectile("HellKnightBall-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("HellKnightBall-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",101) >= 7) 
					{
						A_SpreadAuraFireProjectile("HellKnightBall-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("HellKnightBall-Claw",0+30,0,"",8,0,0,0); 
					}
				}
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor KnightFistCI : AetheriusCustomInventory 32227
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	//$Sprite "HLC2F0"
	Tag "Hell Knight's Fist: [Hellcore] Launches Hell Knight Plasmaballs"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Hell Knight's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
		SpawnLoop:
			HLC2 F 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("KnightFist", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,6,0,0)
			Stop
	}
}

// Baron of Hell's Fist Weapon - Hellcore Weapon #7 [placeholder sprites]
Actor BaronOfHellBall-Claw : BaronOfHellBall 
{
	+SPECTRAL
	DamageType "BaronFist" 
	States
	{
		Spawn:
			BAL7 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",102) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",102) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",102) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",102) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",102) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",102) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",102) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",102) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright
			Loop
	}
}
Actor BaronOfHellBallCrisis-Claw : BaronOfHellBallCrisis 
{
	+SPECTRAL
	DamageType "BaronFist" 
	States
	{
		Spawn:
			BAL7 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",102) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",102) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",102) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",102) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",102) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",102) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",102) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",102) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright A_SpawnItemEx("BaronOfHellBallCrisisParticle",0,0,0,0,0,1.28)
			Loop
	}
}
actor BaronFist : FloraWeapon
{
	//$Sprite "HLC2G0"
	Scale 0.625
	Tag "Baron of Hell's Fist"
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Baron of Hell's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
		SpawnLoop:
			HLC2 G 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("baron/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,275,1,0); // +2.75% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BaronofHellBallCrisis-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",102) >= 4) 
					{
						A_SpreadAuraFireProjectile("BaronofHellBallCrisis-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BaronofHellBallCrisis-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",102) >= 7) 
					{
						A_SpreadAuraFireProjectile("BaronofHellBallCrisis-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BaronofHellBallCrisis-Claw",0+30,0,"",8,0,0,0); 
					}
				}
				else
				{
					A_SpreadAuraFireProjectile("BaronofHellBall-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",102) >= 4) 
					{
						A_SpreadAuraFireProjectile("BaronofHellBall-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BaronofHellBall-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",102) >= 7) 
					{
						A_SpreadAuraFireProjectile("BaronofHellBall-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BaronofHellBall-Claw",0+30,0,"",8,0,0,0); 
					}
				}
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor BaronFistCI : AetheriusCustomInventory 32228
{
	//$Sprite "HLC2G0"
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	Tag "Baron of Hell's Fist: [Hellcore] Launches Baron of Hell Plasmaballs"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Baron of Hell's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
		SpawnLoop:
			HLC2 G 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("BaronFist", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,7,0,0)
			Stop
	}
}

// Belphegor's Fist Weapon - Hellcore Weapon #8 [placeholder sprites]
Actor BelphegorBall-Claw : BelphegorBall 
{
	+SPECTRAL
	DamageType "BelphegorFist" 
	States
	{
		Spawn:
			BAL7 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",103) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",103) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",103) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",103) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",103) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",103) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",103) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",103) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright
			Loop
	}
}
Actor BelphegorBallCrisis-Claw : BelphegorBallCrisis 
{
	+SPECTRAL
	DamageType "BelphegorFist" 
	States
	{
		Spawn:
			BAL7 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",103) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",103) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",103) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",103) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",103) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",103) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",103) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",103) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright A_SpawnItemEx("BaronOfHellBallCrisisParticle",0,0,0,0,0,1.28)
			Loop
	}
}
actor BelphegorFist : FloraWeapon
{
	//$Sprite "HLC2H0"
	Scale 0.625
	Tag "Belphegor's Fist"
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Belphegor's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
		SpawnLoop:
			HLC2 H 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("baron/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,175,1,0); // +1.50% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",103) >= 4) 
					{
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",103) >= 7) 
					{
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0+30,0,"",8,0,0,0); 
					}
				}
				else
				{
					A_SpreadAuraFireProjectile("BelphegorBall-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",103) >= 4) 
					{
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",103) >= 7) 
					{
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0+30,0,"",8,0,0,0); 
					}
				}
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("baron/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,175,1,0); // +1.50% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");
	
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",103) >= 4) 
					{
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",103) >= 7) 
					{
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0+30,0,"",8,0,0,0); 
					}
				}
				else
				{
					A_SpreadAuraFireProjectile("BelphegorBall-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",103) >= 4) 
					{
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",103) >= 7) 
					{
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0+30,0,"",8,0,0,0); 
					}
				}
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("baron/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,175,1,0); // +1.50% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");
	
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",103) >= 4) 
					{
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",103) >= 7) 
					{
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBallCrisis-Claw",0+30,0,"",8,0,0,0); 
					}
				}
				else
				{
					A_SpreadAuraFireProjectile("BelphegorBall-Claw",0,0,"",8,0,0,0); 
					if (CallACS("MiscVarCheckDECORATE",103) >= 4) 
					{
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0-15,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0+15,0,"",8,0,0,0); 
					}
					if (CallACS("MiscVarCheckDECORATE",103) >= 7) 
					{
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0-30,0,"",8,0,0,0); 
						A_SpreadAuraFireProjectile("BelphegorBall-Claw",0+30,0,"",8,0,0,0); 
					}
				}
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor BelphegorFistCI : AetheriusCustomInventory 32229
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	//$Sprite "HLC2H0"
	Tag "Belphegor's Fist: [Hellcore] Launches Belphegor Plasmaballs"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Belphegor's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
		SpawnLoop:
			HLC2 H 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("BelphegorFist", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,8,0,0)
			Stop
	}
}

// Bruiser Demon's Fist Weapon - Hellcore Weapon #9 [placeholder sprites]
Actor BruiserBall-Claw : BruiserBall 
{
	+SPECTRAL
	DamageType "BruiserFist" 
	States
	{
		Spawn:
			BRBA A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright A_SpawnItemEx("BruiserBallTrail",0,0,0,0,0,1.28)
			Loop
	}
}
Actor BruiserBallCrisis-Claw : BruiserBallCrisis
{
	+SPECTRAL
	DamageType "BruiserFist" 
	States
	{
		Spawn:
			BRBA A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright
			{
				A_SpawnItemEx("BruiserBallCrisisParticle",0,0,0,0,0,2.56);
				A_SpawnItemEx("BruiserBallTrail", 0, 0, 0, 0, 0, 0, 0, 128);
			}
			Loop
	}
}
Actor BruiserBall2-Claw : BruiserBall2
{
	+SPECTRAL
	DamageType "BruiserFist" 
	States
	{
		Spawn:
			BRB2 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AB 6 BRIGHT 
			Loop
	}
}
Actor BruiserBall2Crisis-Claw : BruiserBall2Crisis
{
	+SPECTRAL
	DamageType "BruiserFist" 
	States
	{
		Spawn:
			BRB2 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AAABBB 2 Bright A_SpawnItemEx("BruiserBall2CrisisParticle",0,0,0,0,0,1.28)
			Loop
	}
}
Actor BruiserFireSpawner-Claw : BruiserFireSpawner
{
	+SPECTRAL
	DamageType "BruiserFist" 
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			TNT1 A 3 Bright A_CustomMissile("BruiserFire",0,0,0,4) // A_MissileAttack
			TNT1 AA 3
			Loop
	}
}
Actor BruiserFireSpawnerCrisis-Claw : BruiserFireSpawnerCrisis
{
	+SPECTRAL
	DamageType "BruiserFist" 
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			TNT1 A 3 Bright A_CustomMissile("BruiserFireCrisis",0,0,0,4) // A_MissileAttack
			TNT1 AA 3
			Loop
	}
}
actor BruiserFist : FloraWeapon
{
	//$Sprite "HLC2I0"
	Scale 0.625
	Tag "Bruiser Demon's Fist"
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Bruiser Demon's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
		SpawnLoop:
			HLC2 I 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire:
			CLAW B 4
			{
				A_GunFlash;
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,0) == 0, "FireA")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,0) == 1, "FireB")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,0) == 2, "FireC")
			goto FireA
		
		// Fire Wave[s]
		FireA:
			CLAW B 0 A_Playsound ("baron/attack")
			CLAW B 0 A_Jump(256,"FireALeft","FireARight")
		FireALeft:
			CLAW B 2
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,1,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle-40);
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle+40);
			}

			CLAW B 1
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle-30);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle+30);
			}
			CLAW B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(0); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle-20);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle+20);
			}
			CLAW B 1
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle-10);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle+10);
			}
			CLAW B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(0); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle-0);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle+0);
			}
			CLAW B 1
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle+10);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle-10);
			}
			CLAW B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle+20);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle-20);
			}
			CLAW B 5
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
			}
			goto FireAEnd
		FireARight:
			CLAW B 2
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,1,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle+40);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle-40);
			}
			CLAW B 1
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle+30);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle-30);
			}
			CLAW B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(0); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle+20);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle-20);
			}
			CLAW B 1
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle+10);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle-10);
			}
			CLAW B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(0); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle+0);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle-0);
			}
			CLAW B 1
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle-10);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle+10);
			}
			CLAW B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
				A_SetAngle(angle-20);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBall2Crisis-Claw",0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall2-Claw",0,0,"",0,0,0,0); 
				}
				A_SetAngle(angle+20);
			}
			CLAW B 5
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
			}
			goto FireAEnd
		FireAEnd:
			CLAW B 5
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			goto FireEnd

		// Bruiser Blast
		FireB:
			CLAW B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("baron/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,400,1,0); // +4.0% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");
	
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserBallCrisis-Claw",0,0,"",8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserBall-Claw",0,0,"",8,0,0,0); 
				}
			}
			CLAW B 10
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(9); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(7); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(5); }
			}
			goto FireEnd

		// Ground Wave
		FireC:
			CLAW B 0 A_Playsound ("baron/attack")
			CLAW B 2
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,1,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");
	
				A_HellCoreCrisisCheck;
				A_SetAngle(angle-15);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserFireSpawnerCrisis-Claw",0,0,"",8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserFireSpawner-Claw",0,0,"",8,0,0,0); 
				}
				A_SetAngle(angle+15);
			}
			CLAW B 2
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,0,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");
	
				A_HellCoreCrisisCheck;
				A_SetAngle(angle-0);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserFireSpawnerCrisis-Claw",0,0,"",8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserFireSpawner-Claw",0,0,"",8,0,0,0); 
				}
				A_SetAngle(angle-0);
			}
			CLAW B 2
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,0,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");
	
				A_HellCoreCrisisCheck;
				A_SetAngle(angle+15);
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("BruiserFireSpawnerCrisis-Claw",0,0,"",8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("BruiserFireSpawner-Claw",0,0,"",8,0,0,0); 
				}
				A_SetAngle(angle-15);
			}
			CLAW B 20
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(18); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(16); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(14); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(12); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(10); }
			}
			goto FireEnd

		FireEnd:
			CLAW CDDEEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready

		AltFire:
			CLAW A 12 ACS_NamedExecuteAlways("HellcoreFireMode",0,0,0)
			Goto Ready
	}
}
actor BruiserFistCI : AetheriusCustomInventory 32230
{
	//$Sprite "HLC2I0"
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	Tag "Bruiser Demon's Fist: [Hellcore] Uses Bruiser Demon attacks [alt-fire selects mode]"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Bruiser Demon's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
		SpawnLoop:
			HLC2 I 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("BruiserFist", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,9,0,0)
			Stop
	}
}

// Archon of Hell's Fist Weapon - Hellcore Weapon #10 [placeholder sprites]
Actor ArchonOfHellBall-Claw : ArchonOfHellBall 
{
	+SPECTRAL
	DamageType "ArchonFist" 
	States
	{
		Spawn:
			BAL7 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",105) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",105) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",105) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",105) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",105) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",105) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",105) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",105) >= 8) { A_ScaleVelocity(2.05); }
	
				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright
			Loop
	}
}
Actor ArchonOfHellBallCrisis-Claw : ArchonOfHellBallCrisis 
{
	+SPECTRAL
	DamageType "ArchonFist" 
	States
	{
		Spawn:
			BAL7 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",105) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",105) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",105) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",105) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",105) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",105) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",105) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",105) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AABB 2 Bright A_SpawnItemEx("ArchonOfHellBallCrisisParticle",0,0,0,0,0,1.28)
			Loop
	}
}
Actor ArchonComet-Claw : ArchonComet 
{
	+SPECTRAL
	DamageType "ArchonFist" 
	States
	{
		Spawn:
			ARCB A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",105) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",105) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",105) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",105) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",105) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",105) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",105) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",105) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AAAABBBBCCCC 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
			Loop
	}
}
Actor ArchonCometCrisis-Claw : ArchonCometCrisis
{
	+SPECTRAL
	DamageType "ArchonFist" 
	States
	{
		Spawn:
			ARCB A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",105) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",105) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",105) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",105) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",105) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",105) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",105) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",105) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" A 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
			"####" AA 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
			"####" A 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
			"####" AA 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
			"####" B 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
			"####" BB 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
			"####" B 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
			"####" BB 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
			"####" C 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
			"####" CC 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
			"####" C 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
			"####" CC 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
			Loop
	}
}
actor ArchonFist : FloraWeapon
{
	//$Sprite "HLC2J0"
	Scale 0.625
	Tag "Archon of Hell's Fist"
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Archon of Hell's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			HLC2 J 1 bright NoDelay ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,9,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop

		Fire: 
			TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,1) == 0, "FireA")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,1) == 1, "FireB")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,1) == 2, "FireC")
			goto FireA

		FireA:
			CLAW B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(2); }
				A_Playsound ("caco/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,400,1,0); // +4% Hellcore Heat, Deal Damage if already above 100% Heat

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw",-4,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw", 0,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw", 4,0,"",8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw",-4,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw", 0,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw", 4,0,"",8,0,0,0); 
				}
			}
			Goto FireEnd

		FireB:
			CLAW B 6
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
			}
			CLAW B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(2); }
				A_Playsound ("caco/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,750,1,0); // +7.5% Hellcore Heat, Deal Damage if already above 100% Heat
	
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw",-6,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw",-4,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw",-2,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw", 0,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw", 2,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw", 4,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBallCrisis-Claw", 6,0,"",8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw",-6,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw",-4,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw",-2,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw", 0,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw", 2,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw", 4,0,"",8,0,0,0); 
					A_SpreadAuraFireProjectile("ArchonOfHellBall-Claw", 6,0,"",8,0,0,0); 
				}
			}
			Goto FireEnd

		FireC:
			CLAW B 10
			{
				if (CallACS("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(9); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 2) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(7); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 4) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(5); }
			}
			CLAW B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("weapons/firbfi");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,650,1,0); // +6.5% Hellcore Heat, Deal Damage if already above 100% Heat
	
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("ArchonCometCrisis-Claw", 0,0,"",8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("ArchonComet-Claw", 0,0,"",8,0,0,0); 
				}
			}
			Goto FireEnd

		FireEnd:
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready

		AltFire:
			CLAW A 10 ACS_NamedExecuteAlways("HellcoreFireMode",0,0,1)
			Goto Ready
	}
}
actor ArchonFistCI : AetheriusCustomInventory 32231
{
	//$Sprite "HLC2J0"
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	Tag "Archon of Hell's Fist: [Hellcore] Uses Archon of Hell attacks [alt-fire selects mode]"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Archon of Hell's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,9,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,9,0,0)
		SpawnLoop:
			HLC2 J 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,9,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("ArchonFist", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,10,0,0)
			Stop
	}
}

// Pyro Demon's Fist Weapon - Hellcore Weapon #11 [placeholder sprites]
Actor FireShot-Claw : FireShot 
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			FSHT A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }
	
				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" AAAAAA 1 Bright A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			Loop
	}
}
Actor FireShotCrisis-Claw : FireShotCrisis
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			FSHT A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }
	
				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" A 0 Bright A_SpawnItemEx("FireShotCrisisParticle",0,0,0,0,0,3.84)
			"####" AA 1 Bright A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			"####" A 0 Bright A_SpawnItemEx("FireShotCrisisParticle",0,0,0,0,0,3.84)
			"####" AA 1 Bright A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			"####" A 0 Bright A_SpawnItemEx("FireShotCrisisParticle",0,0,0,0,0,3.84)
			"####" AA 1 Bright A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			Loop
	}
}
Actor PyroBall-Claw : PyroBall
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			RBAL A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }
	
				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" AAAABBBB 1 BRIGHT 
			Loop
	}
}
Actor PyroBallCrisis-Claw : PyroBallCrisis
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			RBAL A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }
	
				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" A 0 Bright A_SpawnItemEx("PyroBallCrisisParticle",0,0,0,0,0,1.28)
			"####" AA 1 BRIGHT 
			"####" A 0 Bright A_SpawnItemEx("PyroBallCrisisParticle",0,0,0,0,0,1.28)
			"####" AA 1 BRIGHT 
			"####" B 0 Bright A_SpawnItemEx("PyroBallCrisisParticle",0,0,0,0,0,1.28)
			"####" BB 1 BRIGHT 
			"####" B 0 Bright A_SpawnItemEx("PyroBallCrisisParticle",0,0,0,0,0,1.28)
			"####" BB 1 BRIGHT 
			Loop
	}
}
Actor PyroBlast-Claw : PyroBlast
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			SBLL A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" ABCDEFGHIJ 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			"####" A 0 BRIGHT A_SeekerMissile(0,2)
			Loop
	}
}
Actor PyroBlastCrisis-Claw : PyroBlastCrisis
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			SBLL A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" A 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
			"####" AB 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			"####" C 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
			"####" CD 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			"####" E 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
			"####" EF 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			"####" G 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
			"####" GH 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			"####" I 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
			"####" IJ 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
			"####" A 0 BRIGHT A_SeekerMissile(0,2)
			Loop
	}
}
Actor RainCometNull-Claw : RainCometNull
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			RCMN A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" A 0 A_Jump(5,8)
			"####" AAAAAA 1 A_Wander
			"####" A 8 A_CustomMissile("FallingComet",-24,random(0,128),random(0,360),2,random(1,89))
			"####" A 0 Bright { user_theta += 1; }
			"####" A 0 Bright A_JumpIf(user_theta==32,"Death")
			Loop
	}
}
Actor RainCometNullCrisis-Claw : RainCometNullCrisis
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			RCMN A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" A 0 A_Jump(5,8)
			"####" AAAAAA 1 A_Wander
			"####" A 8 A_CustomMissile("FallingCometCrisis",-24,random(0,128),random(0,360),2,random(1,89))
			"####" A 0 Bright { user_theta += 1; }
			"####" A 0 Bright A_JumpIf(user_theta==32,"Death")
			Loop
	}
}
Actor EscapeExplosion-Claw : EscapeExplosion
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			NKXP A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" BC 3 BRIGHT
			"####" D 3 BRIGHT A_Explode(50,192,0)
			"####" EFGHIJKLMNOPQRSTUV 3 BRIGHT
			Stop
	}
}
Actor EscapeExplosionCrisis-Claw : EscapeExplosionCrisis
{
	+SPECTRAL
	DamageType "PyroFist" 
	States
	{
		Spawn:
			NKXP A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
			}
		Idle:
			"####" BC 3 BRIGHT
			"####" D 3 BRIGHT A_Explode((50 * CallACS("CrisisMultiplier")),192,0)
			"####" EFGHIJKLMNOPQRSTUV 3 BRIGHT
			stop
	}
}
actor PyroFist : FloraWeapon
{
	//$Sprite "HLC2K0"
	Scale 0.625
	Tag "Pyro Demon's Fist"
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Pyro Demon's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
		SpawnLoop:
			HLC2 K 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop

		Fire: 
			TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,2) == 0, "FireA")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,2) == 1, "FireB")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,2) == 2, "FireC")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,2) == 3, "FireD")
			goto FireA

		// Attack 1: Pyromatic Shot
		FireA:
			CLAW B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(2); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,350,1,0); // +3.5% Hellcore Heat, Deal Damage if already above 100% Heat
				A_Playsound ("caco/attack");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("FireShotCrisis-Claw",-4,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("FireShotCrisis-Claw", 0,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("FireShotCrisis-Claw", 4,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("FireShot-Claw",-4,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("FireShot-Claw", 0,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("FireShot-Claw", 4,0,"",0,0,0,0); 
				}
			}
			CLAW B 12
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(10); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(6); }
			}
			goto FireEnd

		// Attack 2: Pyroball
		FireB:
			CLAW B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,450,1,0); // +4.5% Hellcore Heat, Deal Damage if already above 100% Heat
				A_Playsound ("caco/attack");
	
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("PyroBlastCrisis-Claw", 0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("PyroBlast-Claw", 0,0,"",0,0,0,0); 
				}
			}
			CLAW B 12
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(10); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(6); }
			}
			goto FireEnd

		// Attack 3: Pyromatic Firebomb
		FireC:
			CLAW B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,1,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
				A_Playsound ("caco/attack");
	
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("RainCometNullCrisis-Claw",  0,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("RainCometNullCrisis-Claw", 90,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("RainCometNullCrisis-Claw",180,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("RainCometNullCrisis-Claw",270,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("RainCometNull-Claw",  0,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("RainCometNull-Claw", 90,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("RainCometNull-Claw",180,0,"",0,0,0,0); 
					A_SpreadAuraFireProjectile("RainCometNull-Claw",270,0,"",0,0,0,0); 
				}
			}
			CLAW B 8
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(4); }
			}
			goto FireEnd

		// Attack 4: Pyroportation
		FireD:
			CLAW B 0
			{
				A_UnSetShootable;
				A_SetInvulnerable;
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,800,1,0); // +8% Hellcore Heat, Deal Damage if already above 100% Heat
				A_HellCoreCrisisCheck;
			}
			TNT1 A 0 A_PlaySound("pyro/tele")
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander
			TNT1 A 0
			{
				if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
					}
					else
					{
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
					}
				}
				else
				if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
					}
					else
					{
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
					}
				}
				else
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
					}
					else
					{
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
					}
				}
			}
			CLAW B 12
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(10); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(6); }
			}
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander // A_ExtChase(0,0,1,1)
			TNT1 A 0 A_PlaySound("pyro/tele")
			TNT1 A 0
			{
				if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
					}
					else
					{
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
					}
				}
				else
				if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
					}
					else
					{
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
					}
				}
				else
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
					}
					else
					{
						A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
						A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
					}
				}
			}
			CLAW B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
				A_UnSetInvulnerable;
				A_SetShootable;
			}
			goto FireEnd

		FireEnd:
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready

		AltFire:
			CLAW A 10 ACS_NamedExecuteAlways("HellcoreFireMode",0,0,2)
			Goto Ready
	}
}
actor PyroFistCI : AetheriusCustomInventory 32232
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	//$Sprite "HLC2K0"
	Tag "Pyro Demon's Fist: [Hellcore] Uses Pyro Demon attacks [alt-fire selects mode]"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Pyro Demon's Fist! \cx[Slot 5]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
		SpawnLoop:
			HLC2 K 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("PyroFist", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,11,0,0)
			Stop
	}
}

// Death Incarnate's Skull Weapon - Hellcore Weapon #12 [placeholder sprites]
Actor DIPuff-Claw : DIPuff { +SPECTRAL DamageType "IncarnateSkull" }
actor IncarnateSkull : FloraWeapon
{
	//$Sprite "HLC2M0"
	Scale 0.625
	Tag "Death Incarnate's Skull"
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Death Incarnate's Skull! \cx[Slot 6]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
		SpawnLoop:
			HLC2 M 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			CLAW B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound("monster/incatk");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,600,1,0); // +6% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");
	
				A_HellCoreCrisisCheck;
	
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireBullets(30,0,10,(random(1,3)*3)*CallACS("CrisisMultiplier"),"DIPuff-Claw",FBF_NORANDOM,FBF_NORANDOM,16384,"",0,0,2,"Cell");
				}
				else
				{
					A_SpreadAuraFireBullets(30,0,10,random(1,3)*3,"DIPuff-Claw",FBF_NORANDOM,FBF_NORANDOM,16384,"",0,0,2,"Cell");
				}
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor IncarnateSkullCI : AetheriusCustomInventory 32233
{
	//$Sprite "HLC2M0"
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	Tag "Death Incarnate's Skull: [Hellcore] Fires off the Death Incarnate's glare"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Death Incarnate's Skull! \cx[Slot 6]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
		SpawnLoop:
			HLC2 M 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("IncarnateSkull", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,12,0,0)
			Stop
	}
}

actor ReviveProj : AetheriusProjectileZSC
{
	//+FLOAT
	//+NOBLOCKMONST
	//+NOGRAVITY
	+FRIENDLY
	+NOCLIP
	Radius 50
	Height 5
	PROJECTILE
	RENDERSTYLE NONE
	Speed 7
	States
	{
		Spawn:
			TNT1 AAAAA 6 A_VileChase
			Stop
		Death:
			TNT1 A 1
			Stop
		Heal:
			TNT1 A 1
			Stop
	}
}

actor ReviveProj2 : ReviveProj
{
	-FRIENDLY
}

// Archvile's Hand Weapon - Hellcore Weapon #13 [placeholder sprites]
actor ArchvileHand : FloraWeapon
{
	//$Sprite "HLC2N0"
	Tag "Archvile's Hand"
	Scale 0.625
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Archvile's Hand! \cx[Slot 6]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
		SpawnLoop:
			HLC2 N 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		AltFire:
			CLAW A 0
			CLAW B 4
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,834,1,0); // +8.34% Hellcore Heat, Deal Damage if already above 100% Heat
				A_PlaySound("NecroSummon");
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW C 4
			{
				A_SpreadAuraFireProjectile("ReviveProj",0,0,"",0,0,0,0);
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW CC 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW D 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW D 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				if (CallACS("StatCheck",0) > 60)
				{
					A_SpreadAuraFireProjectile("ReviveProj",0,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",72,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",144,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",216,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",288,0,"",0,0,0,0);
				}
			}
			CLAW EE 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW FF 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW A 0 A_ReFire
			Goto Ready
		Fire: 
			CLAW B 1
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,500,1,0);
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
				A_Light2;
				A_VileStart;
				A_VileChase;
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellCoreCrisisCheck;
				if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_VileTarget("ArchvileFireCrisis");
						A_VileTarget("ArchvileFireCrisis");
						A_VileTarget("ArchvileFireCrisis");
						A_VileTarget("ArchvileFireCrisis");
						A_VileTarget("ArchvileFireCrisis");
						A_VileTarget("ArchvileFireCrisis");
						A_VileTarget("ArchvileFireCrisis");
					}
					else
					{
						A_VileTarget("ArchvileFire");
						A_VileTarget("ArchvileFire");
						A_VileTarget("ArchvileFire");
						A_VileTarget("ArchvileFire");
						A_VileTarget("ArchvileFire");
						A_VileTarget("ArchvileFire");
						A_VileTarget("ArchvileFire");
					}
				}
				else
				if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_VileTarget("ArchvileFireCrisis");
						A_VileTarget("ArchvileFireCrisis");
						A_VileTarget("ArchvileFireCrisis");
					}
					else
					{
						A_VileTarget("ArchvileFire");
						A_VileTarget("ArchvileFire");
						A_VileTarget("ArchvileFire");
					}
				}
				else
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_VileTarget("ArchvileFireCrisis");
					}
					else
					{
						A_VileTarget("ArchvileFire");
					}
				}
			}
			CLAW BBBBBB 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellCoreCrisisCheck;
				if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
					else
					{
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
				}
				else
				if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
					else
					{
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
				}
				else
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
					else
					{
						A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
				}
			}
			CLAW B 10
			{
				A_Light0;
				if (CallACS("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(9); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(8); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(7); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(5); }
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}
actor ArchvileHandCI : AetheriusCustomInventory 32234
{
	//$Sprite "HLC2N0"
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	Tag "Archvile's Hand: [Hellcore] Uses Archvile's Immolation and Resurrection Abilities."
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Arch Vile's Hand! \cx[Slot 6]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
		SpawnLoop:
			HLC2 N 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("ArchvileHand", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,13,0,0)
			Stop
	}
}


actor GravityHPBall : AetheriusFastProjectileZSC
{
	Damage (0)
	+MISSILE
	+PIERCEARMOR
	+FORCERADIUSDMG
	+FORCEPAIN
	+NODAMAGETHRUST
	+CANNOTPUSH
	+NOTIMEFREEZE
	+FOILINVUL
	RenderStyle Add
	DamageType "GravityHP"
	Alpha 0.0
	Speed 511
	Radius 1
	Height 1
	FastSpeed 511
	SeeSound "null"
	DeathSound "null"

	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1 A_SeekerMissile(360,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64)
			loop
		Death:
			TNT1 A 0 
			TNT1 A 0 A_PlaySound("monster/diagra")
			TNT1 A 0 bright A_SpawnItem("DiabloistGravityHPTargeter")
			stop
	}
}

actor GravityMPBall : GravityHPBall
{
	DamageType "GravityMP"
}

actor GravityHPMPBall : GravityHPBall
{
	DamageType "GravityHPMP"
}

// Diabloist's Hand Weapon - Hellcore Weapon #14 [placeholder sprites]
Actor DFlare-Claw : DFlare 
{
	+SPECTRAL
	DamageType "DiabloistHand" 
	States
	{
		Spawn:
			VBAL A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" A 1 Bright A_CustomMissile("MFlareFX",0,0,0,0)
			"####" AA 1 Bright
			"####" B 1 Bright A_CustomMissile("MFlareFX",0,0,0,0)
			"####" BB 1 Bright
			Loop
	}
}
Actor DFlareCrisis-Claw : DFlareCrisis 
{
	+SPECTRAL
	DamageType "DiabloistHand" 
	States
	{
		Spawn:
			VBAL A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" A 0 Bright A_SpawnItemEx("DFlareCrisisParticle",0,0,0,0,0,1.28)
			"####" A 1 Bright A_CustomMissile("MFlareFX",0,0,0,0)
			"####" A 1 Bright
			"####" A 1 Bright A_SpawnItemEx("DFlareCrisisParticle",0,0,0,0,0,1.28)
			"####" B 1 Bright A_CustomMissile("MFlareFX",0,0,0,0)
			"####" B 1 Bright A_SpawnItemEx("DFlareCrisisParticle",0,0,0,0,0,1.28)
			"####" B 1 Bright
			Loop
	}
}
Actor DTracer-Claw : DTracer 
{
	+SPECTRAL
	DamageType "DiabloistHand" 
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			TNT1 A 1 Bright A_SeekerMissile (10,15)
			TNT1 A 0 Bright A_Countdown
			TNT1 A 0 Bright A_CustomMissile("DTracerPuff",0,0,0,0)
			Loop
	}
}
Actor DTracerCrisis-Claw : DTracerCrisis
{
	+SPECTRAL
	DamageType "DiabloistHand" 
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			TNT1 A 1 Bright A_SeekerMissile (10,15)
			TNT1 A 0 Bright A_Countdown
			TNT1 A 0 Bright A_CustomMissile("DTracerPuffCrisis",0,0,0,0)
			Loop
	}
}
Actor DMissile-Claw : DMissile
{
	+SPECTRAL
	DamageType "DiabloistHand" 
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" AAAA 1 Bright
			"####" A 1 A_CFlamePuff
			Goto Death+1
	}
}
Actor DMissileCrisis-Claw : DMissileCrisis
{
	+SPECTRAL
	DamageType "DiabloistHand" 
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" A 0 Bright A_SpawnItemEx("DMissileCrisisParticle",0,0,0,0,0,1.28)
			"####" AA 1 Bright
			"####" A 0 Bright A_SpawnItemEx("DMissileCrisisParticle",0,0,0,0,0,1.28)
			"####" AA 1 Bright
			"####" A 0 Bright A_SpawnItemEx("DMissileCrisisParticle",0,0,0,0,0,1.28)
			"####" A 1 A_CFlamePuff
			Goto Death+1
	}
}
Actor DFire-Claw : DFire
{
	+SPECTRAL
	DamageType "DiabloistHand" 
	States
	{
		Spawn:
			VBAL A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			HLFR A 2 Bright
			{
				A_StartFire;
				A_Explode(4,32,0);
			}
			HLFR BABCB 2 Bright
			{
				A_Fire;
				A_Explode(4,32,0);
			}
			HLFR CBCDCDCDEDED 2 Bright
			{
				A_Fire;
				A_Explode(5,32,0);
			}
			HLFR E 2 Bright
			{
				A_FireCrackle;
				A_Explode(4,32,0);
			}
			HLFR FEF 2 Bright
			{
				A_Fire;
				A_Explode(3,32,0);
			}
			HLFR EFG 2 Bright
			{
				A_Fire;
				A_Explode(2,32,0);
			}
			HLFR HGHGH 2 Bright
			{
				A_Fire;
				A_Explode(1,32,0);
			}
			stop
	}
}
Actor DFireCrisis-Claw : DFireCrisis
{
	+SPECTRAL
	DamageType "DiabloistHand" 
	States
	{
		Spawn:
			VBAL A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			HLFR A 2 Bright
			{
				A_StartFire;
				A_Explode((4 * CallACS("CrisisMultiplier")),32,0);
			}
			HLFR BABCB 2 Bright
			{
				A_Fire;
				A_Explode((4 * CallACS("CrisisMultiplier")),32,0);
			}
			HLFR CBCDCDCDEDED 2 Bright
			{
				A_Fire;
				A_Explode((5 * CallACS("CrisisMultiplier")),32,0);
			}
			HLFR E 2 Bright
			{
				A_FireCrackle;
				A_Explode((4 * CallACS("CrisisMultiplier")),32,0);
			}
			HLFR FEF 2 Bright
			{
				A_Fire;
				A_Explode((3 * CallACS("CrisisMultiplier")),32,0);
			}
			HLFR EFG 2 Bright
			{
				A_Fire;
				A_Explode((2 * CallACS("CrisisMultiplier")),32,0);
			}
			HLFR HGHGH 2 Bright
			{
				A_Fire;
				A_Explode((1 * CallACS("CrisisMultiplier")),32,0);
			}
			stop
	}
}
actor DiabloistHand : FloraWeapon
{
	//$Sprite "HLC2O0"
	Tag "Diabloist's Hand"
	Scale 0.625
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Diabloist's Hand! \cx[Slot 6]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
		SpawnLoop:
			HLC2 O 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,3) == 0, "FireA")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,3) == 1, "FireB")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,3) == 2, "FireC")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,3) == 3, "FireD")
			CLAW B 0 A_JumpIf(CallACS("HellcoreFireMode",1,3) == 4, "FireE")
			goto FireA

		// Attack 1: Gravition Glare [no alternate versions]
		FireA:
			CLAW B 12 BRIGHT
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,1250,1,0); // +12.5% Hellcore Heat, Deal Damage if already above 100% Heat
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("GravityHPBall",  0,0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("GravityHPBall",  0,0,"",0,0,0,0); 
				}
			}
			CLAW B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
			}
			goto FireEnd

		// Attack 2: Diabloist Immolation [normal version]
		FireB:
			CLAW B 3 // A_FaceTarget
			{
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,600,1,0); // +6% Hellcore Heat, Deal Damage if already above 100% Heat
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(2); }
				A_Light2;
				A_VileStart;
				A_VileChase;
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			CLAW B 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellCoreCrisisCheck;
				if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_VileTarget("DFireCrisis-Claw");
						A_VileTarget("DFireCrisis-Claw");
						A_VileTarget("DFireCrisis-Claw");
						A_VileTarget("DFireCrisis-Claw");
						A_VileTarget("DFireCrisis-Claw");
						A_VileTarget("DFireCrisis-Claw");
						A_VileTarget("DFireCrisis-Claw");
					}
					else
					{
						A_VileTarget("DFire-Claw");
						A_VileTarget("DFire-Claw");
						A_VileTarget("DFire-Claw");
						A_VileTarget("DFire-Claw");
						A_VileTarget("DFire-Claw");
						A_VileTarget("DFire-Claw");
						A_VileTarget("DFire-Claw");
					}
				}
				else
				if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_VileTarget("DFireCrisis-Claw");
						A_VileTarget("DFireCrisis-Claw");
						A_VileTarget("DFireCrisis-Claw");
					}
					else
					{
						A_VileTarget("DFire-Claw");
						A_VileTarget("DFire-Claw");
						A_VileTarget("DFire-Claw");
					}
				}
				else
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_PlayCrisisAtkSound;
						A_VileTarget("DFireCrisis-Claw");
					}
					else
					{
						A_VileTarget("DFire-Claw");
					}
				}
			}
			CLAW BBB 6
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
			}
			CLAW B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellCoreCrisisCheck;
				if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
					else
					{
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
				}
				else
				if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
					else
					{
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
				}
				else
				{
					if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
					{
						A_VileAttack("vile/stop",40*CallACS("CrisisMultiplier"),140*CallACS("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
					else
					{
						A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					}
				}
			}
			CLAW B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
			}
			CLAW B 9
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(7); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(5); }
			}
			goto FireEnd

		// Attack 3: Fire Thrower [normal version]
		FireC:
			CLAW B 5
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }

				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,63,1,0); // +0.63% Hellcore Heat, Deal Damage if already above 100% Heat
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("DFlareCrisis-Claw",frandom(-4.0,4.0),0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("DFlare-Claw",frandom(-4.0,4.0),0,"",0,0,0,0); 
				}
			}
			CLAW B 6
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
				A_Refire;
			}
			goto FireEnd

		// Attack 4: Fire Blast (aka Cleric's FlameStorm 2.0) [normal version]
		FireD:
			CLAW B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(2); }
				A_Playsound("weapons/firbfi");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,450,1,0); // +4.5% Hellcore Heat, Deal Damage if already above 100% Heat

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("DMissileCrisis-Claw",frandom(-4.0,4.0),0,"",0,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("DMissile-Claw",frandom(-4.0,4.0),0,"",0,0,0,0); 
				}
			}
			CLAW B 2
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
			}
			CLAW B 8
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(4); }
			}
			goto FireEnd

		// Attack 5: Snakes of Fire [normal version]
		FireE:
			CLAW B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_Playsound ("weapons/firbfi");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,600,1,0); // +6% Hellcore Heat, Deal Damage if already above 100% Heat

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("DTracerCrisis-Claw",0,0,"",-40,0,0,0); 
					A_SpreadAuraFireProjectile("DTracerCrisis-Claw",0,0,"", 40,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("DTracer-Claw",0,0,"",-40,0,0,0); 
					A_SpreadAuraFireProjectile("DTracer-Claw",0,0,"", 40,0,0,0); 
				}
			}
			CLAW B 5
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
			}
			goto FireEnd

		FireEnd:
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready

		AltFire:
			CLAW A 10 ACS_NamedExecuteAlways("HellcoreFireMode",0,0,3)
			Goto Ready
	}
}
actor DiabloistHandCI : AetheriusCustomInventory 32235
{
	//$Sprite "HLC2O0"
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	Tag "Diabloist's Hand: [Hellcore] Uses Diabloist attacks [alt-fire selects mode]"
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Diabloist's Hand! \cx[Slot 6]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
		SpawnLoop:
			HLC2 O 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("DiabloistHand", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,14,0,0)
			Stop
	}
}

// Flying Balrog's Fist Weapon - Hellcore Weapon #15 [placeholder sprites]
Actor FlyingBalrogShot1-Claw : FlyingBalrogShot1 
{
	+SPECTRAL
	DamageType "BalrogFist" 
	States
	{
		Spawn:
			MANF A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",110) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",110) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",110) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",110) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",110) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",110) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",110) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",110) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			MANF AABB 2 Bright
			loop
	}
}
Actor FlyingBalrogShot1Crisis-Claw : FlyingBalrogShot1Crisis
{
	+SPECTRAL
	DamageType "BalrogFist" 
	States
	{
		Spawn:
			MANF A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",110) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",110) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",110) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",110) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",110) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",110) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",110) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",110) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			MANF AABB 2 Bright A_SpawnItemEx("FlyingBalrogShot1CrisisParticle",0,0,0,0,0,1.28)
			loop
	}
}
Actor FlyingBalrogShot2-Claw : FlyingBalrogShot2
{
	+SPECTRAL
	DamageType "BalrogFist" 
	States
	{
		Spawn:
			FATB A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",110) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",110) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",110) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",110) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",110) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",110) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",110) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",110) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			FATB AB 2 Bright A_CustomTracer(16.875,"BulletPuffDVDS","RevenantTracerSmoke")
			loop
	}
}
Actor FlyingBalrogShot2Crisis-Claw : FlyingBalrogShot2Crisis
{
 +SPECTRAL
 DamageType "BalrogFist" 
	States
	{
		Spawn:
			FATB A 0 NoDelay
			{
				if (CallACS("MiscVarCheckDECORATE",110) <= 1) { A_ScaleVelocity(1.0); }
				if (CallACS("MiscVarCheckDECORATE",110) == 2) { A_ScaleVelocity(1.15); }
				if (CallACS("MiscVarCheckDECORATE",110) == 3) { A_ScaleVelocity(1.30); }
				if (CallACS("MiscVarCheckDECORATE",110) == 4) { A_ScaleVelocity(1.45); }
				if (CallACS("MiscVarCheckDECORATE",110) == 5) { A_ScaleVelocity(1.60); }
				if (CallACS("MiscVarCheckDECORATE",110) == 6) { A_ScaleVelocity(1.75); }
				if (CallACS("MiscVarCheckDECORATE",110) == 7) { A_ScaleVelocity(1.90); }
				if (CallACS("MiscVarCheckDECORATE",110) >= 8) { A_ScaleVelocity(2.05); }

				if (CallACS("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
				if (CallACS("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
				A_AlertMonsters;
			}
		Idle:
			"####" AB 2 Bright
			{
				A_SpawnItemEx("FlyingBalrogShot2CrisisParticle",0,0,0,0,0,1.28);
				A_CustomTracer(16.875,"BulletPuffDVDS","RevenantTracerSmoke");
			}
			loop
	}
}
actor BalrogFist : FloraWeapon
{
	//$Sprite "HLC2L0"
	Scale 0.625
	Tag "Flying Balrog's Fist"
	+FLOATBOB
	+NOAUTOAIM
	+INVENTORY.ALWAYSPICKUP
	+WEAPON.NOALERT
	Inventory.PickupMessage "You got the Flying Balrog's Fist! \cx[Slot 6]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
		SpawnLoop:
			HLC2 L 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
			Loop
		See:
		Ready: 
			CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Deselect: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
			}
			TNT1 A 0 A_Lower
			CLAW A 1 A_Lower
			Loop
		Select: 
			TNT1 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
			}
			TNT1 A 0 A_Raise
			CLAW A 1 A_Raise
			Loop
		Fire: 
			CLAW B 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
				A_Playsound("imp/attack");
				ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,600,1,0); // +6% Hellcore Heat, Deal Damage if already above 100% Heat
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("FlyingBalrogShot1Crisis-Claw", 15,0,"", 12,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1Crisis-Claw",  0,0,"",  0,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1Crisis-Claw",-15,0,"",-12,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("FlyingBalrogShot1-Claw", 15,0,"", 12,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1-Claw",  0,0,"",  0,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1-Claw",-15,0,"",-12,0,0,0); 
				}
			}
			CLAW B 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(1); }
	
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("FlyingBalrogShot1Crisis-Claw", 10,0,"", 8,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1Crisis-Claw",  0,0,"", 0,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1Crisis-Claw",-10,0,"",-8,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("FlyingBalrogShot1-Claw", 10,0,"", 8,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1-Claw",  0,0,"", 0,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1-Claw",-10,0,"",-8,0,0,0); 
				}
			}
			CLAW B 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	
				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("FlyingBalrogShot1Crisis-Claw", 9,0,"", 6,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1Crisis-Claw", 0,0,"", 0,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1Crisis-Claw",-9,0,"",-6,0,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("FlyingBalrogShot1-Claw", 9,0,"", 6,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1-Claw", 0,0,"", 0,0,0,0); 
					A_SpreadAuraFireProjectile("FlyingBalrogShot1-Claw",-9,0,"",-6,0,0,0); 
				}
			}
			CLAW B 8 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(6); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(4); }
			}
			CLAW CDEF 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			Goto Ready
	}
}

actor BalrogFistCI : AetheriusCustomInventory 32236
{
	//$Sprite "HLC2L0"
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Hellcore Souls"
	ConversationID 385 // 345+ are unused by Strife, this is for use in DIALOUxx/SCRIPTxx references
	Tag "Flying Balrog's Fist: [Hellcore] Shoots the Flying Balrog's Cluster Fire-shot."
	Scale 0.625
	+FLOATBOB
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage "You got the Flying Balrog's Fist! \cx[Slot 6]\c-"
	States
	{
		Spawn:
			TNT1 A 0 bright
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
			TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
		SpawnLoop:
			HLC2 L 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
			Loop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_GiveInventory("BalrogFist", 1)
			TNT1 A 0 A_Playsound("pickuphellcore")
			TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,15,0,0)
			Stop
	}
}

// Sapphire Wand [Flora]
ACTOR MageWandSmokeNew
{
	+NOBLOCKMAP
	+NOGRAVITY
	+SHADOW
	+NOTELEPORT
	+CANNOTPUSH
	+NODAMAGETHRUST
	RenderStyle Translucent
	Alpha 0.6
	Scale 0.75
	States
	{
		Spawn:
			MWN3 A 0 NoDelay
			{
			}
		Idle:
			MWN3 ABAB 4 bright
			Stop
	}
}

ACTOR MageWandMissileNew : SingleDamageFastRipper
{
	var int user_randompain;
	Speed 184
	Radius 1 // 12
	Height 1 // 8
	Damage ((finaldamagedealt * random(3,4)) / 2) // 5
	Scale 0.25
	+RIPPER
	+CANNOTPUSH
	+NODAMAGETHRUST
	+SPAWNSOUNDSOURCE
	DamageType "Magic"
	MissileType "MageWandSmokeNew"
	SeeSound "MageWandFire"
	Obituary "$OB_MPMWEAPWAND"
	States
	{
		Spawn:
			MWN2 C 0 Bright
			{
				A_GetPlayerAttackDamage(44,0);
				user_randompain = 2;
				if (CallACS("MiscVarCheckDECORATE",10053) == 1) { user_randompain += 5; }
				if (CallACS("MiscVarCheckDECORATE",10053) == 2) { user_randompain += 11; }
				if (CallACS("MiscVarCheckDECORATE",10053) == 3) { user_randompain += 18; }
				if (CallACS("MiscVarCheckDECORATE",10053) == 4) { user_randompain += 26; }
				if (CallACS("MiscVarCheckDECORATE",10053) == 5) { user_randompain += 35; }
				if (CallACS("MiscVarCheckDECORATE",10054) == 1) { user_randompain += (5 * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10054) == 2) { user_randompain += (11 * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
			}
			MWN2 CCCCDDDD 1 Bright { A_GetPlayerAttackDamage(44,0); }
			Loop
		Death:
			MWN2 E 4 Bright
			MWN2 F 3 Bright
			MWN2 G 4 Bright
			MWN2 H 3 Bright
			MWN2 I 4 Bright
			Stop
	}
}

ACTOR MageWandMissile2New : MageWandMissileNew
{
	Damage ((finaldamagedealt * random(3,4)) / 2) // 5
	States
	{
		Spawn:
			MWN2 C 0 Bright
			{
				A_GetPlayerAttackDamage(45,0);
				user_randompain = 2;
				if (CallACS("MiscVarCheckDECORATE",10053) == 1) { user_randompain += 5; }
				if (CallACS("MiscVarCheckDECORATE",10053) == 2) { user_randompain += 11; }
				if (CallACS("MiscVarCheckDECORATE",10053) == 3) { user_randompain += 18; }
				if (CallACS("MiscVarCheckDECORATE",10053) == 4) { user_randompain += 26; }
				if (CallACS("MiscVarCheckDECORATE",10053) == 5) { user_randompain += 35; }
				if (CallACS("MiscVarCheckDECORATE",10054) == 1) { user_randompain += (5 * 5) / 2; }
				if (CallACS("MiscVarCheckDECORATE",10054) == 2) { user_randompain += (11 * 5) / 2; }
				if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
			}
			MWN2 CCCCDDDD 1 Bright { A_GetPlayerAttackDamage(45,0); }
			Loop
		Death:
			MWN2 E 4 Bright
			MWN2 F 3 Bright
			MWN2 G 4 Bright
			MWN2 H 3 Bright
			MWN2 I 4 Bright
			Stop
	}
}

ACTOR SapphireWandNew : FloraWeapon 32122
{
	//$NotAngled
	//$Color 14
	//$Category "DV-DS Weapons/Flora/Normal"
	Weapon.SelectionOrder 3600
	Weapon.KickBack 0
	Tag "$TAG_MWEAPWAND"
	+WEAPON.NOAUTOAIM
	+WEAPON.NOALERT
	Tag "Sapphire Wand"
	Inventory.PickupMessage "Picked up a \cvSapphire Wand\c-! \cx[Slot 2]\c-"
	Inventory.PickupSound "pickuphellcore"
	States
	{
		Spawn:
			SWND A 0 NoDelay
			{
				if (GetCVar("dvds_florawandscandrop") <= 0)
				{
					A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
					A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,56);
					A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,206);
					A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,243);
					A_FadeOut(1,1);
				}
				else
				{
					if (CountInv("SapphireWandNew",AAPTR_PLAYER1) > 0)
					{
						if (CountInv("DualSapphireWandsNew",AAPTR_PLAYER1) > 0)
						{
							A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
							A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,56);
							A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,206);
							A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,243);
							A_FadeOut(1,1);
						}
						else
						{
							A_SpawnItemEx("DualSapphireWandsNew");
							A_FadeOut(1,1);
						}
					}
					if (CallACS("CheckCharacterClass") != 2)
					{
						A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
						A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,56);
						A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,206);
						A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,243);
						A_FadeOut(1,1);
					}
				}
			}
			SWND A 1
			Loop
		Select:
			MWN2 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
			}
			MWN2 A 0 A_Raise
			MWN2 A 1 A_Raise
			Loop
		Deselect:
			MWN2 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
			}
			MWN2 A 0 A_Lower
			MWN2 A 1 A_Lower
			Loop
		Ready:
			MWN2 A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Fire:
			MWN2 A 0 A_JumpIf(CallACS("UseManaAttack",(((GetCVar("dvds_florawandmpcost")*1) * 16 - (CallACS("MiscVarCheckDECORATE",10053)+CallACS("MiscVarCheckDECORATE",10054))) / 16 ),2,1) == 0, "Ready")
			MWN2 A 6
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
			}
			MWN2 B 6 Bright Offset(0, 48)
			{
				if (random(1,256) >= 240) { A_AlertMonsters; }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("MageWandMissileNew", 0.0,0,"",0.0,0,0,0.0); 
			}
			MWN2 A 3 Offset(0, 40)
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(2); }
			}
			MWN2 A 3 Offset(0, 36) 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(2); }
				A_ReFire;
			}
			Goto Ready
		AltFire:
			MWN2 A 0 A_JumpIf(CallACS("UseManaAttack",(((GetCVar("dvds_florawandmpcost")*3) * 16 - (CallACS("MiscVarCheckDECORATE",10053)+CallACS("MiscVarCheckDECORATE",10054))) / 16 ),2,1) == 0, "Ready")
			MWN2 A 3
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
			}
			MWN2 B 3 Bright Offset(0, 48)
			{
				if (random(1,256) >= 240) { A_AlertMonsters; }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("MageWandMissile2New",(random(CallACS("GetSapphireWandAltSpread",-1),CallACS("GetSapphireWandAltSpread",1))/100.0),0,"",0.0,0,0,0.0); 
			}
			MWN2 A 1 Offset(0, 40)
			MWN2 A 1 Offset(0, 36) 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
			}
			MWN2 B 3 Bright Offset(0, 48)
			{
				if (random(1,256) >= 240) { A_AlertMonsters; }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("MageWandMissile2New",(random(CallACS("GetSapphireWandAltSpread",-1),CallACS("GetSapphireWandAltSpread",1))/100.0),0,"",0.0,0,0,0.0); 
			}
			MWN2 A 1 Offset(0, 40)
			MWN2 A 1 Offset(0, 36) 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
			}
			MWN2 B 3 Bright Offset(0, 48)
			{
				if (random(1,256) >= 240) { A_AlertMonsters; }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("MageWandMissile2New",(random(CallACS("GetSapphireWandAltSpread",-1),CallACS("GetSapphireWandAltSpread",1))/100.0),0,"",0.0,0,0,0.0); 
			}
			MWN2 A 1 Offset(0, 40)
			MWN2 A 1 Offset(0, 36) 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
				A_ReFire;
			}
			Goto Ready
	}
}

ACTOR DualSapphireWandsNew : FloraWeapon
{
	Weapon.SelectionOrder 3600
	Weapon.KickBack 0
	Tag "Dual Sapphire Wands"
	+WEAPON.NOAUTOAIM
	+WEAPON.NOALERT
	Inventory.PickupMessage "Picked up a \cvSapphire Wand\c-! \cx[Slot 2]\c-"
	Inventory.PickupSound "pickuphellcore"
	States
	{
		Spawn:
			SWND A 0 NoDelay
			{
				if (GetCVar("dvds_florawandscandrop") <= 0)
				{
					A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
					A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,56);
					A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,206);
					A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,243);
					A_FadeOut(1,1);
				}
				else
				{
					if (CountInv("DualSapphireWandsNew",AAPTR_PLAYER1) > 0)
					{
						A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
						A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,56);
						A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,206);
						A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,243);
						A_FadeOut(1,1);
					}
					if (CallACS("CheckCharacterClass") != 2)
					{
						A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
						A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,56);
						A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,206);
						A_SpawnItemEx("DoomSpellMana3",frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(-1.0,1.0),0,0,243);
						A_FadeOut(1,1);
					}
				}
			}
			SWND A 1
			Loop
		Select:
			SWN2 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
			}
			SWN2 A 0 A_Raise
			SWN2 A 1 A_Raise
			Loop
		Deselect:
			SWN2 A 0 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
			}
			SWN2 A 0 A_Lower
			SWN2 A 1 A_Lower
			Loop
		Ready:
			SWN2 A 1 A_WeaponReady(WRF_ALLOWUSER1)
			Loop
		Fire:
			SWN2 A 0 A_JumpIf(CallACS("UseManaAttack",(((GetCVar("dvds_florawandmpcost")*2) * 16 - (CallACS("MiscVarCheckDECORATE",10053)+CallACS("MiscVarCheckDECORATE",10054))) / 16 ),2,1) == 0, "Ready")
			SWN2 A 6
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
			}
			SWN2 F 6 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("MageWandMissileNew", 1.0,0,"", 1.0,0,0,0.0); 
				A_SpreadAuraFireProjectile("MageWandMissileNew",-1.0,0,"",-1.0,0,0,0.0); 
			}
			SWN2 G 3
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(2); }
			}
			SWN2 H 3 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(2); }
				A_ReFire;
			}
			Goto Ready
		AltFire:
			SWN2 A 0 A_JumpIf(CallACS("UseManaAttack",(((GetCVar("dvds_florawandmpcost")*6) * 16 - (CallACS("MiscVarCheckDECORATE",10053)+CallACS("MiscVarCheckDECORATE",10054))) / 16 ),2,1) == 0, "Ready")
			SWN2 A 3
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
			}
			SWN2 F 3 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("MageWandMissile2New", 1.0+(random(CallACS("GetSapphireWandAltSpread",-1),CallACS("GetSapphireWandAltSpread",1))/100.0),0.0,"", 1.0,0,0,0.0); 
				A_SpreadAuraFireProjectile("MageWandMissile2New",-1.0+(random(CallACS("GetSapphireWandAltSpread",-1),CallACS("GetSapphireWandAltSpread",1))/100.0),0.0,"",-1.0,0,0,0.0); 
			}
			SWN2 G 1
			SWN2 H 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
			}
			SWN2 F 3 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("MageWandMissile2New", 1.0+(random(CallACS("GetSapphireWandAltSpread",-1),CallACS("GetSapphireWandAltSpread",1))/100.0),0.0,"", 1.0,0,0,0.0); 
				A_SpreadAuraFireProjectile("MageWandMissile2New",-1.0+(random(CallACS("GetSapphireWandAltSpread",-1),CallACS("GetSapphireWandAltSpread",1))/100.0),0.0,"",-1.0,0,0,0.0); 
			}
			SWN2 G 1
			SWN2 H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
			}
			SWN2 F 3 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
				CallACS("StartTensionCountDown");
				A_SpreadAuraFireProjectile("MageWandMissile2New", 1.0+(random(CallACS("GetSapphireWandAltSpread",-1),CallACS("GetSapphireWandAltSpread",1))/100.0),0.0,"", 1.0,0,0,0.0); 
				A_SpreadAuraFireProjectile("MageWandMissile2New",-1.0+(random(CallACS("GetSapphireWandAltSpread",-1),CallACS("GetSapphireWandAltSpread",1))/100.0),0.0,"",-1.0,0,0,0.0); 
			}
			SWN2 G 1
			SWN2 H 1
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
				A_ReFire;
			}
			Goto Ready
	}
}

actor EWShieldIdleMode : PlaceholderItem { }
actor EWShieldDefendMode : PlaceholderItem { }
actor EWShieldDefendModeExtra : PlaceholderItem { }

actor HWShieldBlockHold : PlaceholderItem 
{ 
	+INVENTORY.KEEPDEPLETED
	Inventory.MaxAmount 1
} 

// EVIL WARRIOR'S SHIELD
ACTOR EvilWarriorShield : KDIZDWeapon 25221
{
	//$Category DV-DS KDIZD Weapons
	//$Sprite "EWSHF0"
	Radius 16
	Height 16
	Speed 6
	Weapon.SlotNumber 9
	Weapon.SlotPriority 0.5
	Weapon.BobSpeed 2.0
	Weapon.BobStyle Alpha
	Weapon.KickBack 0
	Tag "Hell Warrior's Shield"
	Inventory.PickupMessage "You got the Hell Warrior's Shield! \cx[Slot 9]\c-"
	Obituary "%o was ripped apart by %k's Shield."
	BounceType Doom
	+WEAPON.NOALERT
	+DROPOFF
	States
	{
		Ready:
			EWSP A 0
			{
				if (CallACS("CheckCharacterClass") == 2) { return state("Ready3"); }
				else if (CallACS("CheckCharacterClass") == 1) { return state("Ready2"); }
				else { return state("Ready1"); }
				return state("");
			}
		Ready1:
			EWS0 D 1 A_WeaponReady(WRF_ALLOWUSER1)
			Goto Ready
		Ready2:
			EWS1 D 1 A_WeaponReady(WRF_ALLOWUSER1)
			Goto Ready
		Ready3:
			EWS2 D 1 A_WeaponReady(WRF_ALLOWUSER1)
			Goto Ready

		Select:
			EWSP DDD 0
			{
				A_GiveInventory("EWShieldIdleMode",1);
				A_Raise;
			}
			EWSP D 0
			{
				if (CallACS("CheckCharacterClass") == 2) { return state("Select3"); }
				else if (CallACS("CheckCharacterClass") == 1) { return state("Select2"); }
				else { return state("Select1"); }
				return state("");
			}
		Select1:
			EWS0 D 1
			{
				A_GiveInventory("EWShieldIdleMode",1);
				A_Raise;
			}
			goto Select
		Select2:
			EWS1 D 1
			{
				A_GiveInventory("EWShieldIdleMode",1);
				A_Raise;
			}
			goto Select
		Select3:
			EWS2 D 1
			{
				A_GiveInventory("EWShieldIdleMode",1);
				A_Raise;
			}
			goto Select

		Deselect:
			EWSP DDD 0
			{
				A_TakeInventory("EWShieldIdleMode",0x7FFFFFFF);
				A_Lower;
			}
			EWSP D 0
			{
				if (CallACS("CheckCharacterClass") == 2) { return state("Deselect3"); }
				else if (CallACS("CheckCharacterClass") == 1) { return state("Deselect2"); }
				else { return state("Deselect1"); }
				return state("");
			}
		Deselect1:
			EWS0 D 1
			{
				A_TakeInventory("EWShieldIdleMode",0x7FFFFFFF);
				A_Lower;
			}
			goto Deselect
		Deselect2:
			EWS1 D 1
			{
				A_TakeInventory("EWShieldIdleMode",0x7FFFFFFF);
				A_Lower;
			}
			goto Deselect
		Deselect3:
			EWS2 D 1
			{
				A_TakeInventory("EWShieldIdleMode",0x7FFFFFFF);
				A_Lower;
			}
			goto Deselect

		Fire:
			TNT1 A 0
			{
				if (CallACS("UseManaAttack",((GetCVar("dvds_florahwshieldmpcost") * 16 - (CallACS("MiscVarCheckDECORATE",10053)+CallACS("MiscVarCheckDECORATE",10054))) / 16),2,1) == 0) { return state("Ready"); }
				return state("");
			}
			EWSP D 0
			{
				if (CallACS("CheckCharacterClass") == 2) { return state("Fire3"); }
				else if (CallACS("CheckCharacterClass") == 1) { return state("Fire2"); }
				else { return state("Fire1"); }
				return state("");
			}

		Fire1:
			EWS0 D 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS0 C 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS0 B 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS0 A 6 Bright
			{
				A_SetPitch(pitch + 0.5);
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
				A_PHellWarShieldOn;
			}
			EWS0 A 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
				A_PHellWarShieldOn;
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("EvilWarriorShieldBallCrisis", 0,0,"",0,3,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("EvilWarriorShieldBall", 0,0,"",0,3,0,0); 
				}
				if (random(1,8) <= 1) { A_AlertMonsters; }
				A_Recoil(0.25);
			}
			EWS0 A 6 Bright
			{
				A_SetPitch(pitch - 0.5);
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
				A_PHellWarShieldOn;
			}
			EWS0 B 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS0 C 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS0 D 2 Bright
			{
				A_PHellWarShieldOff;
			}
			Goto Ready
		Fire2:
			EWS1 D 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS1 C 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS1 B 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS1 A 6 Bright
			{
				A_SetPitch(pitch + 0.5);
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
				A_PHellWarShieldOn;
			}
			EWS1 A 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
				A_PHellWarShieldOn;
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("EvilWarriorShieldBallCrisis", 0,0,"",0,3,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("EvilWarriorShieldBall", 0,0,"",0,3,0,0); 
				}
				if (random(1,8) <= 1) { A_AlertMonsters; }
				A_Recoil(0.375);
			}
			EWS1 A 6 Bright
			{
				A_SetPitch(pitch - 0.5);
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
				A_PHellWarShieldOn;
			}
			EWS1 B 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS1 C 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS1 D 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
				A_PHellWarShieldOff;
			}
			Goto Ready
		Fire3:
			EWS2 D 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS2 C 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS2 B 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS2 A 6 Bright
			{
				A_SetPitch(pitch + 0.5);
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
				A_PHellWarShieldOn;
			}
			EWS2 A 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
				A_PHellWarShieldOn;
				CallACS("StartTensionCountDown");

				A_HellCoreCrisisCheck;
				if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
				{
					A_PlayCrisisAtkSound;
					A_SpreadAuraFireProjectile("EvilWarriorShieldBallCrisis", 0,0,"",0,3,0,0); 
				}
				else
				{
					A_SpreadAuraFireProjectile("EvilWarriorShieldBall", 0,0,"",0,3,0,0); 
				}
				if (random(1,8) <= 1) { A_AlertMonsters; }
				A_Recoil(0.5);
			}
			EWS2 A 6 Bright
			{
				A_SetPitch(pitch - 0.5);
				if (CallACS("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
				if (CallACS("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
				A_PHellWarShieldOn;
			}
			EWS2 B 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS2 C 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
				A_PHellWarShieldOn;
			}
			EWS2 D 2 Bright
			{
				if (CallACS("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
				A_PHellWarShieldOff;
			}
			Goto Ready

		AltFire:
			EWSP D 0
			{
				if (CallACS("CheckCharacterClass") == 2)
				{
					return state("AltFire3");
				}
				else
				if (CallACS("CheckCharacterClass") == 1)
				{
					return state("AltFire2");
				}
				else
				{
					return state("AltFire1");
				}
				return state("");
			}

		AltFire1:
			EWS0 DEF 2
			{
				A_PHellWarShieldOn;
			}
		AltHold1:
			EWS0 G 2 BRIGHT
			{
				if (CallACS("UseStaminaAttack",14,2) == 0) { return state("AltEnd1"); } // 10
				A_GiveInventory("HWShieldBlockHold",1);

				A_PHellWarShieldOn;
				return state("");
			}
			EWS0 G 0 A_Refire("AltHold1")
			goto AltEnd1
		AltEnd1:
			EWS0 FE 2
			{
				A_TakeInventory("HWShieldBlockHold",0x7FFFFFFF);
				A_PHellWarShieldOn;
			}
		EWS0 D 2
			{
				A_PHellWarShieldOff;
			}
			Goto Ready
		AltFire2:
			EWS1 DEF 2
			{
				A_PHellWarShieldOn;
			}
		AltHold2:
			EWS1 G 2 BRIGHT
			{
				if (CallACS("UseStaminaAttack",21,2) == 0) { return state("AltEnd2"); } // 15
				A_GiveInventory("HWShieldBlockHold",1);

				A_PHellWarShieldOn;
				return state("");
			}
			EWS1 G 0 A_Refire("AltHold2")
			goto AltEnd2
		AltEnd2:
			EWS1 FE 2
			{
				A_TakeInventory("HWShieldBlockHold",0x7FFFFFFF);
				A_PHellWarShieldOn;
			}
			EWS1 D 2
			{
				A_PHellWarShieldOff;
			}
			Goto Ready
		AltFire3:
			EWS2 D 2
			{
				A_PHellWarShieldOn;
			}
			EWS2 EF 2
			{
				A_PHellWarShieldOn;
			}
		AltHold3:
			EWS2 G 2 BRIGHT
			{
				if (CallACS("UseStaminaAttack",28,2) == 0) { return state("AltEnd3"); } // 20
				A_GiveInventory("HWShieldBlockHold",1);
				A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER1|WRF_DISABLESWITCH);
				A_PHellWarShieldOn;
				return state("");
			}
			EWS2 G 0 A_Refire("AltHold3")
			goto AltEnd3
		AltEnd3:
			EWS2 FE 2
			{
				A_TakeInventory("HWShieldBlockHold",0x7FFFFFFF);
				A_PHellWarShieldOn;
			}
			EWS2 D 2
			{
				A_PHellWarShieldOff;
			}
			Goto Ready

		Spawn:
			EWSH ABCDEFGH 3
			Goto Spawn2
		Spawn2:
			EWSH I -1
			Stop

		User1: // Kick - Hell Warrior version
			TNT1 A 0
			{
				if (CallACS("CheckCharacterClass") != 2) 
				{
					if (CallACS("CheckCharacterClass") == 0) { return state("AltHold1"); }
					if (CallACS("CheckCharacterClass") == 1) { return state("AltHold2"); }
				}
				if (CallACS("UseStaminaAttack",CallACS("GetKickStaminaUse",0),2) == 0) 
				{
					if (CountInv("HWShieldBlockHold",AAPTR_PLAYER1) > 0) { return state("AltHold3"); }
					return state("Ready"); 
				}
				return state(""); 
			}
			TNT1 A 0
			{
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
				CallACS("StartTensionCountDown");
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("KickAttackDEFLvl2",1); } else { A_GiveInventory("KickAttackDEFLvl1",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
				if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
				if (random(1,256) > 64) { A_GiveInventory("KickCritBonus1",1,AAPTR_PLAYER1); } else { A_GiveInventory("KickCritBonus2",1,AAPTR_PLAYER1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto KickStart
		KickEnd:
			TNT1 A 0
			{
				A_TakeInventory("KickCritBonus1",0x7FFFFFFF);
				A_TakeInventory("KickCritBonus2",0x7FFFFFFF);
				A_TakeInventory("KickAttackDEFLvl1",0x7FFFFFFF);
				A_TakeInventory("KickAttackDEFLvl2",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster1",0x7FFFFFFF);
				A_TakeInventory("MartArtsMaster2",0x7FFFFFFF);
				if (CountInv("HWShieldBlockHold",AAPTR_PLAYER1) > 0) { return state("AltHold3"); }
				return state("");
			}
			goto Ready
	}
}

ACTOR EvilWarriorShieldBall : AetheriusProjectileZSC
{
	Radius 6
	Height 8
	Speed 8
	Damage (finaldamagedealt) // 2
	PROJECTILE
	RenderStyle Add
	+RANDOMIZE
	+RIPPER
	Alpha 0.8
	Scale 0.4
	ProjectileKickBack 0
	SeeSound "hellwarrior/shotfire"
	DeathSound "hellwarrior/shothit"
	States
	{
		Spawn:
			GRBA ABCDEFGH 2 Bright { A_GetPlayerAttackDamage(52,0); }
			Loop
		Death:
			GRBA AIJKLMN 3 Bright
			Stop
	}
}

ACTOR EvilWarriorShieldBallCrisis : EvilWarriorShieldBall
{
	ProjectileKickBack 0
	Damage (finaldamagedealt * CallACS("CrisisMultiplier")) // 2
	States
	{
		Spawn:
			GRBA ABCDEFGH 2 Bright 
			{
				A_GetPlayerAttackDamage(52,0);
				A_SpawnItemEx("EvilWarriorShieldBallCrisisParticle",0,0,0,0,0,1.28);
			}
			Loop
		Death:
			GRBA AIJKLMN 3 Bright
			Stop
	}
}

// BUBBLES :V
ACTOR HubbleBubbleSmall : AetheriusProjectileZSC
{
	var int user_ripperinterval; var int user_maxripperinterval; var int user_halfmaxripperinterval;
	var int user_bubbletimer; var int user_maxbubbletimer;
	var int user_transpulsetype;
	var int user_sizepulsetype;
	var int user_damageradius;
	var int user_velx; var int user_vely; var int user_velz;

	Radius 6 // 573 wide
	Height 6 // 569 tall
	Scale 0.05
	Speed 1.5
	Damage (0)
	Projectile
	+ROLLSPRITE
	+ROLLCENTER

	+BLOODLESSIMPACT
	+RIPPER
	+FOILINVUL
	+NOEXPLODEFLOOR
	+PIERCEARMOR
	+PAINLESS
	+FORCERADIUSDMG
	+NODAMAGETHRUST
	+DONTREFLECT
	+BOUNCEONWALLS
	+BOUNCEONFLOORS
	+BOUNCEONCEILINGS
	+NOBOUNCESOUND
	+SPECTRAL
	+THRUSPECIES +MTHRUSPECIES

	//+NOINTERACTION
	Species "Players"
	BounceType Doom
	ProjectileKickBack 0
	BounceFactor 1.0
	WallBounceFactor 1.0
	RenderStyle Add
	Alpha 0.8
	//  SeeSound "imp/attack"
	//  DeathSound "imp/shotx"
	States
	{
		Spawn:
			HUBB A 0 NoDelay Bright
			{
				user_transpulsetype = 0;
				user_sizepulsetype = 0;
				user_maxbubbletimer = random(270,315);
				user_maxripperinterval = random(16,24);
				user_maxripperinterval -= (CallACS("StatCheck",6)/32); // Sorcery
				user_maxripperinterval -= (CallACS("StatCheck",8)/64); // Sorcery
				if (user_maxripperinterval < 4) { user_maxripperinterval = 4; }
				user_halfmaxripperinterval = user_maxripperinterval / 2;
				Thing_ChangeTID(0,5001);
			}
		Idle:
			HUBB A 1 Bright
			{
				A_ScaleVelocity(1.0005);
				if (scaleX <= 0.0475 && scaleY <= 0.0475) { user_sizepulsetype = 1; } // Set to Expand
				if (scaleX >= 0.0525 && scaleY >= 0.0525) { user_sizepulsetype = 0; } // Set to Shrink
				if(user_sizepulsetype == 0) { A_SetScale(scaleX-0.000125,scaleY-0.000125); } // Shrinking
				if(user_sizepulsetype == 1) { A_SetScale(scaleX+0.000125,scaleY+0.000125); } // Expanding
	
				if (alpha <= 0.64) { user_transpulsetype = 1; } // Set to Fade In
				if (alpha >= 0.96) { user_transpulsetype = 0; } // Set to Fade Out
				if(user_transpulsetype == 0) { A_FadeOut(0.025); } // Fading Out
				if(user_transpulsetype == 1) { A_FadeIn(0.025); } // Fading In
	
				user_damageradius = 32;
				A_SetRoll(roll+4,SPF_INTERPOLATE,AAPTR_DEFAULT);
				user_ripperinterval += 1;
				if (user_ripperinterval < user_maxripperinterval)
				{
					A_ChangeFlag("PAINLESS",1);
					A_ChangeFlag("FORCEPAIN",0);
				}
				if (user_ripperinterval == user_halfmaxripperinterval)
				{
					if (random(1,4) == 1) 
					{
						A_GetPlayerAttackDamage(46,0);
						A_Explode((finaldamagedealt),user_damageradius,0,0,user_damageradius); 
						A_ChangeFlag("PAINLESS",0); 
						A_ChangeFlag("FORCEPAIN",1);
					}
				}
				if (user_ripperinterval >= user_maxripperinterval)
				{
					A_GetPlayerAttackDamage(46,0);
					A_Explode((finaldamagedealt),user_damageradius,0,0,user_damageradius);
					A_ChangeFlag("PAINLESS",0);
					A_ChangeFlag("FORCEPAIN",1);
	
					user_ripperinterval = 0;
					user_maxripperinterval = random(16,24);
					user_maxripperinterval -= (CallACS("StatCheck",6)/32); // Sorcery
					user_maxripperinterval -= (CallACS("StatCheck",8)/64); // Sorcery
					if (user_maxripperinterval < 4) { user_maxripperinterval = 4; }
					user_halfmaxripperinterval = user_maxripperinterval / 2;
				}
				user_bubbletimer += 1;
				if (user_bubbletimer >= user_maxbubbletimer) { return state("Death"); }
				return state("");
			}
			Loop

		Pop:
		Death:
			TNT1 A 0 Bright
			{
				user_damageradius = 128;
				A_ChangeFlag("PAINLESS",0);
				A_ChangeFlag("FORCEPAIN",1);
				A_PlaySound("HubbleBubblePop");
				A_GetPlayerAttackDamage(46,0);
				A_Explode((finaldamagedealt*4),user_damageradius,0,0,user_damageradius); 
				if (random(1,2) == 1) { return state("Death1"); } else { return state("Death2"); }
				return state("");
			}
		Death1:
			HUBB BCDE 1 Bright
			{
				A_ScaleVelocity(0.0);
				A_SetScale(scaleX*1.250,scaleY*1.250);
			}
			Stop
		Death2:
			HUBB FGHIJ 1 Bright
			{
				A_ScaleVelocity(0.0);
				A_SetScale(scaleX*1.125,scaleY*1.125);
			}
			Stop
	}
}

ACTOR HubbleBubbleLarge : HubbleBubbleSmall
{
	Radius 15 // 573 wide
	Height 15 // 569 tall
	Scale 0.10
	Speed 1.125

	States
	{
		Spawn:
			HUBB A 0 NoDelay Bright
			{
				user_transpulsetype = 0;
				user_sizepulsetype = 0;
				user_maxbubbletimer = random(405,467);
				user_maxripperinterval = random(16,24);
				user_maxripperinterval -= (CallACS("StatCheck",6)/32); // Sorcery
				user_maxripperinterval -= (CallACS("StatCheck",8)/64); // Sorcery
				if (user_maxripperinterval < 4) { user_maxripperinterval = 4; }
				user_halfmaxripperinterval = user_maxripperinterval / 2;
				Thing_ChangeTID(0,5001);
			}
		Idle:
			HUBB A 1 Bright
			{
				A_ScaleVelocity(1.0002);
	
				if (scaleX <= 0.095 && scaleY <= 0.095) { user_sizepulsetype = 1; } // Set to Expand
				if (scaleX >= 0.105 && scaleY >= 0.105) { user_sizepulsetype = 0; } // Set to Shrink
				if (user_sizepulsetype == 0) { A_SetScale(scaleX-0.00025,scaleY-0.00025); } // Shrinking
				if (user_sizepulsetype == 1) { A_SetScale(scaleX+0.00025,scaleY+0.00025); } // Expanding
	
				if (alpha <= 0.64) { user_transpulsetype = 1; } // Set to Fade In
				if (alpha >= 0.96) { user_transpulsetype = 0; } // Set to Fade Out
				if(user_transpulsetype == 0) { A_FadeOut(0.025); } // Fading Out
				if(user_transpulsetype == 1) { A_FadeIn(0.025); } // Fading In
	
				user_damageradius = 64;
				A_SetRoll(roll+4,SPF_INTERPOLATE,AAPTR_DEFAULT);
				user_ripperinterval += 1;
				if (user_ripperinterval < user_maxripperinterval)
				{
					A_ChangeFlag("PAINLESS",1);
					A_ChangeFlag("FORCEPAIN",0);
				}
				if (user_ripperinterval == user_halfmaxripperinterval)
				{
					if (random(1,8) <= 3) 
					{
						A_GetPlayerAttackDamage(47,0);
						A_Explode((finaldamagedealt),user_damageradius,0,0,user_damageradius); 
						A_ChangeFlag("PAINLESS",0); 
						A_ChangeFlag("FORCEPAIN",1);
					}
				}
				if (user_ripperinterval >= user_maxripperinterval)
				{
					A_GetPlayerAttackDamage(47,0);
					A_Explode((finaldamagedealt),user_damageradius,0,0,user_damageradius); 
					A_ChangeFlag("PAINLESS",0);
					A_ChangeFlag("FORCEPAIN",1);
					user_ripperinterval = 0;
					user_maxripperinterval = random(16,24);
					user_maxripperinterval -= (CallACS("StatCheck",6)/32); // Sorcery
					user_maxripperinterval -= (CallACS("StatCheck",8)/64); // Sorcery
					if (user_maxripperinterval < 4) { user_maxripperinterval = 4; }
					user_halfmaxripperinterval = user_maxripperinterval / 2;
				}
				user_bubbletimer += 1;
				if (user_bubbletimer >= user_maxbubbletimer) { return state("Death"); }
				return state("");
			}
			Loop

		Pop:
		Death:
			TNT1 A 0 Bright
			{
				user_damageradius = 256;
				A_ChangeFlag("PAINLESS",0);
				A_ChangeFlag("FORCEPAIN",1);
				A_PlaySound("HubbleBubblePop");
				A_GetPlayerAttackDamage(47,0);
				A_Explode((finaldamagedealt*4),user_damageradius,0,0,user_damageradius); 
				if (random(1,2) == 1) { return state("Death1"); } else { return state("Death2"); }
				return state("");
			}
		Death1:
			HUBB BCDE 1 Bright
			{
				A_ScaleVelocity(0.0);
				A_SetScale(scaleX*1.125,scaleY*1.125);
			}
			Stop
		Death2:
			HUBB FGHIJ 1 Bright
			{
				A_ScaleVelocity(0.0);
				A_SetScale(scaleX*1.125,scaleY*1.125);
			}
			Stop
	}
}

/*
actor BoomSource : AetheriusProjectileZSC
{
	Height 1
	Radius 1
	Scale 0.01
	Speed 0
	Damage (0)
	Projectile
	+BLOODLESSIMPACT
	+RIPPER
	+FOILINVUL
	+NOEXPLODEFLOOR
	+PIERCEARMOR
	+PAINLESS
	+FORCERADIUSDMG
	+NODAMAGETHRUST
	+DONTREFLECT
	+SPECTRAL
	+THRUSPECIES +MTHRUSPECIES

	Species "Players"
	RenderStyle None
	Alpha 0.0
	states
	{
		Spawn:
			TNT1 A 0
			{
				A_SetAngle(frandom(0.0,359.9));
			}
		Death:
			TNT1 A 0
			stop
	}
}
*/